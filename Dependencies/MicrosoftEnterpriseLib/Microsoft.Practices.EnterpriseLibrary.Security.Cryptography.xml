<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Practices.EnterpriseLibrary.Security.Cryptography</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings">
            <summary>
            <para>Configuration settings for cryptography.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings.SectionName">
            <summary>
            Gets the configuration section name for the Cryptography Application Block.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings.GetRegistrations(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            Creates <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> entries registration by a container.
            </summary>
            <returns>The type registration entries.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings.GetUpdatedRegistrations(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            Return the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> objects needed to reconfigure
            the container after a configuration source has changed.
            </summary>
            <remarks>If there are no reregistrations, return an empty sequence.</remarks>
            <param name="configurationSource">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> containing
            the configuration information.</param>
            <returns>The sequence of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> objects.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings.DefaultHashProviderName">
            <summary>
            The instance name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings.HashProviders">
            <summary>
            <para>Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings.HashProviders"/>.</para>
            </summary>
            <value>
            <para>The hash providers available in configuration. The default is an empty collection.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>hashProviders</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings.DefaultSymmetricCryptoProviderName">
            <summary>
            The instance name of the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings.SymmetricCryptoProviders">
            <summary>
            TODOC
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData">
            <summary>
            Configuration object for Custom Providers.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashProviderData">
            <summary>
            <para>Represents the common configuration data for all hash providers.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashProviderData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashProviderData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashProviderData.#ctor(System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashProviderData"/> clas with a name and a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> type.
            </summary>
            <param name="type">The type of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashProviderData.#ctor(System.String,System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashProviderData"/> clas with a name and a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> type.
            </summary>
            <param name="name">The name of the configured <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/>.</param>
            <param name="type">The type of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashProviderData.GetRegistrations(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> instance describing the provider represented by 
            this configuration object.
            </summary>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> instance describing a provider.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashProviderData.GetInstrumentationProviderRegistration(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            
            </summary>
            <param name="configurationSource"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.#ctor">
            <summary>
            Initializes with default values.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.#ctor(System.String,System.Type)">
            <summary>
            Initializes with name and provider type.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.#ctor(System.String,System.String)">
            <summary>
            Initializes with name and fully qualified type name of the provider type.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#Security#Cryptography#Configuration#CustomHashProviderData}#BaseGetPropertyValue(System.Configuration.ConfigurationProperty)">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#Security#Cryptography#Configuration#CustomHashProviderData}#BaseSetPropertyValue(System.Configuration.ConfigurationProperty,System.Object)">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#Security#Cryptography#Configuration#CustomHashProviderData}#BaseUnmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#Security#Cryptography#Configuration#CustomHashProviderData}#BaseReset(System.Configuration.ConfigurationElement)">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#Security#Cryptography#Configuration#CustomHashProviderData}#BaseIsModified">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.SetAttributeValue(System.String,System.String)">
            <summary>
            Sets the attribute value for a key.
            </summary>
            <param name="key">The attribute name.</param>
            <param name="value">The attribute value.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>
            Modifies the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/> object to remove all values that should not be saved. 
            </summary>
            <param name="sourceElement">A <see cref="T:System.Configuration.ConfigurationElement"/> object at the current level containing a merged view of the properties.</param>
            <param name="parentElement">A parent <see cref="T:System.Configuration.ConfigurationElement"/> object or <see langword="null"/> if this is the top level.</param>		
            <param name="saveMode">One of the <see cref="T:System.Configuration.ConfigurationSaveMode"/> values.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.Reset(System.Configuration.ConfigurationElement)">
            <summary>
            Resets the internal state of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/> object, 
            including the locks and the properties collection.
            </summary>
            <param name="parentElement">The parent element.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.IsModified">
            <summary>
            Indicates whether this configuration element has been modified since it was last 
            saved or loaded when implemented in a derived class.
            </summary>
            <returns><see langword="true"/> if the element has been modified; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>
            Called when an unknown attribute is encountered while deserializing the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/> object.
            </summary>
            <param name="name">The name of the unrecognized attribute.</param>
            <param name="value">The value of the unrecognized attribute.</param>
            <returns><see langword="true"/> if the processing of the element should continue; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.GetRegistrations(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.Properties">
            <summary>
            Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection"/> of the properties that are defined for 
            this configuration element when implemented in a derived class. 
            </summary>
            <value>
            A <see cref="T:System.Configuration.ConfigurationPropertyCollection"/> of the properties that are defined for this
            configuration element when implemented in a derived class. 
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.TypeName">
            <summary>
            Overridden in order to apply <see cref="T:System.ComponentModel.BrowsableAttribute"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.Attributes">
            <summary>
            Gets or sets custom configuration attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#Security#Cryptography#Configuration#CustomHashProviderData}#Helper">
            <summary>
            Gets the helper.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData">
            <summary>
            Configuration object for Custom Providers.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData">
            <summary>
            <para>Represents the common configuration data for all symmetric cryptography providers.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData.#ctor">
            <summary>
            <para>Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData.#ctor(System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData"/> class with a name and a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/>.
            </summary>
            <param name="type">The type of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData.#ctor(System.String,System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData"/> class with a name and a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/>.
            </summary>
            <param name="name">The name of the configured <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/>.</param>
            <param name="type">The type of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData.GetRegistrations(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> instance describing the provider represented by 
            this configuration object.
            </summary>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> instance describing a provider.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData.GetInstrumentationProviderRegistration(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            
            </summary>
            <param name="configurationSource"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.#ctor">
            <summary>
            Initializes with default values.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.#ctor(System.String,System.Type)">
            <summary>
            Initializes with name and provider type.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.#ctor(System.String,System.String)">
            <summary>
            Initializes with name and fully qualified type name of the provider type.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#Security#Cryptography#Configuration#CustomSymmetricCryptoProviderData}#BaseGetPropertyValue(System.Configuration.ConfigurationProperty)">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#Security#Cryptography#Configuration#CustomSymmetricCryptoProviderData}#BaseSetPropertyValue(System.Configuration.ConfigurationProperty,System.Object)">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#Security#Cryptography#Configuration#CustomSymmetricCryptoProviderData}#BaseUnmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#Security#Cryptography#Configuration#CustomSymmetricCryptoProviderData}#BaseReset(System.Configuration.ConfigurationElement)">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#Security#Cryptography#Configuration#CustomSymmetricCryptoProviderData}#BaseIsModified">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.SetAttributeValue(System.String,System.String)">
            <summary>
            Sets the attribute value for a key.
            </summary>
            <param name="key">The attribute name.</param>
            <param name="value">The attribute value.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>
            Modifies the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/> object to remove all values that should not be saved. 
            </summary>
            <param name="sourceElement">A <see cref="T:System.Configuration.ConfigurationElement"/> object at the current level containing a merged view of the properties.</param>
            <param name="parentElement">A parent <see cref="T:System.Configuration.ConfigurationElement"/> object or <see langword="null"/> if this is the top level.</param>		
            <param name="saveMode">One of the <see cref="T:System.Configuration.ConfigurationSaveMode"/> values.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.Reset(System.Configuration.ConfigurationElement)">
            <summary>
            Resets the internal state of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/> object, 
            including the locks and the properties collection.
            </summary>
            <param name="parentElement">The parent element.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.IsModified">
            <summary>
            Indicates whether this configuration element has been modified since it was last 
            saved or loaded when implemented in a derived class.
            </summary>
            <returns><see langword="true"/> if the element has been modified; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>
            Called when an unknown attribute is encountered while deserializing the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/> object.
            </summary>
            <param name="name">The name of the unrecognized attribute.</param>
            <param name="value">The value of the unrecognized attribute.</param>
            <returns><see langword="true"/> if the processing of the element should continue; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.GetRegistrations(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> instance describing the provider represented by 
            this configuration object.
            </summary>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> instance describing a provider.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.Properties">
            <summary>
            Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection"/> of the properties that are defined for 
            this configuration element when implemented in a derived class. 
            </summary>
            <value>
            A <see cref="T:System.Configuration.ConfigurationPropertyCollection"/> of the properties that are defined for this
            configuration element when implemented in a derived class. 
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.TypeName">
            <summary>
            Overridden in order to apply <see cref="T:System.ComponentModel.BrowsableAttribute"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.Attributes">
            <summary>
            Gets or sets custom configuration attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#Security#Cryptography#Configuration#CustomSymmetricCryptoProviderData}#Helper">
            <summary>
            Gets the helper.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.AddCryptographySettings">
            <summary>
              Looks up a localized string similar to Add Cryptography Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CryptographySettingsDefaultHashProviderNameDescription">
            <summary>
              Looks up a localized string similar to The name of the Hash Provider to use when code does specify the name of a configured Hash Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CryptographySettingsDefaultHashProviderNameDisplayName">
            <summary>
              Looks up a localized string similar to Default Hash Provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CryptographySettingsDefaultSymmetricCryptoProviderNameDescription">
             <summary>
               Looks up a localized string similar to The name of the Symmetric Cryptography Provider to use when code does specify 
            the name of a configured Symmetric Cryptography Provider..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CryptographySettingsDefaultSymmetricCryptoProviderNameDisplayName">
            <summary>
              Looks up a localized string similar to Default Symmetric Crypto Provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CryptographySettingsDescription">
            <summary>
              Looks up a localized string similar to Configuration settings for the Cryptography Application Block..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CryptographySettingsDisplayName">
            <summary>
              Looks up a localized string similar to Cryptography Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CryptographySettingsHashProvidersDescription">
            <summary>
              Looks up a localized string similar to The list of configured Hash Providers for the Cryptography Application Block..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CryptographySettingsHashProvidersDisplayName">
            <summary>
              Looks up a localized string similar to Hash Providers.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CryptographySettingsSymmetricCryptoProvidersDescription">
            <summary>
              Looks up a localized string similar to The list of configured Symmetric Cryptography Providers for the Cryptography Application Block..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CryptographySettingsSymmetricCryptoProvidersDisplayName">
            <summary>
              Looks up a localized string similar to Symmetric Cryptography Providers.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomHashProviderDataAddCommand">
            <summary>
              Looks up a localized string similar to Custom Hash Provider (using type picker).
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomHashProviderDataDescription">
            <summary>
              Looks up a localized string similar to A Hash Provider implemented as a custom class, and added to Enterprise Library..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomHashProviderDataDisplayName">
            <summary>
              Looks up a localized string similar to Custom Hash Provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomHashProviderDataNameDescription">
            <summary>
              Looks up a localized string similar to The name of the Custom Hash Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomHashProviderDataNameDisplayName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomHashProviderDataTypeNameDescription">
            <summary>
              Looks up a localized string similar to The fully qualified type name of the Custom Hash Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomHashProviderDataTypeNameDisplayName">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomSymmetricCryptoProviderDataAddCommand">
            <summary>
              Looks up a localized string similar to Custom Symmetric Crypto Provider (using type picker).
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomSymmetricCryptoProviderDataAlgorithmTypeNameDescription">
             <summary>
               Looks up a localized string similar to The fully qualified type name of a class that derives from SymmetricAlgorithm and implements 
            the cryptography algorithm for this provider..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomSymmetricCryptoProviderDataAlgorithmTypeNameDisplayName">
            <summary>
              Looks up a localized string similar to Algorithm Type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomSymmetricCryptoProviderDataDescription">
            <summary>
              Looks up a localized string similar to A Symmetric Cryptography Provider implemented as a custom class, and added to Enterprise Library..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomSymmetricCryptoProviderDataDisplayName">
            <summary>
              Looks up a localized string similar to Custom Symmetric Crypto Provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomSymmetricCryptoProviderDataNameDescription">
            <summary>
              Looks up a localized string similar to The name of the Custom Symmetric Crypto Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomSymmetricCryptoProviderDataNameDisplayName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomSymmetricCryptoProviderDataProtectedKeyFilenameDescription">
             <summary>
               Looks up a localized string similar to The absolute path and the file name of the file that contains the encrypted key. 
            This value is not required for DPAPI symmetric providers..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomSymmetricCryptoProviderDataProtectedKeyFilenameDisplayName">
            <summary>
              Looks up a localized string similar to Key File Path and Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomSymmetricCryptoProviderDataProtectedKeyProtectionScopeDescription">
             <summary>
               Looks up a localized string similar to Specifies whether the machine store or the user store is used for storing secrets. 
            Possible values are CurrentUser and LocalMachine. This value is not required for DPAPI symmetric providers..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomSymmetricCryptoProviderDataProtectedKeyProtectionScopeDisplayName">
            <summary>
              Looks up a localized string similar to Key Protection Scope.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomSymmetricCryptoProviderDataTypeNameDescription">
            <summary>
              Looks up a localized string similar to The fully qualified type name of the Custom Symmetric Crypto Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.CustomSymmetricCryptoProviderDataTypeNameDisplayName">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.DpapiSymmetricCryptoProviderDataDescription">
            <summary>
              Looks up a localized string similar to A Symmetric Cryptography Provider that uses Data Protection API to encrypt and decrypt secrets..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.DpapiSymmetricCryptoProviderDataDisplayName">
            <summary>
              Looks up a localized string similar to DPAPI Symmetric Crypto Provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.DpapiSymmetricCryptoProviderDataNameDescription">
            <summary>
              Looks up a localized string similar to The name of the DPAPI Symmetric Crypto Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.DpapiSymmetricCryptoProviderDataNameDisplayName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.DpapiSymmetricCryptoProviderDataScopeDescription">
             <summary>
               Looks up a localized string similar to The scope for which the key is valid. 
            CurrentUser means that the provider will use the current user&apos;s profile to generate the key, and only that user can decrypt secrets.
            LocalMachine means that any code running on the machine has access to the protected key, and can decrypt any secret encrypted in LocalMachine mode..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.DpapiSymmetricCryptoProviderDataScopeDisplayName">
            <summary>
              Looks up a localized string similar to Protection Scope.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.DpapiSymmetricCryptoProviderDataTypeNameDescription">
            <summary>
              Looks up a localized string similar to The fully qualified type name of the DPAPI Symmetric Crypto Provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.DpapiSymmetricCryptoProviderDataTypeNameDisplayName">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.ExportCyrptographyKeyCommandTitle">
            <summary>
              Looks up a localized string similar to Export Key ....
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashAlgorithmProviderDataAlgorithmTypeNameDescription">
            <summary>
              Looks up a localized string similar to The fully qualified type name of a class that derives from HashAlgorithm and implements the hashing algorithm for this provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashAlgorithmProviderDataAlgorithmTypeNameDisplayName">
            <summary>
              Looks up a localized string similar to Algorithm Type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashAlgorithmProviderDataDescription">
            <summary>
              Looks up a localized string similar to A hash algorithm provider that uses .NET hash algorithms that do not require a generated key..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashAlgorithmProviderDataDisplayName">
            <summary>
              Looks up a localized string similar to Hash Algorithm Provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashAlgorithmProviderDataNameDescription">
            <summary>
              Looks up a localized string similar to The name of the Hash Algorithm Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashAlgorithmProviderDataNameDisplayName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashAlgorithmProviderDataSaltEnabledDescription">
             <summary>
               Looks up a localized string similar to Determines if a random string (a salt value) is generated and pre-pended to the plaintext before hashing. 
            Using salt helps to guard against dictionary attacks, which take longer because every entry in the dictionary 
            must be hashed with every possible salt value..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashAlgorithmProviderDataSaltEnabledDisplayName">
            <summary>
              Looks up a localized string similar to Salt Enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashAlgorithmProviderDataTypeNameDescription">
            <summary>
              Looks up a localized string similar to The fully qualified type name of the Hash Algorithm Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashAlgorithmProviderDataTypeNameDisplayName">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashProviderDataDescription">
            <summary>
              Looks up a localized string similar to A base class for all hash providers..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashProviderDataDisplayName">
            <summary>
              Looks up a localized string similar to Hash Provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashProviderDataNameDescription">
            <summary>
              Looks up a localized string similar to The name of the Hash Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashProviderDataNameDisplayName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashProviderDataTypeNameDescription">
            <summary>
              Looks up a localized string similar to The fully qualified type name of the Hash Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.HashProviderDataTypeNameDisplayName">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.KeyedHashAlgorithmProviderDataAlgorithmTypeNameDescription">
            <summary>
              Looks up a localized string similar to The fully qualified type name of a class that derives from HashAlgorithm and implements the hashing algorithm for this provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.KeyedHashAlgorithmProviderDataAlgorithmTypeNameDisplayName">
            <summary>
              Looks up a localized string similar to Algorithm Type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.KeyedHashAlgorithmProviderDataDescription">
            <summary>
              Looks up a localized string similar to A hash algorithm provider that uses .NET hash algorithms that require a generated key..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.KeyedHashAlgorithmProviderDataDisplayName">
            <summary>
              Looks up a localized string similar to Keyed Hash Algorithm Provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.KeyedHashAlgorithmProviderDataNameDescription">
            <summary>
              Looks up a localized string similar to The name of the Keyed Hash Algorithm Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.KeyedHashAlgorithmProviderDataNameDisplayName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.KeyedHashAlgorithmProviderDataProtectedKeyFilenameDescription">
             <summary>
               Looks up a localized string similar to The absolute path and the file name of the file that contains the encrypted key. 
            This value is required for keyed hash algorithms..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.KeyedHashAlgorithmProviderDataProtectedKeyFilenameDisplayName">
            <summary>
              Looks up a localized string similar to Key File Path and Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.KeyedHashAlgorithmProviderDataProtectedKeyProtectionScopeDescription">
             <summary>
               Looks up a localized string similar to Specifies whether the machine store or the user store is used for storing secrets. 
            Possible values are CurrentUser and LocalMachine. This value is required for keyed hash algorithms..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.KeyedHashAlgorithmProviderDataProtectedKeyProtectionScopeDisplayName">
            <summary>
              Looks up a localized string similar to Key Protection Scope.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.KeyedHashAlgorithmProviderDataSaltEnabledDescription">
             <summary>
               Looks up a localized string similar to Determines if a random string (a salt value) is generated and pre-pended to the plaintext before hashing. 
            Using salt helps to guard against dictionary attacks, which take longer because every entry in the dictionary 
            must be hashed with every possible salt value..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.KeyedHashAlgorithmProviderDataSaltEnabledDisplayName">
            <summary>
              Looks up a localized string similar to Salt Enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.KeyedHashAlgorithmProviderDataTypeNameDescription">
            <summary>
              Looks up a localized string similar to The fully qualified type name of the Keyed Hash Algorithm Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.KeyedHashAlgorithmProviderDataTypeNameDisplayName">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricAlgorithmProviderDataAlgorithmTypeNameDescription">
            <summary>
              Looks up a localized string similar to The fully qualified type name of a class that derives from SymmetricAlgorithm and implements the cryptography algorithm for this provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricAlgorithmProviderDataAlgorithmTypeNameDisplayName">
            <summary>
              Looks up a localized string similar to Algorithm Type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricAlgorithmProviderDataDescription">
            <summary>
              Looks up a localized string similar to A symmetric cryptography algorithm provider that uses .NET symmetric algorithms..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricAlgorithmProviderDataDisplayName">
            <summary>
              Looks up a localized string similar to Symmetric Algorithm Provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricAlgorithmProviderDataNameDescription">
            <summary>
              Looks up a localized string similar to The name of the Symmetric Algorithm Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricAlgorithmProviderDataNameDisplayName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricAlgorithmProviderDataProtectedKeyFilenameDescription">
             <summary>
               Looks up a localized string similar to The absolute path and the file name of the file that contains the encrypted key. 
            This value is not required for DPAPI symmetric providers..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricAlgorithmProviderDataProtectedKeyFilenameDisplayName">
            <summary>
              Looks up a localized string similar to Key File Path and Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricAlgorithmProviderDataProtectedKeyProtectionScopeDescription">
             <summary>
               Looks up a localized string similar to Specifies whether the machine store or the user store is used for storing secrets. 
            Possible values are CurrentUser and LocalMachine. 
            This value is not required for DPAPI symmetric providers..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricAlgorithmProviderDataProtectedKeyProtectionScopeDisplayName">
            <summary>
              Looks up a localized string similar to Key Protection Scope.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricAlgorithmProviderDataTypeNameDescription">
            <summary>
              Looks up a localized string similar to The fully qualified type name of the Symmetric Algorithm Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricAlgorithmProviderDataTypeNameDisplayName">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricProviderDataDescription">
            <summary>
              Looks up a localized string similar to A base class for all symmetric cryptography providers..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricProviderDataDisplayName">
            <summary>
              Looks up a localized string similar to Symmetric Provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricProviderDataNameDescription">
            <summary>
              Looks up a localized string similar to The name of the Symmetric Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricProviderDataNameDisplayName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricProviderDataTypeNameDescription">
            <summary>
              Looks up a localized string similar to The fully qualified type name of the Symmetric Provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.SymmetricProviderDataTypeNameDisplayName">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData">
            <summary>
            <para>Configuration settings for a DPAPI Symmetric Cryptography Provider.</para>
            </summary>		
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData.#ctor(System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            <para>Initialize a new instnace of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData"/> class with entropy and a <see cref="T:System.Security.Cryptography.DataProtectionScope"/>.</para>
            </summary>
            <param name="name">The name of the configued instance.</param>		
            <param name="scope">
            <para>One of the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> values.</para>
            </param> 
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData.GetRegistrations(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> instance describing the provider represented by 
            this configuration object.
            </summary>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> instance describing a provider.</returns>
            <param name="configurationSource">TODO</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData.Scope">
            <summary>
            <para>Gets or sets the <see cref="T:System.Security.Cryptography.ProtectedData"/> storage scope.</para>
            </summary>
            <value>
            <para>One of the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> values.</para>
            </value>		
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ConfigureCryptographyExtension">
            <summary>
            Base class for fluent interface builders that extend the cryptography configuration fluent interface.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography">
            <summary>
            Root fluent interface for building up caching configuration.<br/>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptographyExtension">
            <summary>
            Allows access to the underlying <see cref="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptographyExtension.CryptographySettings"/> being configured.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptographyExtension.CryptographySettings">
            <summary>
            Returns the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptographyExtension.CryptographySettings"/> instance that is currently being build up.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ConfigureCryptographyExtension.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ConfigureCryptographyExtension"/> passing the cryptography configuration's fluent interface builder.
            </summary>
            <param name="context">The current caching configuration's fluent interface builder.<br/>
            This interface must implement <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptographyExtension"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ConfigureCryptographyExtension.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>
            Base class for fluent interface builders that extend the cryptography configuration fluent interface.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ConfigureCryptographyExtension.CryptographySettings">
            <summary>
            Returns the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ConfigureCryptographyExtension.CryptographySettings"/> instance that is currently being build up.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingCustomHashCryptoProviderNamedExtension">
            <summary>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography"/> extensions to support configuring custom <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> instances.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingCustomHashCryptoProviderNamedExtension.EncryptUsingCustomHashProviderNamed``1(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography,System.String)">
            <summary>
            Adds a custom hash provider of type <typeparamref name="TCustomHashCryptoProvider"/> to the cryptography configuration.
            </summary>
            <typeparam name="TCustomHashCryptoProvider">The concrete type of the hash provider.</typeparam>
            <param name="context">Fluent interface extension point.</param>
            <param name="customHashCryptoProviderName">The name of the hash provider that should be added to configuration.</param>
            <returns>Fluent interface that can be used to further configure the created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/>. </returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingCustomHashCryptoProviderNamedExtension.EncryptUsingCustomHashProviderNamed(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography,System.String,System.Type)">
            <summary>
            Adds a custom hash provider of type <paramref name="customHashCryptoProviderType"/> to the cryptography configuration.
            </summary>
            <param name="context">Fluent interface extension point.</param>
            <param name="customHashCryptoProviderType">The concrete type of the hash provider.</param>
            <param name="customHashCryptoProviderName">The name of the hash provider that should be added to configuration.</param>
            <returns>Fluent interface that can be used to further configure the created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/>. </returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingCustomHashCryptoProviderNamedExtension.EncryptUsingCustomHashProviderNamed``1(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography,System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Adds a custom hash provider of type <typeparamref name="TCustomHashCryptoProvider"/> to the cryptography configuration.
            </summary>
            <typeparam name="TCustomHashCryptoProvider">The concrete type of the hash provider.</typeparam>
            <param name="context">Fluent interface extension point.</param>
            <param name="customHashCryptoProviderName">The name of the hash provider that should be added to configuration.</param>
            <param name="attributes">Attributes that should be passed to <typeparamref name="TCustomHashCryptoProvider"/> when creating an instance.</param>
            <returns>Fluent interface that can be used to further configure the created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/>. </returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingCustomHashCryptoProviderNamedExtension.EncryptUsingCustomHashProviderNamed(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography,System.String,System.Type,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Adds a custom hash provider of type <paramref name="customHashCryptoProviderType"/> to the cryptography configuration.
            </summary>
            <param name="context">Fluent interface extension point.</param>
            <param name="customHashCryptoProviderType">The concrete type of the hash provider.</param>
            <param name="customHashCryptoProviderName">The name of the hash provider that should be added to configuration.</param>
            <param name="attributes">Attributes that should be passed to <paramref name="customHashCryptoProviderType"/> when creating an instance.</param>
            <returns>Fluent interface that can be used to further configure the created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/>. </returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingCustomHashProviderNamed">
            <summary>
            Fluent interface used to configure a custom <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> instance.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingCustomHashProviderNamed.SetAsDefault">
            <summary>
            Specifies this custom <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> should be the cryptography blocks default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> instance.
            </summary>
            <returns>Fluent interface to further configure cryptography settings.</returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingCustomSymmetricProviderNamedExtension">
            <summary>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography"/> extensions to support configuring custom <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/> instances.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingCustomSymmetricProviderNamedExtension.EncryptUsingCustomSymmetricProviderNamed``1(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography,System.String)">
            <summary>
            Adds a custom symmetric crypto provider of type <typeparamref name="TCustomSymmetricCryptoProvider"/> to the cryptography configuration.
            </summary>
            <typeparam name="TCustomSymmetricCryptoProvider">The concrete type of the symmetric crypto provider.</typeparam>
            <param name="context">Fluent interface extension point.</param>
            <param name="customSymmetricCryptoProviderName">The name of the symmetric crypto provider that should be added to configuration.</param>
            <returns>Fluent interface that can be used to further configure the created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/>. </returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingCustomSymmetricProviderNamedExtension.EncryptUsingCustomSymmetricProviderNamed(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography,System.String,System.Type)">
            <summary>
            Adds a custom symmetric crypto provider of type <paramref name="customSymmetricCryptoProviderType"/> to the cryptography configuration.
            </summary>
            <param name="context">Fluent interface extension point.</param>
            <param name="customSymmetricCryptoProviderName">The name of the symmetric crypto provider that should be added to configuration.</param>
            <param name="customSymmetricCryptoProviderType">The concrete type of the symmetric crypto provider.</param>
            <returns>Fluent interface that can be used to further configure the created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/>. </returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingCustomSymmetricProviderNamedExtension.EncryptUsingCustomSymmetricProviderNamed``1(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography,System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Adds a custom symmetric crypto provider of type <typeparamref name="TCustomSymmetricCryptoProvider"/> to the cryptography configuration.
            </summary>
            <typeparam name="TCustomSymmetricCryptoProvider">The concrete type of the symmetric crypto provider.</typeparam>
            <param name="context">Fluent interface extension point.</param>
            <param name="customSymmetricCryptoProviderName">The name of the symmetric crypto provider that should be added to configuration.</param>
            <param name="attributes">Attributes that should be passed to <typeparamref name="TCustomSymmetricCryptoProvider"/> when creating an instance.</param>
            <returns>Fluent interface that can be used to further configure the created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/>. </returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingCustomSymmetricProviderNamedExtension.EncryptUsingCustomSymmetricProviderNamed(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography,System.String,System.Type,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Adds a custom symmetric crypto provider of type <paramref name="customSymmetricCryptoProviderType"/> to the cryptography configuration.
            </summary>
            <param name="context">Fluent interface extension point.</param>
            <param name="customSymmetricCryptoProviderName">The name of the symmetric crypto provider that should be added to configuration.</param>
            <param name="customSymmetricCryptoProviderType">The concrete type of the symmetric crypto provider.</param>
            <param name="attributes">Attributes that should be passed to <paramref name="customSymmetricCryptoProviderType"/> when creating an instance.</param>
            <returns>Fluent interface that can be used to further configure the created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/>. </returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingCustomSymmetricProviderNamed">
            <summary>
            Fluent interface used to configure a custom <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/> instance.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingCustomSymmetricProviderNamed.SetAsDefault">
            <summary>
            Specifies this custom <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/> should be the cryptography blocks default instance.
            </summary>
            <returns>Fluent interface to further configure cryptography settings.</returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingDPAPIProviderNamedExtension">
            <summary>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography"/> extensions to support configuring <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/> instances.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingDPAPIProviderNamedExtension.EncryptUsingDPAPIProviderNamed(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography,System.String)">
            <summary>
            Adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/> to the cryptography configuration settings.
            </summary>
            <param name="context">Fluent interface extension point.</param>
            <param name="dpapiProviderName">The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/> that should be configured.</param>
            <returns>Fluent interface to further configure the created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData"/>.</returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingDPAPIProviderNamed">
            <summary>
            Fluent interface used to configure a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/> instance.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingDPAPIProviderNamed.SetAsDefault">
            <summary>
            Specifies this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/> should be the cryptography blocks default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/> instance.
            </summary>
            <returns>Fluent interface to further configure the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/>.</returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingDPAPIProviderNamed.SetProtectionScope(System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Specifies which <see cref="T:System.Security.Cryptography.DataProtectionScope"/> will be used to encrypt and decrypt information.
            </summary>
            <param name="scope">The <see cref="T:System.Security.Cryptography.DataProtectionScope"/> will be used to encrypt and decrypt information.</param>
            <returns>Fluent interface to further configure the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/>.</returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingSymmetricProviderNamedExtension">
            <summary>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography"/> extensions to support configuring <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> instances.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingSymmetricProviderNamedExtension.EncryptUsingSymmetricAlgorithmProviderNamed(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography,System.String)">
            <summary>
            Adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> to the cryptography configuration settings.
            </summary>
            <param name="context">Fluent interface extension point.</param>
            <param name="algorithmProviderName">The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> that should be configured.</param>
            <returns>Fluent interface to further configure the created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData"/>.</returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingSymmetricProviderNamed">
            <summary>
            Fluent interface used to configure a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> instance.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingSymmetricProviderNamed.SetAsDefault">
            <summary>
            Specifies this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> should be the cryptography blocks default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/> instance.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingSymmetricProviderNamed.WithOptions">
            <summary>
            Returns a fluent interface to further configure the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> instance. 
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingSymmetricProviderNamedOptions">
            <summary>
            Fluent interface used to further configure a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> instance.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingSymmetricProviderNamedOptions.UsingSymmetricAlgorithm(System.Type)">
            <summary>
            Specifies the symmetric cryptography algorithm that should be used by this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> to encrypt data.
            </summary>
            <param name="algorithmType">The <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/> that implements the cryptography algorithm.</param>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingSymmetricProviderNamedOptions.UsingSymmetricAlgorithm``1">
            <summary>
            Specifies the symmetric cryptography algorithm that should be used by this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> to encrypt data.
            </summary>
            <typeparam name="TSymmetricAlgorithm">The <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/> that implements the cryptography algorithm.</typeparam>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingSymmetricProviderNamedOptions.UseKeyFile(System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Specifies the location of a file that contains a dpapi protected key for encrypting.
            </summary>
            <param name="keyFileName">The path to a dpapi protected keyfile that contains the key that should be used to encrypt data.</param>
            <param name="keyScope">The <see cref="T:System.Security.Cryptography.DataProtectionScope"/> that should be used to read the key from the key-file.</param>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.CryptographyConfigurationSourceBuilderExtension">
            <summary>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSourceBuilder"/> extensions to support creation of cryptography configuration settings.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.CryptographyConfigurationSourceBuilderExtension.ConfigureCryptography(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSourceBuilder)">
            <summary>
            Main entry point to configure a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings"/> section.
            </summary>
            <param name="configurationSourceBuilder">The builder interface to extend.</param>
            <returns>A fluent interface to further configure the cryptography configuration section.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingHashAlgorithmProviderNamedExtension">
            <summary>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography"/> extensions to support configuring <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/> instances.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingHashAlgorithmProviderNamedExtension.EncryptUsingHashAlgorithmProviderNamed(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography,System.String)">
            <summary>
            Adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/> to the cryptography configuration settings.
            </summary>
            <param name="context">Fluent interface extension point.</param>
            <param name="algorithmProviderName">The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/> that should be configured.</param>
            <returns>Fluent interface to further configure the created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData"/>.</returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingHashAlgorithmProviderNamed">
            <summary>
            Fluent interface used to configure a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/> instance.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingHashAlgorithmProviderNamed.SetAsDefault">
            <summary>
            Specifies this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/> should be the cryptography blocks default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> instance.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingHashAlgorithmProviderNamed.WithOptions">
            <summary>
            Returns a fluent interface to further configure the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/> instance. 
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingHashAlgorithmProviderNamedOptions">
            <summary>
            Fluent interface used to further configure a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/> instance.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingHashAlgorithmProviderNamedOptions.UsingHashAlgorithm(System.Type)">
            <summary>
            Specifies the hash algorithm that should be used by this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/> to create a hash.
            </summary>
            <param name="algorithmType">The <see cref="T:System.Security.Cryptography.HashAlgorithm"/> that implements the hashing algorithm.</param>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingHashAlgorithmProviderNamedOptions.UsingHashAlgorithm``1">
            <summary>
            Specifies the hash algorithm that should be used by this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/> to create a hash.
            </summary>
            <typeparam name="THashAlgorithm">The <see cref="T:System.Security.Cryptography.HashAlgorithm"/> that implements the hashing algorithm.</typeparam>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingHashAlgorithmProviderNamedOptions.DisableSalt">
            <summary>
            Specifies no salt should be used when creating a hash.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingKeyedHashAlgorithmProviderNamedExtension">
            <summary>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography"/> extensions to support configuring <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/> instances.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingKeyedHashAlgorithmProviderNamedExtension.EncryptUsingKeyedHashAlgorithmProviderNamed(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography,System.String)">
            <summary>
            Adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/> to the cryptography configuration settings.
            </summary>
            <param name="context">Fluent interface extension point.</param>
            <param name="algorithmProviderName">The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/> that should be configured.</param>
            <returns>Fluent interface to further configure the created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData"/>.</returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingKeyedHashAlgorithmProviderNamed">
            <summary>
            Fluent interface used to configure a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/> instance.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingKeyedHashAlgorithmProviderNamed.SetAsDefault">
            <summary>
            Specifies this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/> should be the cryptography blocks default <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> instance.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingKeyedHashAlgorithmProviderNamed.WithOptions">
            <summary>
            Returns a fluent interface to further configure the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/> instance. 
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingKeyedHashAlgorithmProviderNamedOptions">
            <summary>
            Fluent interface used to further configure a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/> instance.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingKeyedHashAlgorithmProviderNamedOptions.UsingKeyedHashAlgorithm(System.Type)">
            <summary>
            Specifies the hash algorithm that should be used by this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/> to create a hash.
            </summary>
            <param name="algorithmType">The <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/> that implements the hashing algorithm.</param>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingKeyedHashAlgorithmProviderNamedOptions.UsingKeyedHashAlgorithm``1">
            <summary>
            Specifies the hash algorithm that should be used by this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/> to create a hash.
            </summary>
            <typeparam name="TKeyedHashAlgorithm">The <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/> that implements the hashing algorithm.</typeparam>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingKeyedHashAlgorithmProviderNamedOptions.DisableSalt">
            <summary>
            Specifies no salt should be used when creating a hash.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingKeyedHashAlgorithmProviderNamedOptions.UseKeyFile(System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Specifies the location of a file that contains a dpapi protected key for creating the hash.
            </summary>
            <param name="keyFileName">The path to a dpapi protected keyfile that contains the key that should be used to create a hash.</param>
            <param name="keyScope">The <see cref="T:System.Security.Cryptography.DataProtectionScope"/> that should be used to read the key from the key-file.</param>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData">
            <summary>
            Configuration settings for the <c>HashAlgorithm</c> hash provider.
            </summary>	
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData.#ctor">
            <summary>
            Initializes with default configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData.#ctor(System.Type)">
            <summary>
            Initializes with default configuration.
            </summary>
            <param name="type">The type of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData.#ctor(System.String,System.Type,System.Boolean)">
            <summary>
            Initialized a new HashAlgorithmProviderData with the given name
            </summary>
            <param name="name">The name for this object</param>
            <param name="algorithmType">The hash algorithm to use</param>
            <param name="saltEnabled">Should a salt be used?</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData.#ctor(System.String,System.Type,System.Type,System.Boolean)">
            <summary>
            Initialized a new HashAlgorithmProviderData with the given name
            </summary>
            <param name="name">The name for this object</param>
            <param name="providerType">The</param>
            <param name="algorithmType">The hash algorithm to use</param>
            <param name="saltEnabled">Should a salt be used?</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData.GetRegistrations(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> instance describing the provider represented by 
            this configuration object.
            </summary>
            <param name="configurationSource">TODO</param>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> instance describing a provider.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData.AlgorithmType">
            <summary>
            Gets or sets the type of <see cref="T:System.Security.Cryptography.HashAlgorithm"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData.AlgorithmTypeName">
            <summary>
            Gets or sets the fully qualified name of the type of <see cref="T:System.Security.Cryptography.HashAlgorithm"/>.
            </summary>
            <value>
            The fully qualified type name of the type of <see cref="T:System.Security.Cryptography.HashAlgorithm"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData.SaltEnabled">
            <summary>
            Gets or sets the salt enabled flag.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData">
            <summary>
            <para>Configuration settings for the <c>KeyedHashAlgorithm</c> hash provider.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData.#ctor">
            <summary>
            <para>Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData.#ctor(System.String,System.Type,System.Boolean,System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="algorithmType"></param>
            <param name="saltEnabled"></param>
            <param name="protectedKeyFilename"></param>
            <param name="protectedKeyProtectionScope"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData.GetRegistrations(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> instance describing the provider represented by 
            this configuration object.
            </summary>
            <param name="configurationSource">TODO</param>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> instance describing a provider.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData.ProtectedKeyFilename">
            <summary>
            
            </summary>	
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData.ProtectedKeyProtectionScope">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData.AlgorithmTypeName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CryptographySettingsManageabilityProvider">
            <summary>
            <para>This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.</para>
            Represents the behavior required to provide Group Policy for the Cryptography Application Block, and it also manages
            the creation of the ADM template categories and policies required to edit Group Policy Objects for the block.
            </summary>
            <remarks>
            This class performs the actual Group Policy update for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings"/>
            configuration section. Processing for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashProviderData"/> and <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData"/> 
            instances is delegated to <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProvider"/> objects registered to the 
            configuration object data types.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProvider"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProvider"/>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CryptographySettingsManageabilityProvider.DefaultHashProviderPropertyName">
            <summary>
            The name of the default hash provider property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CryptographySettingsManageabilityProvider.DefaultSymmetricCryptoProviderPropertyName">
            <summary>
            The name of the default symmetric cryptography provider property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CryptographySettingsManageabilityProvider.HashProvidersKeyName">
            <summary>
            The name of the hash providers property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CryptographySettingsManageabilityProvider.SymmetricCryptoProvidersKeyName">
            <summary>
            The name of the symmetric cryptography providers property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CryptographySettingsManageabilityProvider.#ctor(System.Collections.Generic.IDictionary{System.Type,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProvider})">
            <summary>
            <para>This method supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            </para>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CryptographySettingsManageabilityProvider"/> class with a 
            given set of manageability providers to use when dealing with the configuration hash and symmetric cryptography providers.
            </summary>
            <param name="subProviders">The mapping from configuration element type to
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProvider"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CryptographySettingsManageabilityProvider.AddAdministrativeTemplateDirectives(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)">
            <summary>
            <para>This method supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.</para>
            Adds the ADM instructions that describe the policies that can be used to override the configuration
            information for the Cryptography Application Block.
            </summary>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProvider.AddAdministrativeTemplateDirectives(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,System.Configuration.ConfigurationSection,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CryptographySettingsManageabilityProvider.OverrideWithGroupPoliciesForConfigurationSection(Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey)">
            <summary>
            Overrides the <paramref name="configurationSection"/>'s properties with the Group Policy values from 
            the registry.
            </summary>
            <param name="configurationSection">The configuration section that must be managed.</param>
            <param name="policyKey">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey"/> which holds the Group Policy overrides.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CryptographySettingsManageabilityProvider.OverrideWithGroupPoliciesForConfigurationElements(Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings,System.Boolean,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey)">
            <summary>
            Overrides the <paramref name="configurationSection"/>'s configuration elements' properties 
            with the Group Policy values from the registry, if any.
            </summary>
            <param name="configurationSection">The configuration section that must be managed.</param>
            <param name="readGroupPolicies"><see langword="true"/> if Group Policy overrides must be applied; otherwise, 
            <see langword="false"/>.</param>
            <param name="machineKey">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey"/> which holds the Group Policy overrides for the 
            configuration section at the machine level, or <see langword="null"/> 
            if there is no such registry key.</param>
            <param name="userKey">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey"/> which holds the Group Policy overrides for the 
            configuration section at the user level, or <see langword="null"/> 
            if there is no such registry key.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CryptographySettingsManageabilityProvider.SectionCategoryName">
            <summary>
            Gets the name of the category that represents the whole configuration section.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CryptographySettingsManageabilityProvider.SectionName">
            <summary>
            Gets the name of the managed configuration section.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CustomHashProviderDataManageabilityProvider">
            <summary>
            Provides an implementation for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData"/> that
            processes policy overrides, performing appropriate logging of 
            policy processing errors.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CustomHashProviderDataManageabilityProvider.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CustomHashProviderDataManageabilityProvider"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CustomSymmetricCryptoProviderDataManageabilityProvider">
            <summary>
            Provides an implementation for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData"/> that
            processes policy overrides, performing appropriate logging of 
            policy processing errors.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CustomSymmetricCryptoProviderDataManageabilityProvider.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CustomSymmetricCryptoProviderDataManageabilityProvider"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.DpapiSymmetricCryptoProviderDataManageabilityProvider">
            <summary>
            Provides an implementation for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData"/> that
            processes policy overrides, performing appropriate logging of 
            policy processing errors.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.DpapiSymmetricCryptoProviderDataManageabilityProvider.ScopePropertyName">
            <summary>
            The property name of the scope.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.DpapiSymmetricCryptoProviderDataManageabilityProvider.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.HashAlgorithmProviderDataManageabilityProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.DpapiSymmetricCryptoProviderDataManageabilityProvider.AddElementAdministrativeTemplateParts(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)">
            <summary>
            Adds the ADM parts that represent the properties of
            a specific instance of the configuration element type managed by the receiver.
            </summary>
            <param name="contentBuilder">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder"/> to which the Adm instructions are to be appended.</param>
            <param name="configurationObject">The configuration object instance.</param>
            <param name="configurationSource">The configuration source from where to get additional configuration
            information, if necessary.</param>
            <param name="elementPolicyKeyName">The key for the element's policies.</param>
            <remarks>
            Subclasses managing objects that must not create a policy will likely need to include the elements' keys when creating the parts.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.DpapiSymmetricCryptoProviderDataManageabilityProvider.OverrideWithGroupPolicies(Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey)">
            <summary>
            Overrides the <paramref name="configurationObject"/>'s properties with the Group Policy values from the 
            registry.
            </summary>
            <param name="configurationObject">The configuration object for instances that must be managed.</param>
            <param name="policyKey">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey"/> which holds the Group Policy overrides for the 
            configuration element.</param>
            <remarks>Subclasses implementing this method must retrieve all the override values from the registry
            before making modifications to the <paramref name="configurationObject"/> so any error retrieving
            the override values will cancel policy processing.</remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.DpapiSymmetricCryptoProviderDataManageabilityProvider.ElementPolicyNameTemplate">
            <summary>
            Gets the template for the name of the policy associated to the object.
            </summary>
            <remarks>
            Elements that override 
            <see cref="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1.AddAdministrativeTemplateDirectives(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,`0,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)"/>
            to avoid creating a policy must still override this property.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.HashAlgorithmProviderDataManageabilityProvider">
            <summary>
            Provides an implementation for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData"/> that
            processes policy overrides, performing appropriate logging of 
            policy processing errors.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.HashAlgorithmProviderDataManageabilityProvider.SaltEnabledPropertyName">
            <summary>
            The name of the salt enabled property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.HashAlgorithmProviderDataManageabilityProvider.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.HashAlgorithmProviderDataManageabilityProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.HashAlgorithmProviderDataManageabilityProvider.AddElementAdministrativeTemplateParts(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)">
            <summary>
            Adds the ADM parts that represent the properties of
            a specific instance of the configuration element type managed by the receiver.
            </summary>
            <param name="contentBuilder">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder"/> to which the Adm instructions are to be appended.</param>
            <param name="configurationObject">The configuration object instance.</param>
            <param name="configurationSource">The configuration source from where to get additional configuration
            information, if necessary.</param>
            <param name="elementPolicyKeyName">The key for the element's policies.</param>
            <remarks>
            Subclasses managing objects that must not create a policy will likely need to include the elements' keys when creating the parts.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.HashAlgorithmProviderDataManageabilityProvider.OverrideWithGroupPolicies(Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey)">
            <summary>
            Overrides the <paramref name="configurationObject"/>'s properties with the Group Policy values from the 
            registry.
            </summary>
            <param name="configurationObject">The configuration object for instances that must be managed.</param>
            <param name="policyKey">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey"/> which holds the Group Policy overrides for the 
            configuration element.</param>
            <remarks>Subclasses implementing this method must retrieve all the override values from the registry
            before making modifications to the <paramref name="configurationObject"/> so any error retrieving
            the override values will cancel policy processing.</remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.HashAlgorithmProviderDataManageabilityProvider.ElementPolicyNameTemplate">
            <summary>
            Gets the template for the name of the policy associated to the object.
            </summary>
            <remarks>
            Elements that override 
            <see cref="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1.AddAdministrativeTemplateDirectives(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,`0,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)"/>
            to avoid creating a policy must still override this property.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.KeyedHashAlgorithmProviderDataManageabilityProvider">
            <summary>
            Provides an implementation for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData"/> that
            processes policy overrides, performing appropriate logging of 
            policy processing errors.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.KeyedHashAlgorithmProviderDataManageabilityProvider.ProtectedKeyFilenamePropertyName">
            <summary>
            The name of the protected key file name property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.KeyedHashAlgorithmProviderDataManageabilityProvider.ProtectedKeyProtectionScopePropertyName">
            <summary>
            The name of the protected key scope property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.KeyedHashAlgorithmProviderDataManageabilityProvider.SaltEnabledPropertyName">
            <summary>
            The name of the salt enabled property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.KeyedHashAlgorithmProviderDataManageabilityProvider.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.KeyedHashAlgorithmProviderDataManageabilityProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.KeyedHashAlgorithmProviderDataManageabilityProvider.AddElementAdministrativeTemplateParts(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)">
            <summary>
            Adds the ADM parts that represent the properties of
            a specific instance of the configuration element type managed by the receiver.
            </summary>
            <param name="contentBuilder">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder"/> to which the Adm instructions are to be appended.</param>
            <param name="configurationObject">The configuration object instance.</param>
            <param name="configurationSource">The configuration source from where to get additional configuration
            information, if necessary.</param>
            <param name="elementPolicyKeyName">The key for the element's policies.</param>
            <remarks>
            Subclasses managing objects that must not create a policy will likely need to include the elements' keys when creating the parts.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.KeyedHashAlgorithmProviderDataManageabilityProvider.OverrideWithGroupPolicies(Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey)">
            <summary>
            Overrides the <paramref name="configurationObject"/>'s properties with the Group Policy values from the 
            registry.
            </summary>
            <param name="configurationObject">The configuration object for instances that must be managed.</param>
            <param name="policyKey">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey"/> which holds the Group Policy overrides for the 
            configuration element.</param>
            <remarks>Subclasses implementing this method must retrieve all the override values from the registry
            before making modifications to the <paramref name="configurationObject"/> so any error retrieving
            the override values will cancel policy processing.</remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.KeyedHashAlgorithmProviderDataManageabilityProvider.ElementPolicyNameTemplate">
            <summary>
            Gets the template for the name of the policy associated to the object.
            </summary>
            <remarks>
            Elements that override 
            <see cref="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1.AddAdministrativeTemplateDirectives(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,`0,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)"/>
            to avoid creating a policy must still override this property.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.CryptographySectionCategoryName">
            <summary>
              Looks up a localized string similar to Cryptography.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.CryptographySettingsDefaultHashProviderPartName">
            <summary>
              Looks up a localized string similar to Default hash provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.CryptographySettingsDefaultSymmetricCryptoProviderPartName">
            <summary>
              Looks up a localized string similar to Default symmetric crypto provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.CryptographySettingsPolicyName">
            <summary>
              Looks up a localized string similar to Specify Cryptography Application Block Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.DpapiSymmetricProviderScopePartName">
            <summary>
              Looks up a localized string similar to Scope.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.ExceptionNullOrEmptyString">
            <summary>
              Looks up a localized string similar to The value can not be a null or empty string..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.HashAlgorithmProviderSaltEnabledPartName">
            <summary>
              Looks up a localized string similar to Salt enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.HashProviderInstanceNotFound">
            <summary>
              Looks up a localized string similar to The hash provider with name &apos;{0}&apos; cannot be found..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.HashProviderPolicyNameTemplate">
            <summary>
              Looks up a localized string similar to Specify settings for hash provider &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.HashProvidersCategoryName">
            <summary>
              Looks up a localized string similar to Hash providers.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.KeyedHashAlgorithmProviderKeyFileNamePartName">
            <summary>
              Looks up a localized string similar to Key file name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.KeyedHashAlgorithmProviderKeyProtectionScopePartName">
            <summary>
              Looks up a localized string similar to Key protection scope.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.KeyedHashAlgorithmProviderSaltEnabledPartName">
            <summary>
              Looks up a localized string similar to Salt enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.SymmetricAlgorithmProviderKeyFileNamePartName">
            <summary>
              Looks up a localized string similar to Key file name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.SymmetricAlgorithmProviderKeyProtectionScopePartName">
            <summary>
              Looks up a localized string similar to Key protection scope.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.SymmetricCryptoProviderPolicyNameTemplate">
            <summary>
              Looks up a localized string similar to Specify settings for symmetric cryptography providers &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.SymmetricCryptoProvidersCategoryName">
            <summary>
              Looks up a localized string similar to Symmetric crypto providers.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.SymmetricCrytoProviderInstanceNotFound">
            <summary>
              Looks up a localized string similar to The symmetric crypto provider with name &apos;{0}&apos; cannot be found..
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.SymmetricAlgorithmProviderDataManageabilityProvider">
            <summary>
            Provides an implementation for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData"/> that
            processes policy overrides, performing appropriate logging of 
            policy processing errors.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.SymmetricAlgorithmProviderDataManageabilityProvider.ProtectedKeyFilenamePropertyName">
            <summary>
            The property name of the protected key file.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.SymmetricAlgorithmProviderDataManageabilityProvider.ProtectedKeyProtectionScopePropertyName">
            <summary>
            The property name of the protected key protection scope.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.SymmetricAlgorithmProviderDataManageabilityProvider.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.SymmetricAlgorithmProviderDataManageabilityProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.SymmetricAlgorithmProviderDataManageabilityProvider.AddElementAdministrativeTemplateParts(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)">
            <summary>
            Adds the ADM parts that represent the properties of
            a specific instance of the configuration element type managed by the receiver.
            </summary>
            <param name="contentBuilder">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder"/> to which the Adm instructions are to be appended.</param>
            <param name="configurationObject">The configuration object instance.</param>
            <param name="configurationSource">The configuration source from where to get additional configuration
            information, if necessary.</param>
            <param name="elementPolicyKeyName">The key for the element's policies.</param>
            <remarks>
            Subclasses managing objects that must not create a policy will likely need to include the elements' keys when creating the parts.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.SymmetricAlgorithmProviderDataManageabilityProvider.OverrideWithGroupPolicies(Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey)">
            <summary>
            Overrides the <paramref name="configurationObject"/>'s properties with the Group Policy values from the 
            registry.
            </summary>
            <param name="configurationObject">The configuration object for instances that must be managed.</param>
            <param name="policyKey">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey"/> which holds the Group Policy overrides for the 
            configuration element.</param>
            <remarks>Subclasses implementing this method must retrieve all the override values from the registry
            before making modifications to the <paramref name="configurationObject"/> so any error retrieving
            the override values will cancel policy processing.</remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.SymmetricAlgorithmProviderDataManageabilityProvider.ElementPolicyNameTemplate">
            <summary>
            Gets the template for the name of the policy associated to the object.
            </summary>
            <remarks>
            Elements that override 
            <see cref="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1.AddAdministrativeTemplateDirectives(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,`0,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)"/>
            to avoid creating a policy must still override this property.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData">
            <summary>
            <para>Configuration data for the <c>SymmetricAlgorithm</c> provider.</para>
            </summary>	
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData.#ctor">
            <summary>
            <para>Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData.#ctor(System.String,System.Type,System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            <para>Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData"/> class.</para>
            </summary>
            <param name="name"><para>The name for the provider.</para></param>
            <param name="algorithmType"><para>The type name of the hash algorithm.</para></param>
            <param name="protectedKeyFilename">File name where key is stored</param>
            <param name="protectedKeyProtectionScope">DPAPI protection scope used to store key</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData.GetRegistrations(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> instance describing the provider represented by 
            this configuration object.
            </summary>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.TypeRegistration"/> instance describing a provider.</returns>
            <param name="configurationSource">TODO</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData.AlgorithmType">
            <summary>
            <para>Gets or sets the type of <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/>.</para>
            </summary>
            <value>
            <para>The type of <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData.AlgorithmTypeName">
            <summary>
            Gets or sets the fully qualified name of the type of <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/>.
            </summary>
            <value>
            The fully qualified name of the type of <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData.ProtectedKeyFilename">
            <summary>
            
            </summary>	
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData.ProtectedKeyProtectionScope">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Unity.CryptographyBlockExtension">
            <summary>
            A <see cref="T:Microsoft.Practices.Unity.UnityContainerExtension"/> that registers the policies necessary
            to create <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> and <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/> instances described in the standard
            configuration file.
            </summary>
            <remarks>This function is now performed by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Unity.EnterpriseLibraryCoreExtension"/>.
            This extension is no longer necessary.</remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManager">
            <summary>
            Non-static entry point to the cryptography functionality.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManager.CompareHash(System.String,System.String,System.String)">
            <summary>
            Compares plain text input with a computed hash using the given hash provider instance.
            </summary>
            <remarks>
            Use this method to compare hash values. Since hashes contain a random "salt" value, two seperately generated
            hashes of the same plain text will result in different values. 
            </remarks>
            <param name="hashInstance">A hash instance from configuration.</param>
            <param name="plaintext">The input as a string for which you want to compare the hash to.</param>
            <param name="hashedText">The hash as a string for which you want to compare the input to.</param>
            <returns><c>true</c> if plainText hashed is equal to the hashedText. Otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManager.CompareHash(System.String,System.Byte[],System.Byte[])">
            <overrides>
            Compares plain text input with a computed hash using the given hash provider instance.
            </overrides>
            <summary>
            Compares plain text input with a computed hash using the given hash provider instance.
            </summary>
            <remarks>
            Use this method to compare hash values. Since hashes may contain a random "salt" value, two seperately generated
            hashes of the same plain text may result in different values. 
            </remarks>
            <param name="hashInstance">A hash instance from configuration.</param>
            <param name="plaintext">The input for which you want to compare the hash to.</param>
            <param name="hashedText">The hash value for which you want to compare the input to.</param>
            <returns><c>true</c> if plainText hashed is equal to the hashedText. Otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManager.CreateHash(System.String,System.Byte[])">
            <overrides>
            Computes the hash value of plain text using the given hash provider instance
            </overrides>
            <summary>
            Computes the hash value of plain text using the given hash provider instance
            </summary>
            <param name="hashInstance">A hash instance from configuration.</param>
            <param name="plaintext">The input for which to compute the hash.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManager.CreateHash(System.String,System.String)">
            <summary>
            Computes the hash value of plain text using the given hash provider instance
            </summary>
            <param name="hashInstance">A hash instance from configuration.</param>
            <param name="plaintext">The input for which to compute the hash.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManager.DecryptSymmetric(System.String,System.Byte[])">
            <summary>
            Decrypts a cipher text using a specified symmetric cryptography provider.
            </summary>
            <param name="symmetricInstance">A symmetric instance from configuration.</param>
            <param name="ciphertext">The cipher text for which you want to decrypt.</param>
            <returns>The resulting plain text.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManager.DecryptSymmetric(System.String,System.String)">
            <summary>
            Decrypts a cipher text using a specified symmetric cryptography provider.
            </summary>
            <param name="symmetricInstance">A symmetric instance from configuration.</param>
            <param name="ciphertextBase64">The cipher text as a base64 encoded string for which you want to decrypt.</param>
            <returns>The resulting plain text as a string.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManager.EncryptSymmetric(System.String,System.Byte[])">
            <summary>
            Encrypts a secret using a specified symmetric cryptography provider.
            </summary>
            <param name="symmetricInstance">A symmetric instance from configuration.</param>
            <param name="plaintext">The input for which you want to encrypt.</param>
            <returns>The resulting cipher text.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManager.EncryptSymmetric(System.String,System.String)">
            <summary>
            Encrypts a secret using a specified symmetric cryptography provider.
            </summary>
            <param name="symmetricInstance">A symmetric instance from configuration.</param>
            <param name="plaintext">The input as a base64 encoded string for which you want to encrypt.</param>
            <returns>The resulting cipher text as a base64 encoded string.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl">
            <summary>
            Non-static entry point to the cryptography functionality.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl.#ctor(System.Collections.Generic.IDictionary{System.String,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider},System.Collections.Generic.IDictionary{System.String,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider})">
            <summary>
            Initializes a new instance of the class <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl"/> giving a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> and a collection of
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/>
            </summary>
            <param name="hashProviders"></param>
            <param name="symmetricCryptoProviders"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl.#ctor(System.Collections.Generic.IDictionary{System.String,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider},System.Collections.Generic.IDictionary{System.String,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider},Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IDefaultCryptographyInstrumentationProvider)">
            <summary>
            Initializes a new instance of the class <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl"/> giving a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> and a collection of
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/> and an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IDefaultCryptographyInstrumentationProvider"/>.
            </summary>
            <param name="hashProviders">Dictionary of named <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> objects</param>
            <param name="symmetricCryptoProviders">Dictionary of named <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/> objects.</param>
            <param name="instrumentationProvider">Instrumentation provider used to report configuration errors.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider},Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IDefaultCryptographyInstrumentationProvider)">
            <summary>
            Initializes a new instance of the class <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl"/> given a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> and a
            collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/>.
            </summary>
            <param name="hashProviderNames">Sequence of names of the hash providers as defined in configuration.</param>
            <param name="hashProviders">The hash providers corresponding to the names in <paramref name="hashProviderNames"/> at the same index.</param>
            <param name="cryptoProviderNames">Sequence of names of the cryptography providers as defined in configuration.</param>
            <param name="symmetricCryptoProviders">The symmetric cryptography providers corresponding to the names give in <paramref name="cryptoProviderNames"/>
            <param name="instrumentationProvider">The instrumentation provider used to report errors.</param>
            at the same index.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl.CreateHash(System.String,System.Byte[])">
            <overrides>
            Computes the hash value of plain text using the given hash provider instance
            </overrides>
            <summary>
            Computes the hash value of plain text using the given hash provider instance
            </summary>
            <param name="hashInstance">A hash instance from configuration.</param>
            <param name="plaintext">The input for which to compute the hash.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl.CreateHash(System.String,System.String)">
            <summary>
            Computes the hash value of plain text using the given hash provider instance
            </summary>
            <param name="hashInstance">A hash instance from configuration.</param>
            <param name="plaintext">The input for which to compute the hash.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl.CompareHash(System.String,System.Byte[],System.Byte[])">
            <overrides>
            Compares plain text input with a computed hash using the given hash provider instance.
            </overrides>
            <summary>
            Compares plain text input with a computed hash using the given hash provider instance.
            </summary>
            <remarks>
            Use this method to compare hash values. Since hashes may contain a random "salt" value, two seperately generated
            hashes of the same plain text may result in different values. 
            </remarks>
            <param name="hashInstance">A hash instance from configuration.</param>
            <param name="plaintext">The input for which you want to compare the hash to.</param>
            <param name="hashedText">The hash value for which you want to compare the input to.</param>
            <returns><c>true</c> if plainText hashed is equal to the hashedText. Otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl.CompareHash(System.String,System.String,System.String)">
            <summary>
            Compares plain text input with a computed hash using the given hash provider instance.
            </summary>
            <remarks>
            Use this method to compare hash values. Since hashes contain a random "salt" value, two seperately generated
            hashes of the same plain text will result in different values. 
            </remarks>
            <param name="hashInstance">A hash instance from configuration.</param>
            <param name="plaintext">The input as a string for which you want to compare the hash to.</param>
            <param name="hashedText">The hash as a string for which you want to compare the input to.</param>
            <returns><c>true</c> if plainText hashed is equal to the hashedText. Otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl.EncryptSymmetric(System.String,System.Byte[])">
            <summary>
            Encrypts a secret using a specified symmetric cryptography provider.
            </summary>
            <param name="symmetricInstance">A symmetric instance from configuration.</param>
            <param name="plaintext">The input for which you want to encrypt.</param>
            <returns>The resulting cipher text.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl.EncryptSymmetric(System.String,System.String)">
            <summary>
            Encrypts a secret using a specified symmetric cryptography provider.
            </summary>
            <param name="symmetricInstance">A symmetric instance from configuration.</param>
            <param name="plaintext">The input as a base64 encoded string for which you want to encrypt.</param>
            <returns>The resulting cipher text as a base64 encoded string.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl.DecryptSymmetric(System.String,System.Byte[])">
            <summary>
            Decrypts a cipher text using a specified symmetric cryptography provider.
            </summary>
            <param name="symmetricInstance">A symmetric instance from configuration.</param>
            <param name="ciphertext">The cipher text for which you want to decrypt.</param>
            <returns>The resulting plain text.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl.DecryptSymmetric(System.String,System.String)">
            <summary>
            Decrypts a cipher text using a specified symmetric cryptography provider.
            </summary>
            <param name="symmetricInstance">A symmetric instance from configuration.</param>
            <param name="ciphertextBase64">The cipher text as a base64 encoded string for which you want to decrypt.</param>
            <returns>The resulting plain text as a string.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyUtility">
            <summary>
            <para>Common Cryptography methods.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyUtility.CompareBytes(System.Byte[],System.Byte[])">
            <summary>
            <para>Determine if two byte arrays are equal.</para>
            </summary>
            <param name="byte1">
            <para>The first byte array to compare.</para>
            </param>
            <param name="byte2">
            <para>The byte array to compare to the first.</para>
            </param>
            <returns>
            <para><see langword="true"/> if the two byte arrays are equal; otherwise <see langword="false"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyUtility.GetBytesFromHexString(System.String)">
            <summary>
            <para>Returns a byte array from a string representing a hexidecimal number.</para>
            </summary>
            <param name="hexidecimalNumber">
            <para>The string containing a valid hexidecimal number.</para>
            </param>
            <returns><para>The byte array representing the hexidecimal.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyUtility.GetHexStringFromBytes(System.Byte[])">
            <summary>
            <para>Returns a string from a byte array represented as a hexidecimal number (eg: 0F351A).</para>
            </summary>
            <param name="bytes">
            <para>The byte array to convert to forat as a hexidecimal number.</para>
            </param>
            <returns>
            <para>The formatted representation of the bytes as a hexidcimal number.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyUtility.CombineBytes(System.Byte[],System.Byte[])">
            <summary>
            <para>Combines two byte arrays into one.</para>
            </summary>
            <param name="buffer1"><para>The prefixed bytes.</para></param>
            <param name="buffer2"><para>The suffixed bytes.</para></param>
            <returns><para>The combined byte arrays.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyUtility.GetRandomBytes(System.Int32)">
            <summary>
            Creates a cryptographically strong random set of bytes.
            </summary>
            <param name="size">The size of the byte array to generate.</param>
            <returns>The computed bytes.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyUtility.GetRandomBytes(System.Byte[])">
            <summary>
            <para>Fills a byte array with a cryptographically strong random set of bytes.</para>
            </summary>
            <param name="bytes"><para>The byte array to fill.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyUtility.ZeroOutBytes(System.Byte[])">
            <summary>
            <para>Fills <paramref name="bytes"/> zeros.</para>
            </summary>
            <param name="bytes">
            <para>The byte array to fill.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyUtility.Transform(System.Security.Cryptography.ICryptoTransform,System.Byte[])">
            <summary>
            Transforms an array of bytes according to the given cryptographic transform.
            </summary>
            <param name="transform"><see cref="T:System.Security.Cryptography.ICryptoTransform"/> used to transform the given <paramref name="buffer"/>.</param>
            <param name="buffer">Buffer to transform. It is the responsibility of the caller to clear this array when finished.</param>
            <returns>Transformed array of bytes. It is the responsibility of the caller to clear this byte array
            if necessary.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiCryptographer">
            <summary>
            <para>Represents a wrapper over <see cref="T:System.Security.Cryptography.ProtectedData"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiCryptographer.#ctor">
            <overloads>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiCryptographer"/> class with the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> set to <see cref="F:System.Security.Cryptography.DataProtectionScope.LocalMachine"/>.</para>
            </overloads>
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiCryptographer"/> class with the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> set to <see cref="F:System.Security.Cryptography.DataProtectionScope.LocalMachine"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiCryptographer.#ctor(System.Security.Cryptography.DataProtectionScope)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiCryptographer"/> class with a <see cref="T:System.Security.Cryptography.DataProtectionScope"/>.</para>
            </summary>
            <param name="storeScope"><para>One of the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> values.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiCryptographer.Encrypt(System.Byte[])">
            <summary>
            <para>
            Encrypt given data; this overload can be used ONLY when storage mode is "User", since when storage mode 
            is "Machine" we MUST have optional entropy to "salt" the phrase.
            This will throw an Invalid Operation Exception if used in Machine mode.
            </para>
            </summary>
            <param name="plaintext"><para>The plain text that will be encrypted.</para></param>
            <returns><para>The resulting cipher text.</para></returns>
            <exception cref="T:System.InvalidOperationException">Thrown when attempt is made to DPAPI-encrypt data
            using LocalMachine scope and null entropy.</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiCryptographer.Encrypt(System.Byte[],System.Byte[])">
            <summary>
            <para>
            Encrypt given data; this overload should be used when storage mode is "Machine", since when storage mode 
            is "Machine" you must define entropy to "salt" the phrase.
            </para>
            </summary>
            <param name="plaintext"><para>The plain text that will be encrypted.</para></param>
            <param name="entropy"><para>The entropy to salt the phrase.</para></param>
            <returns><para>The resulting cipher text.</para></returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="plaintext"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="plaintext"/> is empty.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when attempt is made to DPAPI-encrypt data
            using LocalMachine scope and null entropy.</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiCryptographer.Decrypt(System.Byte[])">
            <summary>
            <para>
            Decrypts the given ciphertext.  Can be used only when in "User" mode, otherwise this will throw 
            an InvalidOperationException because entropy is required when using Machine mode.
            </para>
            </summary>
            <param name="cipherText">
            <para>The cipher text that will be decrypted.</para>
            </param>
            <returns>
            <para>The resulting plain text.</para>
            </returns>
            <exception cref="T:System.InvalidOperationException">Thrown when attempt is made to DPAPI-decrypt data
            using LocalMachine scope and null entropy.</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiCryptographer.Decrypt(System.Byte[],System.Byte[])">
            <summary>
            <para>Decrypt the given data.</para>
            </summary>
            <param name="cipherText"><para>The cipher text that will be decrypted.</para></param>
            <param name="entropy"><para>The entropy that was used to salt the phrase.</para></param>
            <returns><para>The resulting plain text.</para></returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="cipherText"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="cipherText"/> is empty.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when attempt is made to DPAPI-decrypt data
            using LocalMachine scope and null entropy.</exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiCryptographer.StoreScope">
            <summary>
            <para>Gets the storage scope for this instance.</para>
            </summary>
            <value>One of the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> values.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashCryptographer">
            <summary>
            <para>Represents basic cryptography services for a <see cref="T:System.Security.Cryptography.HashAlgorithm"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashCryptographer.#ctor(System.Type)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashCryptographer"/> with an algorithm type.</para>
            </summary>
            <param name="algorithmType">A fully qualifed type name derived from <see cref="T:System.Security.Cryptography.HashAlgorithm"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashCryptographer.#ctor(System.Type,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashCryptographer"/> with an algorithm type and key.</para>
            </summary>
            <param name="algorithmType">A fully qualifed type name derived from <see cref="T:System.Security.Cryptography.HashAlgorithm"/>.</param>
            <param name="protectedKey"><para>The key for a <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/>.</para></param>
            <remarks>
            While this overload will work with a specified <see cref="T:System.Security.Cryptography.HashAlgorithm"/>, the protectedKey 
            is only relevant when initializing with a specified <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashCryptographer.ComputeHash(System.Byte[])">
            <summary>
            <para>Computes the hash value of the plaintext.</para>
            </summary>
            <param name="plaintext"><para>The plaintext in which you wish to hash.</para></param>
            <returns><para>The resulting hash.</para></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyGenerator">
            <summary>
            Generates keys for specified cryptographic algorithms.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyGenerator.GenerateKey(System.String,System.Security.Cryptography.DataProtectionScope)">
            <overloads>
            Generates a key for a specific cryptographic algorithm.
            </overloads>
            <summary>
            Generates a key based on an algorithm name.
            </summary>
            <param name="algorithmName">Algorithm name as defined in <see cref="T:System.Security.Cryptography.CryptoConfig"></see>.</param>
            <param name="dataProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see> used to encrypt the generated key.</param>
            <returns>Generated key encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyGenerator.GenerateKey(System.String)">
            <summary>
            Generates a key based on an algorithm name.
            </summary>
            <param name="algorithmName">Algorithm name as defined in <see cref="T:System.Security.Cryptography.CryptoConfig"></see>.</param>
            <returns>Generated key for given algorithm. It is the responsibility of the caller to correctly dispose of the 
            returned byte array.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyGenerator.GenerateKey(System.Type,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Generates a key based on an algorithm type.
            </summary>
            <param name="algorithmType">Algorithm type. Should be subclass of appropriate cryptographic class.</param>
            <param name="dataProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see> used to encrypt the generated key.</param>
            <returns>Generated key encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyGenerator.GenerateKey(System.Type)">
            <summary>
            Generates a key based on an algorithm type.
            </summary>
            <param name="algorithmType">Algorithm type. Should be subclass of appropriate cryptographic class.</param>
            <returns>Generated key for given algorithm. It is the responsibility of the caller to correctly dispose of the 
            returned byte array.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.DefaultCryptographyEventLogger">
            <summary>
            The instrumentation gateway when no instances of the objects from the block are involved.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IDefaultCryptographyInstrumentationProvider">
            <summary>
            Interface defining instrumentation used to report errors in the Cryptography Application Block.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IDefaultCryptographyInstrumentationProvider.FireCryptographyErrorOccurred(System.String,System.String,System.String)">
            <summary>
            Fires the CryptographyErrorOccurred event.
            </summary>
            <param name="providerName">The name of the provider with the errror.</param>
            <param name="instanceName">The name of the instance with the errror.</param>
            <param name="message">The message that describes the failure.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IDefaultCryptographyInstrumentationProvider.LogConfigurationError(System.String,System.String,System.Exception)">
            <summary>
            Logs the occurrence of a configuration error for the Enterprise Library Cryptography Application Block through the 
            available instrumentation mechanisms.
            </summary>
            <param name="instanceName">Name of the cryptographic provider instance in which the configuration error was detected.</param>
            <param name="messageTemplate">The template to build the event log entry.</param>
            <param name="exception">The exception raised for the configuration error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IDefaultCryptographyInstrumentationProvider.LogConfigurationError(System.String,System.String)">
            <summary>
            Logs the occurrence of a configuration error for the Enterprise Library Cryptography Application Block through the 
            available instrumentation mechanisms.
            </summary>
            <param name="instanceName">Name of the cryptographic provider instance in which the configuration error was detected.</param>
            <param name="messageTemplate">The template to build the event log entry.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.DefaultCryptographyEventLogger.EventLogSourceName">
            For testing purposes
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.DefaultCryptographyEventLogger.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.DefaultCryptographyEventLogger"/> class, specifying whether 
            logging to the event log is allowed.
            </summary>
            <param name="eventLoggingEnabled"><b>true</b> if writing to the event log is allowed, <b>false</b> otherwise.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.DefaultCryptographyEventLogger.#ctor(System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.DefaultCryptographyEventLogger"/> class, specifying whether 
            logging to the event log is allowed.
            </summary>
            <param name="performanceCountersEnabled"><code>true</code> if updating performance counters is allowed, <code>false</code> otherwise.</param>
            <param name="eventLoggingEnabled"><code>true</code> if writing to the event log is allowed, <code>false</code> otherwise.</param>
            <param name="applicationInstanceName">The application name to use with performance counters.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.DefaultCryptographyEventLogger.LogConfigurationError(System.String,System.String,System.Exception)">
            <summary>
            Logs the occurrence of a configuration error for the Enterprise Library Cryptography Application Block through the 
            available instrumentation mechanisms.
            </summary>
            <param name="instanceName">Name of the cryptographic provider instance in which the configuration error was detected.</param>
            <param name="messageTemplate">The template to build the event log entry.</param>
            <param name="exception">The exception raised for the configuration error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.DefaultCryptographyEventLogger.LogConfigurationError(System.String,System.String)">
            <summary>
            Logs the occurrence of a configuration error for the Enterprise Library Cryptography Application Block through the 
            available instrumentation mechanisms.
            </summary>
            <param name="instanceName">Name of the cryptographic provider instance in which the configuration error was detected.</param>
            <param name="messageTemplate">The template to build the event log entry.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.DefaultCryptographyEventLogger.FireCryptographyErrorOccurred(System.String,System.String,System.String)">
            <summary>
            Fires the CryptographyErrorOccurred event.
            </summary>
            <param name="providerName">The name of the provider with the errror.</param>
            <param name="instanceName">The name of the instance with the errror.</param>
            <param name="message">The message that describes the failure.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider.FireCyptographicOperationFailed(System.String,System.Exception)">
            <summary>
            </summary>
            <param name="message">The message that describes the failure.</param>
            <param name="exception">The exception thrown during the failure.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider.FireHashComparisonPerformed">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider.FireHashMismatchDetected">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider.FireHashOperationPerformed">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider.FireCyptographicOperationFailed(System.String,System.Exception)">
            <summary>
            </summary>
            <param name="message">The message that describes the failure.</param>
            <param name="exception">The exception thrown during the failure.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider.FireSymmetricDecryptionPerformed">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider.FireSymmetricEncryptionPerformed">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullDefaultCryptographyInstrumentationProvider">
            <summary>
            An implementation of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IDefaultCryptographyInstrumentationProvider"/> that
            does nothing with the instrumentation events.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullDefaultCryptographyInstrumentationProvider.FireCryptographyErrorOccurred(System.String,System.String,System.String)">
            <summary>
            Fires the CryptographyErrorOccurred event.
            </summary>
            <param name="providerName">The name of the provider with the errror.</param>
            <param name="instanceName">The name of the instance with the errror.</param>
            <param name="message">The message that describes the failure.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullDefaultCryptographyInstrumentationProvider.LogConfigurationError(System.String,System.String,System.Exception)">
            <summary>
            Logs the occurrence of a configuration error for the Enterprise Library Cryptography Application Block through the 
            available instrumentation mechanisms.
            </summary>
            <param name="instanceName">Name of the cryptographic provider instance in which the configuration error was detected.</param>
            <param name="messageTemplate">The template to build the event log entry.</param>
            <param name="exception">The exception raised for the configuration error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullDefaultCryptographyInstrumentationProvider.LogConfigurationError(System.String,System.String)">
            <summary>
            Logs the occurrence of a configuration error for the Enterprise Library Cryptography Application Block through the 
            available instrumentation mechanisms.
            </summary>
            <param name="instanceName">Name of the cryptographic provider instance in which the configuration error was detected.</param>
            <param name="messageTemplate">The template to build the event log entry.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullHashAlgorithmInstrumentationProvider">
            <summary/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullHashAlgorithmInstrumentationProvider.FireCyptographicOperationFailed(System.String,System.Exception)">
            <summary/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullHashAlgorithmInstrumentationProvider.FireHashComparisonPerformed">
            <summary/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullHashAlgorithmInstrumentationProvider.FireHashMismatchDetected">
            <summary/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullHashAlgorithmInstrumentationProvider.FireHashOperationPerformed">
            <summary/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullSymmetricAlgorithmInstrumentationProvider">
            <summary/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullSymmetricAlgorithmInstrumentationProvider.FireCyptographicOperationFailed(System.String,System.Exception)">
            <summary/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullSymmetricAlgorithmInstrumentationProvider.FireSymmetricDecryptionPerformed">
            <summary/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullSymmetricAlgorithmInstrumentationProvider.FireSymmetricEncryptionPerformed">
            <summary/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.SymmetricAlgorithmInstrumentationProvider">
            <summary>
            Defines the logical events that can be instrumented for symmetric cryptography providers.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.SymmetricAlgorithmInstrumentationProvider.TotalSymmetricEncryptionPerformedCounterName">
            <summary>
            Made public for testing
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.SymmetricAlgorithmInstrumentationProvider.TotalSymmetricDecryptionPerformedCounterName">
            <summary>
            Made public for testing
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.SymmetricAlgorithmInstrumentationProvider.counterCategoryName">
            <summary>
            Made public for testing
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.SymmetricAlgorithmInstrumentationProvider.#ctor(System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.SymmetricAlgorithmInstrumentationProvider"/> class.
            </summary>
            <param name="instanceName">The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/> instance this instrumentation listener is created for.</param>
            <param name="performanceCountersEnabled"><b>true</b> if performance counters should be updated.</param>
            <param name="eventLoggingEnabled"><b>true</b> if event log entries should be written.</param>
            <param name="applicationInstanceName">The application instance name.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.SymmetricAlgorithmInstrumentationProvider.#ctor(System.String,System.Boolean,System.Boolean,Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.IPerformanceCounterNameFormatter)">
            <summary>
            </summary>
            <param name="instanceName">The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/> instance this instrumentation listener is created for.</param>
            <param name="performanceCountersEnabled"><b>true</b> if performance counters should be updated.</param>
            <param name="eventLoggingEnabled"><b>true</b> if event log entries should be written.</param>
            <param name="nameFormatter">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.IPerformanceCounterNameFormatter"/> that is used to creates unique name for each <see cref="T:System.Diagnostics.PerformanceCounter"/> instance.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.SymmetricAlgorithmInstrumentationProvider.FireCyptographicOperationFailed(System.String,System.Exception)">
            <summary>
            </summary>
            <param name="message">The message that describes the failure.</param>
            <param name="exception">The exception thrown during the failure.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.SymmetricAlgorithmInstrumentationProvider.FireSymmetricEncryptionPerformed">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.SymmetricAlgorithmInstrumentationProvider.FireSymmetricDecryptionPerformed">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.SymmetricAlgorithmInstrumentationProvider.CreatePerformanceCounters(System.String[])">
            <summary>
            Creates the performance counters to instrument the symmetric crypto events for the specified instance names.
            </summary>
            <param name="instanceNames">The instance names for the performance counters.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Cryptographer">
            <summary>
            Facade which exposes common cryptography uses.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Cryptographer.CreateHash(System.String,System.Byte[])">
            <overrides>
            Computes the hash value of plain text using the given hash provider instance
            </overrides>
            <summary>
            Computes the hash value of plain text using the given hash provider instance
            </summary>
            <param name="hashInstance">A hash instance from configuration.</param>
            <param name="plaintext">The input for which to compute the hash.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Cryptographer.CreateHash(System.String,System.String)">
            <summary>
            Computes the hash value of plain text using the given hash provider instance
            </summary>
            <param name="hashInstance">A hash instance from configuration.</param>
            <param name="plaintext">The input for which to compute the hash.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Cryptographer.CompareHash(System.String,System.Byte[],System.Byte[])">
            <overrides>
            Compares plain text input with a computed hash using the given hash provider instance.
            </overrides>
            <summary>
            Compares plain text input with a computed hash using the given hash provider instance.
            </summary>
            <remarks>
            Use this method to compare hash values. Since hashes may contain a random "salt" value, two seperately generated
            hashes of the same plain text may result in different values. 
            </remarks>
            <param name="hashInstance">A hash instance from configuration.</param>
            <param name="plaintext">The input for which you want to compare the hash to.</param>
            <param name="hashedText">The hash value for which you want to compare the input to.</param>
            <returns><c>true</c> if plainText hashed is equal to the hashedText. Otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Cryptographer.CompareHash(System.String,System.String,System.String)">
            <summary>
            Compares plain text input with a computed hash using the given hash provider instance.
            </summary>
            <remarks>
            Use this method to compare hash values. Since hashes contain a random "salt" value, two seperately generated
            hashes of the same plain text will result in different values. 
            </remarks>
            <param name="hashInstance">A hash instance from configuration.</param>
            <param name="plaintext">The input as a string for which you want to compare the hash to.</param>
            <param name="hashedText">The hash as a string for which you want to compare the input to.</param>
            <returns><c>true</c> if plainText hashed is equal to the hashedText. Otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Cryptographer.EncryptSymmetric(System.String,System.Byte[])">
            <summary>
            Encrypts a secret using a specified symmetric cryptography provider.
            </summary>
            <param name="symmetricInstance">A symmetric instance from configuration.</param>
            <param name="plaintext">The input for which you want to encrypt.</param>
            <returns>The resulting cipher text.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Cryptographer.EncryptSymmetric(System.String,System.String)">
            <summary>
            Encrypts a secret using a specified symmetric cryptography provider.
            </summary>
            <param name="symmetricInstance">A symmetric instance from configuration.</param>
            <param name="plaintext">The input as a base64 encoded string for which you want to encrypt.</param>
            <returns>The resulting cipher text as a base64 encoded string.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Cryptographer.DecryptSymmetric(System.String,System.Byte[])">
            <summary>
            Decrypts a cipher text using a specified symmetric cryptography provider.
            </summary>
            <param name="symmetricInstance">A symmetric instance from configuration.</param>
            <param name="ciphertext">The cipher text for which you want to decrypt.</param>
            <returns>The resulting plain text.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Cryptographer.DecryptSymmetric(System.String,System.String)">
            <summary>
            Decrypts a cipher text using a specified symmetric cryptography provider.
            </summary>
            <param name="symmetricInstance">A symmetric instance from configuration.</param>
            <param name="ciphertextBase64">The cipher text as a base64 encoded string for which you want to decrypt.</param>
            <returns>The resulting plain text as a string.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Cryptographer.GetSymmetricCryptoProvider(System.String)">
            <summary>
            Creates an instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/>.
            </summary>
            <param name="symmetricInstance">The symmetric crypto instance.</param>
            <returns>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Cryptographer.GetHashProvider(System.String)">
            <summary>
            Creates an instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/>.
            </summary>
            <param name="hashInstance">The hash instance.</param>
            <returns>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider">
            <summary>
            <para>A symmetric provider for the Data Protection API (DPAPI).</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider">
            <summary>
            <para>A contract for any provider for configurable symmetric cryptographic implementations.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider.Encrypt(System.Byte[])">
            <summary>
            <para>Encrypts a secret using a specified symmetric cryptography provider.</para>
            </summary>
            <param name="plaintext"><para>The input for which you want to encrypt.</para></param>
            <returns><para>The resulting cipher text.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider.Decrypt(System.Byte[])">
            <summary>
            <para>Decrypts a cipher text using a specified symmetric cryptography provider.</para>
            </summary>
            <param name="ciphertext"><para>The cipher text for which you want to decrypt.</para></param>
            <returns><para>The resulting plain text.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider.#ctor(System.Security.Cryptography.DataProtectionScope,System.Byte[])">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/></para>
            </summary>
            <param name="scope"><para>One of the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> values.</para></param>
            <param name="entropy"><para>The entropy to salt the phrase.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider.#ctor(System.Security.Cryptography.DataProtectionScope)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/></para>
            </summary>
            <param name="scope"><para>One of the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> values.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider.#ctor(System.Security.Cryptography.DataProtectionScope,System.Byte[],Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/></para>
            </summary>
            <param name="scope"><para>One of the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> values.</para></param>
            <param name="entropy"><para>The entropy to salt the phrase.</para></param>
            <param name="instrumentationProvider">Instrumentation provider to use.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider.#ctor(System.Security.Cryptography.DataProtectionScope,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider"/></para>
            </summary>
            <param name="scope"><para>One of the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> values.</para></param>
            <param name="instrumentationProvider">Instrumentation provider to use.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider.Encrypt(System.Byte[])">
            <summary>
            <para>Encrypts a secret using DPAPI.</para>
            </summary>
            <param name="plaintext"><para>The input for which you want to encrypt.</para></param>
            <returns><para>The resulting cipher text.</para></returns>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider.Encrypt(System.Byte[])"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider.Decrypt(System.Byte[])">
            <summary>
            <para>Decrypts cipher text using DPAPI.</para>
            </summary>
            <param name="ciphertext"><para>The cipher text for which you want to decrypt.</para></param>
            <returns><para>The resulting plain text.</para></returns>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider.Decrypt(System.Byte[])"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider">
            <summary>
            A hash provider for any hash algorithm which derives from <see cref="T:System.Security.Cryptography.HashAlgorithm"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider">
            <summary>
            A contract for any provider for configurable hash implementations.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider.CreateHash(System.Byte[])">
            <summary>
            Computes the hash value of plain text.
            </summary>
            <param name="plaintext">The input for which to compute the hash.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider.CompareHash(System.Byte[],System.Byte[])">
            <summary>
            Compares plain text input with a computed hash.
            </summary>
            <param name="plaintext">The input for which you want to compare the hash to.</param>
            <param name="hashedtext">The hash value for which you want to compare the input to.</param>
            <returns><c>true</c> if plainText hashed is equal to the hashedText. Otherwise, <c>false</c>.</returns>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider.SaltLength">
            <summary>
            Defines the salt length used by the provider.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider.#ctor(System.Type,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/> class with the <see cref="T:System.Security.Cryptography.HashAlgorithm"/> type and if salt is enabled.
            </summary>
            <param name="algorithmType">The <see cref="T:System.Security.Cryptography.HashAlgorithm"/> to use.</param>
            <param name="saltEnabled"><see langword="true"/> if salt should be applied; otherwise, <see langword="false"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider.#ctor(System.Type,System.Boolean,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider"/> class with the <see cref="T:System.Security.Cryptography.HashAlgorithm"/> type and if salt is enabled.
            </summary>
            <param name="algorithmType">The <see cref="T:System.Security.Cryptography.HashAlgorithm"/> to use.</param>
            <param name="saltEnabled"><see langword="true"/> if salt should be applied; otherwise, <see langword="false"/>.</param>
            <param name="instrumentationProvider">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider"/> to use.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider.CreateHash(System.Byte[])">
            <summary>
            Computes the hash value of plain text.
            </summary>
            <param name="plaintext">The input for which to compute the hash.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider.CompareHash(System.Byte[],System.Byte[])">
            <summary>
            Compares plain text input with a computed hash.
            </summary>
            <param name="plaintext">The input for which you want to compare the hash to.</param>
            <param name="hashedtext">The hash value for which you want to compare the input to.</param>
            <returns><c>true</c> if plainText hashed is equal to the hashedText. Otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider.CreateHashWithSalt(System.Byte[],System.Byte[])">
            <summary>
            Creates a hash with a specified salt.
            </summary>
            <param name="plaintext">The plaintext to hash.</param>
            <param name="salt">The hash salt.</param>
            <returns>The computed hash.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider.ExtractSalt(System.Byte[])">
            <summary>
            Extracts the salt from the hashedText.
            </summary>
            <param name="hashedtext">The hash in which to extract the salt.</param>
            <returns>The extracted salt.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider.AlgorithmType">
            <summary>
            Gets the <see cref="T:System.Security.Cryptography.HashAlgorithm"/> type.
            </summary>
            <value>
            The <see cref="T:System.Security.Cryptography.HashAlgorithm"/> type.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider.HashCryptographer">
            <summary>
            Gets the cryptographer used for hashing.
            </summary>
            <returns>
            A <see cref="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider.HashCryptographer"/> object.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider.InstrumentationProvider">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider"/> instance that defines the logical events 
            used to instrument this hash provider.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashProviderFactory">
            <summary>
            Represents a factory for creating instances of a class which implements <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashProviderFactory.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashProviderFactory"/> class 
            with the default configuration source.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashProviderFactory.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashProviderFactory"/> class 
            with the given configuration source.</para>
            </summary>
            <param name="configurationSource"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashProviderFactory.#ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashProviderFactory"/> class that
            uses the given <paramref name="container"/> to create instances.</para>
            </summary>
            <param name="container">Container to use.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyReader">
            <summary>
            Allows caller to a read a cryptographic key from a DPAPI-protected key file
            or from a password-protected key archive file.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyReader.Read(System.IO.Stream,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Reads a DPAPI protected key from the given <see cref="T:System.IO.Stream"></see>.
            </summary>
            <param name="protectedKeyContents"><see cref="T:System.IO.Stream"></see> containing the key to be read.</param>
            <param name="protectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see> used to encrypt the generated key.</param>
            <returns>Key read from stream, encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyReader.Restore(System.IO.Stream,System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Restores a key from an encrypted key archive <see cref="T:System.IO.Stream"></see>.
            </summary>
            <param name="protectedKeyContents"><see cref="T:System.IO.Stream"></see> containing the key to be read.</param>
            <param name="passphrase">User-provided passphrase used to encrypt the key in the archive for safekeeping. </param>
            <param name="protectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see> used to encrypt the generated key.</param>
            <returns>Key read from stream, encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyReader.Restore(System.IO.Stream,System.String)">
            <summary>
            Restores a key from an encrypted key archive <see cref="T:System.IO.Stream"></see>.
            </summary>
            <param name="protectedKeyContents"><see cref="T:System.IO.Stream"></see> containing the key to be read.</param>
            <param name="passphrase">User-provided passphrase used to encrypt the key in the archive for safekeeping. </param>
            <returns>Unencrypted key read from stream.
            The caller of this method is responsible for clearing the contents of this byte array.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyWriter">
            <summary>
            Allows caller to a write a cryptographic key to a DPAPI-protected key file
            or to a password-protected key archive file.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyWriter.Write(System.IO.Stream,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey)">
            <summary>
            Writes a cryptographic key to a DPAPI-protected <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="outputStream"><see cref="T:System.IO.Stream"/> to which key is to be written.</param>
            <param name="key">Key to be written.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyWriter.Archive(System.IO.Stream,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey,System.String)">
            <summary>
            Creates an archived version of the given <paramref name="key"/>	written to the <paramref name="outputStream"/>.
            </summary>
            <param name="outputStream"><see cref="T:System.IO.Stream"/> to which key is to be written.</param>
            <param name="key">Key to be written.</param>
            <param name="passphrase">User-provided passphrase used to encrypt the archive in the <see cref="T:System.IO.Stream"/>.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashKeyGenerator">
            <summary>
            Provides several methods for generating a keyed hash algorithm key.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashKeyGenerator.GenerateKey(System.String,System.Security.Cryptography.DataProtectionScope)">
            <overloads>
            Generates a keyed hash key.
            </overloads>
            <summary>
            Generates a keyed hash key based on an algorithm name.
            </summary>
            <param name="keyedHashAlgorithmName">Keyed hash algorithm name as defined in <see cref="T:System.Security.Cryptography.CryptoConfig"></see>.</param>
            <param name="dataProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see> used to encrypt the generated key.</param>
            <returns>Generated key encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashKeyGenerator.GenerateKey(System.String)">
            <summary>
            Generates a keyed hash key based on an algorithm name.
            </summary>
            <param name="keyedHashAlgorithmName">Keyed hash algorithm name as defined in <see cref="T:System.Security.Cryptography.CryptoConfig"></see>.</param>
            <returns>Unencrypted key generated for specified keyed hash algorithm. The caller of this method
            is responsible for overwriting the contents of this byte array.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashKeyGenerator.GenerateKey(System.Type,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Generates a keyed hash key based on an algorithm type.
            </summary>
            <param name="keyedHashAlgorithmType">Keyed hash algorithm type.</param>
            <param name="dataProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see> used to encrypt the generated key.</param>
            <returns>Generated key encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashKeyGenerator.GenerateKey(System.Type)">
            <summary>
            Generates a keyed hash key based on an algorithm type.
            </summary>
            <param name="keyedHashAlgorithmType">Keyed hash algorithm type.</param>
            <returns>Unencrypted key generated for specified keyed hash algorithm. The caller of this method
            is responsible for overwriting the contents of this byte array.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProjectInstaller">
            <summary>
            Represents the installer for the instrumentation events. Not intended for direct use.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProjectInstaller.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProjectInstaller"/> class.
            Lets the system know that the InstallUtil.exe tool will be run against this assembly.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProjectInstaller.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProjectInstaller.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProjectInstaller.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider">
            <summary>
            A hash provider for any hash algorithm which derives from <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider.#ctor(System.Type,System.Boolean,System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/> class with a <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/>, if salt is enabled, and the key to use.
            </summary>
            <param name="algorithmType">
            The <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/> to use.
            </param>
            <param name="saltEnabled"><see langword="true"/> if salt should be used; otherwise, <see langword="false"/>.</param>
            <param name="protectedKeyFileName">File name of DPAPI-protected key used to encrypt and decrypt secrets through this provider.</param>
            <param name="protectedKeyProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the key on disk. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider.#ctor(System.Type,System.Boolean,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/> class with a <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/>, if salt is enabled, and the key to use.
            </summary>
            <param name="algorithmType">
            The <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/> to use.
            </param>
            <param name="saltEnabled"><see langword="true"/> if salt should be used; otherwise, <see langword="false"/>.</param>
            <param name="protectedKey">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"/> for the provider.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider.#ctor(System.Type,System.Boolean,System.String,System.Security.Cryptography.DataProtectionScope,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/> class with a <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/>, if salt is enabled, and the key to use.
            </summary>
            <param name="algorithmType">
            The <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/> to use.
            </param>
            <param name="saltEnabled"><see langword="true"/> if salt should be used; otherwise, <see langword="false"/>.</param>
            <param name="protectedKeyFileName">File name of DPAPI-protected key used to encrypt and decrypt secrets through this provider.</param>
            <param name="protectedKeyProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the key on disk. </param>
            <param name="instrumentationProvider">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider"/> to use.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider.#ctor(System.Type,System.Boolean,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider"/> class with a <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/>, if salt is enabled, and the key to use.
            </summary>
            <param name="algorithmType">
            The <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/> to use.
            </param>
            <param name="saltEnabled"><see langword="true"/> if salt should be used; otherwise, <see langword="false"/>.</param>
            <param name="protectedKey">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"/> for the provider.</param>
            <param name="instrumentationProvider">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider"/> to use.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider.HashCryptographer">
            <summary>
            Gets the cryptographer used for hashing.
            </summary>
            <returns>The cryptographer initialized with the configured key.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider">
            <summary>
            Defines the logical events that can be instrumented for hash providers.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider.TotalHashOperationPerformedPerformanceCounterName">
            <summary>
            Made public for testing
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider.TotalHashComparisonPerformedPerformanceCounterName">
            <summary>
            Made public for testing
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider.TotalHashMismatchesPerformedPerformanceCounterName">
            <summary>
            Made public for testing
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider.counterCategoryName">
            <summary>
            Made public for testing
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider.#ctor(System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider"/> class.
            </summary>
            <param name="instanceName">The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> instance this instrumentation listener is created for.</param>
            <param name="performanceCountersEnabled"><b>true</b> if performance counters should be updated.</param>
            <param name="eventLoggingEnabled"><b>true</b> if event log entries should be written.</param>
            <param name="applicationInstanceName">The application instance name.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider.#ctor(System.String,System.Boolean,System.Boolean,Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.IPerformanceCounterNameFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider"/> class.
            </summary>
            <param name="instanceName">The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider"/> instance this instrumentation listener is created for.</param>
            <param name="performanceCountersEnabled"><b>true</b> if performance counters should be updated.</param>
            <param name="eventLoggingEnabled"><b>true</b> if event log entries should be written.</param>
            <param name="nameFormatter">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.IPerformanceCounterNameFormatter"/> that is used to creates unique name for each <see cref="T:System.Diagnostics.PerformanceCounter"/> instance.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider.FireCyptographicOperationFailed(System.String,System.Exception)">
            <summary>
            </summary>
            <param name="message">The message that describes the failure.</param>
            <param name="exception">The exception thrown during the failure.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider.FireHashOperationPerformed">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider.FireHashComparisonPerformed">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider.FireHashMismatchDetected">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider.CreatePerformanceCounters(System.String[])">
            <summary>
            Creates the performance counters to instrument the hash provider events for the specified instance names.
            </summary>
            <param name="instanceNames">The instance names for the performance counters.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyReaderWriter">
            <summary>
            Reads and writes cryptographic keys to and from streams.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyReaderWriter.Read(System.IO.Stream,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Reads a DPAPI-protected key from the given <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="protectedKeyStream"><see cref="T:System.IO.Stream"/> containing the DPAPI-protected key.</param>
            <param name="protectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see> used to decrypt the key read from the stream.</param>
            <returns>Key read from stream, encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyReaderWriter.Restore(System.IO.Stream,System.String,System.Security.Cryptography.DataProtectionScope)">
            <overloads>
            Restores a cryptographic key from a <see cref="T:System.IO.Stream"/>. This method is intended for use in
            transferring a key between machines.
            </overloads>
            <summary>
            Restores a cryptogrpahic key from a <see cref="T:System.IO.Stream"/>. This method is intended for use in
            transferring a key between machines.
            </summary>
            <param name="protectedKeyStream"><see cref="T:System.IO.Stream"/> from which key is to be restored.</param>
            <param name="passphrase">User-provided passphrase used to encrypt the key in the arhive.</param>
            <param name="protectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the key on disk. </param>
            <returns>Key restored from stream, encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyReaderWriter.Restore(System.IO.Stream,System.String)">
            <summary>
            Restores a cryptographic key from a <see cref="T:System.IO.Stream"/>. This method is intended for use in
            transferring a key between machines.
            </summary>
            <param name="protectedKeyStream"><see cref="T:System.IO.Stream"/> from which key is to be restored.</param>
            <param name="passphrase">User-provided passphrase used to encrypt the key in the arhive.</param>
            <returns>Unencrypted key restored from stream. It is the responsibility of the calling code to
            clear the returned byte array.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyReaderWriter.Write(System.IO.Stream,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey)">
            <summary>
            Writes an encrypted key to an output stream. This method is not intended to allow the keys to be 
            moved from machine to machine.
            </summary>
            <param name="outputStream"><see cref="T:System.IO.Stream"/> to which DPAPI-protected key is to be written.</param>
            <param name="key">Encrypted key to be written to stream.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyReaderWriter.Archive(System.IO.Stream,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey,System.String)">
            <summary>
            Archives a cryptographic key to a <see cref="T:System.IO.Stream"/>. This method is intended for use in 
            transferring a key between machines.
            </summary>
            <param name="outputStream"><see cref="T:System.IO.Stream"/> to which key is to be archived.</param>
            <param name="keyToBeArchived">Key to be archived.</param>
            <param name="passphrase">User-provided passphrase used to encrypt the key in the arhive.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey">
            <summary>
            Represents an encrypted cryptographic key and the DPAPI <see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to encrypt it.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey.CreateFromPlaintextKey(System.Byte[],System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Constructor method use to create a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see> from a plaintext symmetric key. The caller of this method
            is responsible for clearing the byte array containing the plaintext key after calling this method.
            </summary>
            <param name="plaintextKey">Plaintext key to protect. The caller of this method is responsible for 
            clearing the byte array containing the plaintext key after calling this method.</param>
            <param name="dataProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see></param> used to protect this key.
            <returns>Initialized <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see> containing the plaintext key protected with DPAPI.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey.CreateFromEncryptedKey(System.Byte[],System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Constructor method used to create a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"/> from an already encrypted symmetric key.
            </summary>
            <param name="encryptedKey">Encrypted key to protect.</param>
            <param name="dataProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see></param> used to protect this key.
            <returns>Initialized <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see> containing the plaintext key protected with DPAPI.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey.Unprotect">
            <summary>
            Returns the decrypted symmetric key.
            </summary>
            <returns>Unencrypted symmetric key. It is the responsibility of the caller of this method to
            clear the returned byte array.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey.EncryptedKey">
            <summary>
            Gets the encrypted key contained by this object.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey.DecryptedKey">
            <summary>
            Gets the decrypted key protected by this object. It is the responsibility of the caller of this method 
            to clear the returned byte array.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKeyCache">
            <summary>
            Represents the protected key cache.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKeyCache.Clear">
            <summary>
             Clear the cache.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKeyCache.Item(System.String)">
            <summary>
            Gets the protected ke for the key file name.
            </summary>
            <param name="keyFileName">The key file name to get the key.</param>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"/> for the key file name.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider">
            <summary>
            <para>A symmetric provider for any symmetric algorithm which derives from <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider.#ctor(System.Type,System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> class.
            </summary>
            <param name="algorithmType">The symmetric algorithm type.</param>
            <param name="protectedKeyFileName">Input file from which DPAPI-protected key is to be read.</param>
            <param name="protectedKeyProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the key on disk. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider.#ctor(System.Type,System.IO.Stream,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> class.
            </summary>
            <param name="algorithmType">The cryptographic algorithm type.</param>
            <param name="protectedKeyStream">Input <see cref="T:System.IO.Stream"/> from which DPAPI-protected key is to be read.</param>
            <param name="protectedKeyProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the key on disk. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider.#ctor(System.Type,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> class.
            </summary>
            <param name="algorithmType">The symmetric algorithm type.</param>
            <param name="key">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"/> for the provider.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider.#ctor(System.Type,System.String,System.Security.Cryptography.DataProtectionScope,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> class.
            </summary>
            <param name="algorithmType">The symmetric algorithm type.</param>
            <param name="protectedKeyFileName">Input file from which DPAPI-protected key is to be read.</param>
            <param name="protectedKeyProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the key on disk. </param>
            <param name="instrumentationProvider">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider"/> to use.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider.#ctor(System.Type,System.IO.Stream,System.Security.Cryptography.DataProtectionScope,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> class.
            </summary>
            <param name="algorithmType">The cryptographic algorithm type.</param>
            <param name="protectedKeyStream">Input <see cref="T:System.IO.Stream"/> from which DPAPI-protected key is to be read.</param>
            <param name="protectedKeyProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the key on disk. </param>
            <param name="instrumentationProvider">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider"/> to use.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider.#ctor(System.Type,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider"/> class.
            </summary>
            <param name="algorithmType">The symmetric algorithm type.</param>
            <param name="key">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"/> for the provider.</param>
            <param name="instrumentationProvider">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider"/> to use.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider.Decrypt(System.Byte[])">
            <summary>
            Decrypts a secret using the configured <c>SymmetricAlgorithm</c>.
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider.Decrypt(System.Byte[])"/>
            </summary>
            <param name="ciphertext"><para>The cipher text to be decrypted.</para></param>
            <returns><para>The resulting plain text. It is the responsibility of the caller to clear the returned byte array
            when finished.</para></returns>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider.Decrypt(System.Byte[])"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider.Encrypt(System.Byte[])">
            <summary>
            <para>Encrypts a secret using the configured <c>SymmetricAlgorithm</c>.</para>
            </summary>
            <param name="plaintext"><para>The input to be encrypted. It is the responsibility of the caller to clear this
            byte array when finished.</para></param>
            <returns><para>The resulting cipher text.</para></returns>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider.Encrypt(System.Byte[])"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider.InstrumentationProvider">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider"/> instance that defines the logical events 
            used to instrument this Symmetric Algorithm Provider.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptographer">
            <summary>
            <para>Represents basic cryptography services for a <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/>.</para>
            </summary>
            <remarks>
            <para>
            Because the IV (Initialization Vector) has the same distribution as the resulting 
            ciphertext, the IV is randomly generated and prepended to the ciphertext.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptographer.#ctor(System.Type,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey)">
            <summary>
            <para>Initalize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptographer"/> class with an algorithm type and a key.</para>
            </summary>
            <param name="algorithmType"><para>The qualified assembly name of a <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/>.</para></param>
            <param name="key"><para>The key for the algorithm.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptographer.Finalize">
            <summary>
            Finalizer for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptographer"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptographer.Dispose">
            <summary>
            Releases all resources for this instance.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptographer.Dispose(System.Boolean)">
            <summary>
            Override to customize resources to be disposed.
            </summary>
            <param name="disposing">Unused.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptographer.Encrypt(System.Byte[])">
            <summary>
            <para>Encrypts bytes with the initialized algorithm and key.</para>
            </summary>
            <param name="plaintext"><para>The plaintext in which you wish to encrypt.</para></param>
            <returns><para>The resulting ciphertext.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptographer.Decrypt(System.Byte[])">
            <summary>
            <para>Decrypts bytes with the initialized algorithm and key.</para>
            </summary>
            <param name="encryptedText"><para>The text which you wish to decrypt.</para></param>
            <returns><para>The resulting plaintext.</para></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptoProviderFactory">
            <summary>
            Represents a factory for creating instances of a class which implements <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptoProviderFactory.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptoProviderFactory"/> class 
            with the default configuration source.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptoProviderFactory.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptoProviderFactory"/> class 
            with the given configuration source.</para>
            </summary>
            <param name="configurationSource">Source for current configuration information.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptoProviderFactory.#ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptoProviderFactory"/> class
            with the given container (which should have already been configured).</para>
            </summary>
            <param name="container">Container to resolve object from.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.BlockName">
            <summary>
              Looks up a localized string similar to Enterprise Library Cryptography Application Block.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.DecryptionFailed">
            <summary>
              Looks up a localized string similar to The decryption operation failed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.DpapiMustHaveEntropyForMachineMode">
            <summary>
              Looks up a localized string similar to You must define the entropy when using machine mode..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.EncryptionFailed">
            <summary>
              Looks up a localized string similar to The encryption operation failed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.ErrorCryptographicOperationFailed">
            <summary>
              Looks up a localized string similar to The error occurred using the &quot;{0}&quot; instance..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.ErrorHashProviderConfigurationFailedMessage">
            <summary>
              Looks up a localized string similar to The error occurred retrieving the configuration for hash algorithm instance &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.ErrorSymmetricEncryptionConfigurationFailedMessage">
            <summary>
              Looks up a localized string similar to The error occurred retrieving the configuration for symmetric encryption algorithm instance &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.ExceptionByteArrayValueMustBeGreaterThanZeroBytes">
            <summary>
              Looks up a localized string similar to The value must be greater than 0 bytes..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.ExceptionByteArrayValueMustBeGreaterThanZeroBytes1">
            <summary>
              Looks up a localized string similar to The value must be greater than 0 bytes..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.ExceptionCreatingHashAlgorithmInstance">
            <summary>
              Looks up a localized string similar to The type must be of type HashAlgorithm..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.ExceptionCreatingSymmetricAlgorithmInstance">
            <summary>
              Looks up a localized string similar to The type must be of type SymmetricAlgorithm..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.ExceptionCreatingSymmetricAlgorithmInstance1">
            <summary>
              Looks up a localized string similar to The type must be of type SymmetricAlgorithm..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.ExceptionDecrypting">
            <summary>
              Looks up a localized string similar to Unable to decrypt data..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.ExceptionMustBeAHashAlgorithm">
            <summary>
              Looks up a localized string similar to The type must be a HashAlgorithm..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.ExceptionMustBeAKeyedHashAlgorithm">
            <summary>
              Looks up a localized string similar to The type must be a KeyedHashAlgorithm..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.ExceptionNullOrEmptyString">
            <summary>
              Looks up a localized string similar to The value can not be a null or empty string..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.ExceptionParameterMustImplementType">
            <summary>
              Looks up a localized string similar to Parameter must implement type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.HashComparisonFailed">
            <summary>
              Looks up a localized string similar to The hash comparison failed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.HashComparisonPerformedHelpResource">
            <summary>
              Looks up a localized string similar to Hash Comparisons/sec is the rate at which hash comparisons were performed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.HashCreationFailed">
            <summary>
              Looks up a localized string similar to The hash creation failed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.HashMismatchDetectedHelpResource">
            <summary>
              Looks up a localized string similar to Hash Mismatches/sec is the rate at which hash comparison mismatches were detected..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.HashOperationPerformedHelpResource">
            <summary>
              Looks up a localized string similar to Hash Operations/sec is the rate at which plain text was hashed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.IncorrectKeyVersionError">
            <summary>
              Looks up a localized string similar to Key versions do not match between encrypted key and decryption algorithm.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.InvalidHexString">
            <summary>
              Looks up a localized string similar to String must represent a valid hexadecimal (e.g. : 0F99DD).
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.SymmetricDecryptionPerformedHelpResource1">
            <summary>
              Looks up a localized string similar to Symmetric Decryptions/sec is the rate at which symmetric decryptions were performed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.SymmetricEncryptionPerformedHelpResource">
            <summary>
              Looks up a localized string similar to Symmetric Encryptions/sec is the rate at which symmetric encryptions were performed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.TotalHashComparisonPerformedHelpResource">
            <summary>
              Looks up a localized string similar to Total Hash Comparisons is the total number of hash comparisons performed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.TotalHashMismatchDetectedHelpResource">
            <summary>
              Looks up a localized string similar to Total Hash Mismatches is total number of hash comparison mismatches detected..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.TotalHashOperationPerformedHelpResource">
            <summary>
              Looks up a localized string similar to Total Hash Operations is the total number of plain text hashed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.TotalSymmetricDecryptionPerformedHelpResource">
            <summary>
              Looks up a localized string similar to Total Symmetric Decryptions is the total number of symmetric decryptions performed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.TotalSymmetricEncryptionPerformedHelpResource">
            <summary>
              Looks up a localized string similar to Total Symmetric Encryptions is the total number of symmetric encryptions performed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.UnknownKeyedHashAlgorithmCreatedError">
            <summary>
              Looks up a localized string similar to Algorithm of type {0} is not a known keyed hash algorithm.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.UnknownSymmetricAlgorithmCreatedError">
            <summary>
              Looks up a localized string similar to Algorithm of type {0} is not a known symmetric encryption algorithm.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricKeyGenerator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricKeyGenerator.GenerateKey(System.String,System.Security.Cryptography.DataProtectionScope)">
            <overloads>
            Generates a symmetric key.
            </overloads>
            <summary>
            Generates a symmetric key based on an algorithm name.
            </summary>
            <param name="symmetricAlgorithmName">Symmetric algorithm name as defined in <see cref="T:System.Security.Cryptography.CryptoConfig"></see>.</param>
            <param name="dataProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see> used to encrypt the generated symmetric key.</param>
            <returns>Generated key encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricKeyGenerator.GenerateKey(System.Type,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Generates a symmetric key based on an algorithm type.
            </summary>
            <param name="symmetricAlgorithmType">Symmetric algorithm type.</param>
            <param name="dataProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see> used to encrypt the generated symmetric key.</param>
            <returns>Generated key encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricKeyGenerator.GenerateKey(System.String)">
            <summary>
            Generates a symmetric key based on an algorithm name.
            </summary>
            <param name="symmetricAlgorithmName">Name of a symmetric algorithm as defined in <see cref="T:System.Security.Cryptography.CryptoConfig"/>.</param>
            <returns>Unencrypted symmetric key. It is the responsibility of the caller of this method
            to clear the returned byte array.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricKeyGenerator.GenerateKey(System.Type)">
            <summary>
            Generates a symmetric key based on an algorithm type.
            </summary>
            <param name="symmetricAlgorithmType">Symmetric algorithm type.</param>
            <returns>Unencrypted symmetric key. It is the responsibility of the caller of this method
            to clear the returned byte array.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager">
            <summary>
            Handles all utility tasks associated with <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"></see> keys.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.ArchiveKey(System.IO.Stream,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey,System.String)">
            <summary>
            Archives a cryptographic key to a <see cref="T:System.IO.Stream"/>. This method is intended for use in 
            transferring a key between machines.
            </summary>
            <param name="outputStream"><see cref="T:System.IO.Stream"/> to which key is to be archived.</param>
            <param name="keyToArchive">Key to be archived.</param>
            <param name="passphrase">User-provided passphrase used to encrypt the key in the arhive.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.ClearCache">
            <summary>
            Clear the key manager cache.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.GenerateKeyedHashKey(System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Generates a keyed hash key based on an algorithm name.
            </summary>
            <param name="keyedHashKeyAlgorithmName">Keyed hash algorithm name as defined in <see cref="T:System.Security.Cryptography.CryptoConfig"></see>.</param>
            <param name="dataProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see> used to encrypt the generated keyed hash key.</param>
            <returns>Generated key encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.GenerateKeyedHashKey(System.String)">
            <summary>
            Generates a keyed hash key based on an algorithm name.
            </summary>
            <param name="keyedHashKeyAlgorithmName">Keyed hash algorithm name as defined in <see cref="T:System.Security.Cryptography.CryptoConfig"></see>.</param>
            <returns>Byte array containing plaintext keyed hash key. It is the responsibility of the caller to clear out the byte
            array to protect the key.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.GenerateKeyedHashKey(System.Type,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Generates a keyed hash key based on an algorithm type.
            </summary>
            <param name="keyedHashAlgorithmType">Keyed hash algorithm type.</param>
            <param name="dataProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see> used to encrypt the generated keyed hash key.</param>
            <returns>Generated key encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.GenerateKeyedHashKey(System.Type)">
            <summary>
            Generates a keyed hash key based on an algorithm type.
            </summary>
            <param name="keyedHashAlgorithmType">Keyed hash algorithm type.</param>
            <returns>Byte array containing plaintext keyed hash key. It is the responsibility of the caller to clear out the byte
            array to protect the key.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.GenerateSymmetricKey(System.String,System.Security.Cryptography.DataProtectionScope)">
            <overloads>
            Generates a symmetric key.
            </overloads>
            <summary>
            Generates a symmetric key based on an algorithm name.
            </summary>
            <param name="symmetricAlgorithmName">Symmetric algorithm name as defined in <see cref="T:System.Security.Cryptography.CryptoConfig"></see>.</param>
            <param name="dataProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see> used to encrypt the generated symmetric key.</param>
            <returns>Generated key encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.GenerateSymmetricKey(System.String)">
            <summary>
            Generates a symmetric key based on an algorithm name.
            </summary>
            <param name="symmetricAlgorithmName">Symmetric algorithm name as defined in <see cref="T:System.Security.Cryptography.CryptoConfig"></see>.</param>
            <returns>Byte array containing plaintext symmetric key. It is the responsibility of the caller to clear out the byte
            array to protect the key.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.GenerateSymmetricKey(System.Type,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Generates a symmetric key based on an algorithm type.
            </summary>
            <param name="symmetricAlgorithmType">Symmetric algorithm type.</param>
            <param name="dataProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"></see> used to encrypt the generated symmetric key.</param>
            <returns>Generated key encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.GenerateSymmetricKey(System.Type)">
            <summary>
            Generates a symmetric key based on an algorithm type.
            </summary>
            <param name="symmetricAlgorithmType">Symmetric algorithm type.</param>
            <returns>Byte array containing plaintext symmetric key. It is the responsibility of the caller to clear out the byte
            array to protect the key.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.Read(System.IO.Stream,System.Security.Cryptography.DataProtectionScope)">
            <overloads>
            Reads an encrypted key from an input stream. This method is not intended to allow keys to be transferred
            from another machine.
            </overloads>
            <summary>
            Reads an encrypted key from an input stream. This method is not intended to allow keys to be transferred
            from another machine.
            </summary>
            <param name="inputStream"><see cref="T:System.IO.Stream"/> from which DPAPI-protected key is to be read.</param>
            <param name="dpapiProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the key on disk. </param>
            <returns>Key read from stream, encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.Read(System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Reads an encrypted key from an input file. This method is not intended to allow keys to be transferred
            from another machine.
            </summary>
            <param name="protectedKeyFileName">Input file from which DPAPI-protected key is to be read.</param>
            <param name="dpapiProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the key on disk. </param>
            <returns>Key read from stream, encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.RestoreKey(System.IO.Stream,System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Restores a cryptogrpahic key from a <see cref="T:System.IO.Stream"/>. This method is intended for use in
            transferring a key between machines.
            </summary>
            <param name="inputStream"><see cref="T:System.IO.Stream"/> from which key is to be restored.</param>
            <param name="passphrase">User-provided passphrase used to encrypt the key in the arhive.</param>
            <param name="protectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the key on disk. </param>
            <returns>Key restored from stream, encapsulated in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"></see>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.Write(System.IO.Stream,System.Byte[],System.Security.Cryptography.DataProtectionScope)">
            <overloads>
            Writes an encrypted key to an output stream. This method is not intended to allow the keys to be 
            moved from machine to machine.
            </overloads>
            <summary>
            Writes an encrypted key to an output stream. This method is not intended to allow the keys to be 
            moved from machine to machine.
            </summary>
            <param name="outputStream"><see cref="T:System.IO.Stream"/> to which DPAPI-protected key is to be written.</param>
            <param name="encryptedKey">Encrypted key to be written to stream.</param>
            <param name="dpapiProtectionScope"><see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the key on disk. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager.Write(System.IO.Stream,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey)">
            <summary>
            Writes an encrypted key to an output stream. This method is not intended to allow the keys to be 
            moved from machine to machine.
            </summary>
            <param name="outputStream"><see cref="T:System.IO.Stream"/> to which DPAPI-protected key is to be written.</param>
            <param name="key">Encrypted key to be written to stream.</param>
        </member>
    </members>
</doc>
