<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Practices.EnterpriseLibrary.Configuration.DesignTime</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.RedirectedSectionNameConverter">
            <summary>
            <see cref="T:System.ComponentModel.TypeConverter"/> implementation that converts known configuration section names to application block names.<br/>
            </summary>
            <remarks>
            This <see cref="T:System.ComponentModel.TypeConverter"/> implementation is used for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.RedirectedSectionElement"/>'s Name property.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.RedirectedSectionNameConverter.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.RedirectedSectionNameConverter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.RedirectedSectionNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts an application block name to a configuration section name.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use for conversion.</param>
            <param name="value">The value to convert</param>
            <returns>If the <paramref name="value"/> is an application block name, the associated configuraion section name; Otherwise the string representation of <paramref name="value"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.RedirectedSectionNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts <paramref name="value"/> to an application block name.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use for conversion.</param>
            <param name="value">The value to convert</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to which <paramref name="value"/> should be converted.</param>
            <returns>If the <paramref name="value"/> is a known configuration section name, the associates application block name; Otherwise the converted <paramref name="value"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.RedirectedSectionNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values from the default context for the data type this type converter is designed for.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>A collection of application block names.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.RedirectedSectionNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/> is an exclusive list of possible values, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>Always returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.RedirectedSectionNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>Always returns <see langword="false"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.EditorUtility">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.EditorUtility"/> assist in locating and quierying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/>
            from a <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>.
            </summary>
            <remarks>
            This utility class helps when creating custom editors that need to be displayed from within the Visual 
            Studio integrated editor.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.EditorUtility.GetBindableProperty(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
             Extracts the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/> from a <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>.
            </summary>
            <param name="context">The context to extract the bindable property from.</param>
            <returns>
             Returns the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/> or <see langword="null"/> if one could not be located.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.EditorUtility.IsTextReadOnly(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty)">
            <summary>
             Evaluates a bindable property to determine if the bindable is marked with <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.EditorWithReadOnlyTextAttribute"/>.
            </summary>
            <param name="bindableProperty">The property to evaluate.</param>
            <returns>
             Returns <see langword="true"/> if the bindable indicates the text on an editor should only be editable from a popup editor.<br/>
             Otherwise, returns <see langword="false"/>.
             </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerUtilities">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerUtilities"/> provides common <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ICryptographicKeyProperty"/> routines
            used by the design-time.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerUtilities.ImportProtectedKey(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings)">
            <summary>
             Imports a protected key from a file and updates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings"/> structure with the imported values.
            </summary>
            <param name="uiService">The user-interface service for displaying messages and windows to the user.</param>
            <param name="keySettings">The key settings structure to update.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.PopupTextEditor">
            <summary>
             The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.PopupTextEditor"/> provides a text value to edit in a modal window.
            </summary>
             <remarks>
             This editor can be applied to a <see cref="T:System.Configuration.ConfigurationElement"/> property with the
             <see cref="T:System.ComponentModel.EditorAttribute"/> using the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommonDesignTime.EditorTypes.PopupTextEditor"/>
             for the <see cref="P:System.ComponentModel.EditorAttribute.EditorTypeName"/>.
             </remarks>
             <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TextEditDialog"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.PopupTextEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Allows the user to edit the specic value in a dialog by displaying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TextEditDialog"/> to the user.
            </summary>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information. 
                            </param><param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services. 
                            </param><param name="value">The object to edit. 
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.PopupTextEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.PopupTextEditor"/>.
            </summary>
            <returns>
            A <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal"/>.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information. 
                            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.PopupEditorValue">
            <summary>
             A value for binding the value in to the view.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.PopupEditorValue.Value">
            <summary>
             The value to edit.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TextEditDialog">
            <summary>
            A text editing dialog window.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.PopupTextEditor"/>
            <summary>
            TextEditDialog
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TextEditDialog.#ctor">
            <summary>
            Initializes a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TextEditDialog"/>.
            </summary>
            <remarks>
            This is the dialog displayed by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.PopupTextEditor"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TextEditDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationContainer">
            <summary>
            The dependency injection container used by the Enterprise Library configuration designtime.
            </summary>
            <remarks>
            The container provides registration and initialization of standard
            services needed for the design-time configuration</remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationContainer.#ctor">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationContainer"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationContainer.#ctor(System.IServiceProvider)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationContainer"/>
            </summary>
            <param name="serviceProvider">A service provider to resolve services.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationContainer.DiscoverSubstituteTypesFromAssemblies">
            <summary>
            Discovers types via the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AnnotationService"/> that
            provide the design-time metadata for another class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationContainer.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <returns>
            A service object of type <paramref name="serviceType"/>.
                                -or- 
                            null if there is no service object of type <paramref name="serviceType"/>.
            </returns>
            <param name="serviceType">An object that specifies the type of service object to get. 
                            </param><filterpriority>2</filterpriority>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ContainerUtility.GenericResolver`1">
            <summary>
            Resolve a <typeparamref name="T"/> from the underlying container.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver`1">
            <summary>
            Specifies a resolver that knows how to locate a <typeparamref name="T"/>.
            </summary>
            <remarks>
            The resolver is often used to more clearly express the dependency a class
            may have on something that builds instances.  This is often used in lieu
            of injecting an entire container into a constructor.
            <typeparam name="T"></typeparam>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver`1.Resolve">
            <summary>
            Resolves an instance of <typeparamref name="T"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver`1.Resolve(System.Type)">
            <summary>
            Returns an instance of <paramref name="childType"/> whose ancestor
            must be of type <typeparamref name="T"/>.
            </summary>
            <param name="childType"></param>
            <returns>An instance of <typeparamref name="T"/></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ContainerUtility.GenericResolver`1.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Creates an instance of the GenericResolver class.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ContainerUtility.GenericResolver`1.Resolve">
            <summary>
            Returns a <typeparamref name="T"/> from the underlying container.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ContainerUtility.GenericResolver`1.Resolve(System.Type)">
            <summary>
            Returns an instance of <paramref name="childType"/> whose ancestor
            must be of type <typeparamref name="T"/>.
            </summary>
            <param name="childType"></param>
            <returns>An instance of <typeparamref name="T"/></returns>
            <exception cref="T:System.InvalidCastException">If the <paramref name="childType"/> cannot be cast to <typeparamref name="T"/></exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.BackingStoreReferenceConverter">
            <summary>
            This code supports the Caching Block design-time and is
            not inteded to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.BackingStoreReferenceConverter.#ctor(System.String)">
            <summary>
            Initialzies an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.BackingStoreReferenceConverter"/>
            </summary>
            <param name="nullBackingStoreName"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.BackingStoreReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified value object to a <see cref="T:System.String"/> object.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. 
                            </param><param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use. 
                            </param><param name="value">The <see cref="T:System.Object"/> to convert. 
                            </param><exception cref="T:System.NotSupportedException">The conversion could not be performed. 
                            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.BackingStoreReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. 
                            </param><param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed. 
                            </param><param name="value">The <see cref="T:System.Object"/> to convert. 
                            </param><param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to. 
                            </param><exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. 
                            </exception><exception cref="T:System.NotSupportedException">The conversion cannot be performed. 
                            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.ReferencePropertyConverter">
            <summary>
            <see cref="T:System.ComponentModel.TypeConverter"/> implementation that converts an empty string to a user friendly display name.<br/>
            </summary>
            <remarks>
            This <see cref="T:System.ComponentModel.TypeConverter"/> is used in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty"/> class, for non-required references.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.ReferencePropertyConverter.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.ReferencePropertyConverter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.ReferencePropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the user friendly display name, retrieved from <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.ReferencePropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/> to an empty string.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use for conversion.</param>
            <param name="value">The value to convert</param>
            <returns>If the <paramref name="value"/> is the user friendly display name, retrieved from <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.ReferencePropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>, an empty string; Otherwise the string representation of <paramref name="value"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.ReferencePropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts an empty string to an user friendly display name.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use for conversion.</param>
            <param name="value">The value to convert</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to which <paramref name="value"/> should be converted.</param>
            <returns>If <paramref name="value"/> is an empty string, an user friendly display name; otherwise the converted <paramref name="value"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.SystemDataProviderConverter">
            <summary>
            <see cref="T:System.ComponentModel.TypeConverter"/> implementation that returns a list of known ADO provider names as standard values.<br/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.SystemDataProviderConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>Always returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.SystemDataProviderConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/> is an exclusive list of possible values, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>Always returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Converters.SystemDataProviderConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values from the default context for the data type this type converter is designed for.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>A collection of known ADO provider names.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.CustomAttributesEditor">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.CustomAttributesEditor"/> provides a grid-like editor
            for editing attributes on Enterprise Library custom configuration data instances.
            <br/>
            This is used by the design-time infrastructure and is not intended to be used directly from your code.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.CustomAttributesEditor"/> should get automatically connected to any configuration element
            implementing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ICustomProviderData"/> by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomAttributesPropertyExtender"/>.
            </remarks>
            <summary>
            CustomAttributesEditor
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.CustomAttributesEditor.#ctor">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.CustomAttributesEditor"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.CustomAttributesEditor.GetEditorAttributes">
            <summary>
             Retrieves the editor attributes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.CustomAttributesEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.CustomEditorBinder">
            <summary>
            Utility class for custom editors to establish bindings between <see cref="T:System.Windows.FrameworkElement"/> and a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/> 
            <br/>
            This is used by the design-time infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.CustomEditorBinder.BindProperty(System.Windows.FrameworkElement,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty)">
            <summary>
             Creates a binding between a <see cref="F:System.Windows.UIElement.IsEnabledProperty"/> and
             the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.ReadOnly"/> value.
            </summary>
            <param name="element">The visual element to bind to.</param>
            <param name="property">The property to bind with.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.DatePickerEditor">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.DatePickerEditor"/> is an in-line editor that can be applied to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <remarks>
            The editor displays a visual for selecting a date and updates a property value with the result.
            <br/>
            The editor can be applied by using the <see cref="T:System.ComponentModel.EditorAttribute"/> on a property of
            the <see cref="T:System.Configuration.ConfigurationElement"/>.  
            </remarks>
            <seealso cref="F:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommonDesignTime.EditorTypes.DatePickerEditor"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker">
            <summary>
            Represents a control that allows the user to select a date.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.#ctor">
            <summary>
            Initializes a new instance of the DatePicker class. 
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.CalendarStyleProperty">
            <summary>
            Identifies the CalendarStyle dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.DisplayDateProperty">
            <summary>
            Identifies the DisplayDate dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.DisplayDateEndProperty">
            <summary>
            Identifies the DisplayDateEnd dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.OnDisplayDateEndChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateEndProperty property changed handler.
            </summary>
            <param name="d">DatePicker that changed its DisplayDateEnd.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.DisplayDateStartProperty">
            <summary>
            Identifies the DisplayDateStart dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.OnDisplayDateStartChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateStartProperty property changed handler.
            </summary>
            <param name="d">DatePicker that changed its DisplayDateStart.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.FirstDayOfWeekProperty">
            <summary>
            Identifies the FirstDayOfWeek dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.IsDropDownOpenProperty">
            <summary>
            Identifies the IsDropDownOpen dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.OnIsDropDownOpenChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsDropDownOpenProperty property changed handler.
            </summary>
            <param name="d">DatePicker that changed its IsDropDownOpen.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.OnIsEnabledChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsEnabled property changes.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.IsTodayHighlightedProperty">
            <summary>
            Identifies the IsTodayHighlighted dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.SelectedDateProperty">
            <summary>
            Identifies the SelectedDate dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedDateProperty property changed handler.
            </summary>
            <param name="d">DatePicker that changed its SelectedDate.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.SelectedDateFormatProperty">
            <summary>
            Identifies the SelectedDateFormat dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.OnSelectedDateFormatChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedDateFormatProperty property changed handler.
            </summary>
            <param name="d">DatePicker that changed its SelectedDateFormat.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.TextProperty">
            <summary>
            Identifies the Text dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.OnTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TextProperty property changed handler.
            </summary>
            <param name="d">DatePicker that changed its Text.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.SetTextInternal(System.String)">
            <summary>
            Sets the local Text property without breaking bindings
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.OnApplyTemplate">
            <summary>
            Builds the visual tree for the DatePicker control when a new template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.ToString">
            <summary>
            Provides a text representation of the selected date.
            </summary>
            <returns>A text representation of the selected date, or an empty string if SelectedDate is a null reference.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.OnCreateAutomationPeer">
            <summary>
            Creates the automation peer for this DatePicker Control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.OnDateValidationError(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePickerDateValidationErrorEventArgs)">
            <summary>
            Raises the DateValidationError event.
            </summary>
            <param name="e">A DatePickerDateValidationErrorEventArgs that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.OnGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
                Called when this element gets focus.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.ParseText(System.String)">
            <summary>
            Input text is parsed in the correct format and changed into a DateTime object.
            If the text can not be parsed TextParseError Event is thrown.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.CalendarClosed">
            <summary>
            Occurs when the drop-down Calendar is closed.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.CalendarOpened">
            <summary>
            Occurs when the drop-down Calendar is opened.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.DateValidationError">
            <summary>
            Occurs when text entered into the DatePicker cannot be parsed or the Date is not valid to be selected.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.SelectedDateChanged">
            <summary>
            Occurs when a date is selected.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.BlackoutDates">
            <summary>
            Gets the days that are not selectable.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.CalendarStyle">
            <summary>
            Gets or sets the style that is used when rendering the calendar.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.DisplayDate">
            <summary>
            Gets or sets the date to display.
            </summary>
            
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.DisplayDateEnd">
            <summary>
            Gets or sets the last date to be displayed.
            </summary>
            
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.DisplayDateStart">
            <summary>
            Gets or sets the first date to be displayed.
            </summary>
            
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.FirstDayOfWeek">
            <summary>
            Gets or sets the day that is considered the beginning of the week.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.IsDropDownOpen">
            <summary>
            Gets or sets a value that indicates whether the drop-down Calendar is open or closed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.IsTodayHighlighted">
            <summary>
            Gets or sets a value that indicates whether the current date will be highlighted.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.SelectedDate">
            <summary>
            Gets or sets the currently selected date.
            </summary>
            
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.SelectedDateFormat">
            <summary>
            Gets or sets the format that is used to display the selected date.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker.Text">
            <summary>
            Gets or sets the text that is displayed by the DatePicker.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.DatePickerEditor.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.DatePickerEditor"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.ElementCollectionEditor">
            <summary>
            An editor that displays a collection of elements in a grid-like layout for editing as part of
            a parent element.
            <br/>
            This is used by the design-time infrastructure and is not intended to be used directly from your code.
            </summary>
            <summary>
            ElementCollectionEditor
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.ElementCollectionEditor.#ctor">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.ElementCollectionEditor"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.ElementCollectionEditor.OnApplyTemplate">
            <summary>
            Establishing the grid based on the property count of the children.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.ElementCollectionEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FilteredFileNameEditor">
            <summary>
            Provides a user interface for selecting a file name.
            </summary>
            <seealso cref="T:System.Windows.Forms.Design.FileNameEditor"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FilteredFileNameEditor.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FilteredFileNameEditor"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FilteredFileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object using the editor style provided by the GetEditStyle method.
            </summary>
            <param name="context">
            An ITypeDescriptorContext that can be used to gain additional context information.
            </param>
            <param name="provider">
            A service provider object through which editing services may be obtained.
            </param>
            <param name="value">
            An instance of the value being edited.
            </param>
            <returns>
            The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FilteredFileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
            <summary>
            Initializes the open file dialog when it is created.
            </summary>
            <param name="openFileDialog">
            The <see cref="T:System.Windows.Forms.OpenFileDialog"/> to use to select a file name. 
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FlagsEditor">
            <summary>
            Interaction logic for FlagsEditor.xaml
            </summary>
            <summary>
            FlagsEditor
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FlagsEditor.#ctor">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FlagsEditor"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FlagsEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseDataProtectionScopeControl">
            <summary>
            Visual control that allows a user to select the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> which is used to store an cryptographic key.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseDataProtectionScopeControl.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseDataProtectionScopeControl"/> class.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseDataProtectionScopeControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseDataProtectionScopeControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseDataProtectionScopeControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseDataProtectionScopeControl.Scope">
            <summary>
            Gets or sets the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> which should be used to encrypt a key file.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseKeyFileControl">
            <summary>
            Visual control that allows a user to select the file which is used to store an cryptographic key.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IWizardValidationTarget">
            <summary>
            Represents the validation logic for a control within the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IWizardValidationTarget.ValidateControl">
            <summary>
            Validates the control
            </summary>
            <returns><see langword="true"/> if controls state is valid; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseKeyFileControl.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseKeyFileControl"/>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseKeyFileControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseKeyFileControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseKeyFileControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseKeyFileControl.FilePath">
            <summary>
            Gets or sets the filepath which is used to store the cryptographic key.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl">
            <summary>
            Visual control that allows a user to specify a key for an cryptography algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl"/> class.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl.KeyCreator">
            <summary>
            Sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator"/> that should be used to generate a new random key.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl.Key">
            <summary>
            <para>Gets or sets the key for the algorithm.</para>
            </summary>
            <value>
            <para>The key for the algorithm</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl.KeyLength">
            <summary>
            <para>Gets the length of the current key.</para>
            </summary>
            <value>
            <para>The length of the current key.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard">
            <summary>
            UI wizard that allows a user to manipulate a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings"/> class, from within the configuration console.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.#ctor(Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator"/>.
            </summary>
            <param name="keyCreator">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator"/> that should be used to generate and validate an input key.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.#ctor(Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator"/> and 
            for a specific <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep"/>.
            </summary>
            <param name="keyCreator">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator"/> that should be used to generate and validate an input key.</param>
            <param name="step">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep"/> which should be shown within the wizard.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.KeySettings">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings"/> for this wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.Key">
            <summary>
            Sets an unencrypted key to be used within the wizard.    
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.KeyCreator">
            <summary>
            Sets an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator"/> instance, that should be used to validate and generate keys.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep">
            <summary>
            Enumeration to represent the steps within the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep.SupplyKey">
            <summary>
            Wizard step in which the user decides how to provide a key.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep.CreateNewKey">
            <summary>
            Wizard step in which the user specifies a new cryptographic key.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep.ChooseKeyFile">
            <summary>
            Wizard step in which the user specifies a file, the cryptoghrapic key should be stored in.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep.ChooseProtectionScope">
            <summary>
            Wizard step in which the user specifies the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> 
            which should be used to protect the key file.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep.OpenExistingKeyFile">
            <summary>
            Wizard step in which the user chooses a existing keyfile that should be used as key.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep.ImportArchivedKey">
            <summary>
            Wizard step in which the user imports an archived keyfile as key.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep.Finished">
            <summary>
            Wizard step that indicates the wizard is completed.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl">
            <summary>
            Visual control that allows a user to export an protected key to an archived key file.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl.ValidateControl">
            <summary>
            Validates the fields on this form
            </summary>
            <returns>True if all fields on form are valid.</returns>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl.FileName">
            <summary>
            Gets or sets the file path to which the key should be exported.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl.Password">
            <summary>
            Gets the password which should be used to export the key.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyUI">
            <summary>
            UI to support exporting a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyUI.#ctor(Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyUI"/> class.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ICryptographicKeyProperty">
            <summary>
            Represents a configuration node that contains cryptographic key information.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ICryptographicKeyProperty.KeySettings">
            <summary>
            Gets the cryptographic key information.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ICryptographicKeyProperty.KeyCreator">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator"/> that should be used to generate and validate the cryptographic key information.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator">
            <summary>
            <para>Represents the creator of keys for security algorithms.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator.GenerateKey">
            <summary>
            <para>When implemented by a class, generates a random key.</para>
            </summary>
            <returns><para>A random key.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator.KeyIsValid(System.Byte[])">
            <summary>
            <para>When implemented by a class, determines if the <paramref name="key"/> is valid.</para>
            </summary>
            <param name="key">The key to test.</param>
            <returns><para><see langword="true"/> if the key is valid; otherwise <see langword="false"/>.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator.KeyLength">
            <summary>
            <para>When implemented by a class, gets the length of the key.</para>
            </summary>
            <value>The length of the key.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl">
            <summary>
            Visual control that allows a user to import an protected key from an archived key file, from within the cryptographic key wizard.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl"/> class.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl.FileName">
            <summary>
            Gets the file path to archived key file.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl.PassPhrase">
            <summary>
            Gets the password that should be used reading information from the archived key file.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyedHashAlgorithmKeyCreator">
            <summary>
            <para>Creates keys for a <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyedHashAlgorithmKeyCreator.#ctor(System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyedHashAlgorithmKeyCreator"/> class.
            </summary>
            <param name="algorithmType">The <see cref="T:System.Security.Cryptography.HashAlgorithm"/> type that should be used.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyedHashAlgorithmKeyCreator.GenerateKey">
            <summary>
            <para>Generates a random key.</para>
            </summary>
            <returns><para>A random key.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyedHashAlgorithmKeyCreator.KeyIsValid(System.Byte[])">
            <summary>
            <para>Determines if the <paramref name="key"/> is valid.</para>
            </summary>
            <param name="key">The key to test.</param>
            <returns><para><see langword="true"/> if the key is valid; otherwise <see langword="false"/>.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyedHashAlgorithmKeyCreator.KeyLength">
            <summary>
            <para>Gets the length of the key.</para>
            </summary>
            <value>The length of the key.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerEditor">
            <summary>
            Provides a user interface for managing cryptogrpahic key information.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object using the editor style provided by the GetEditStyle method.
            </summary>
            <param name="context">
            An ITypeDescriptorContext that can be used to gain additional context information.
            </param>
            <param name="provider">
            A service provider object through which editing services may be obtained.
            </param>
            <param name="value">
            An instance of the value being edited.
            </param>
            <returns>
            The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>.
            </summary>
            <param name="context">See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>.</param>
            <returns>See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ChooseDpapiScopeMessage">
             <summary>
               Looks up a localized string similar to The key for this algorithm is stored in a file. To further protect the key, it is encrypted using the Data Protection API (DPAPI).
            
            Please select the data protection mode. “User” mode will encrypt your data using the credentials of the currently logged-in user. “Machine” mode will allow any user on this computer to encrypt or decrypt the key..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ChooseExistingKeyFileMessage">
            <summary>
              Looks up a localized string similar to Please choose the location of the existing DPAPI-encrypted algorithm key file:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ChooseKeyFileMessage">
            <summary>
              Looks up a localized string similar to The key for this algorithm will be encrypted and stored in a file. Please choose where you would like to store this file:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CreateKeyMessage">
            <summary>
              Looks up a localized string similar to Please enter or generate the key you would like to use for this algorithm (in hexadecimal):.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CreateNewKeyLabel">
            <summary>
              Looks up a localized string similar to Create a new key.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CryptographicKeyWizardCancelButton">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CryptographicKeyWizardFinishButton">
            <summary>
              Looks up a localized string similar to Finish.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CryptographicKeyWizardNextButton">
            <summary>
              Looks up a localized string similar to Next  &gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CryptographicKeyWizardPreviousButton">
            <summary>
              Looks up a localized string similar to &lt;  Previous.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CryptographicKeyWizardTitle">
            <summary>
              Looks up a localized string similar to Cryptographic Key Wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CryptoKeyWizardErrorTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.DataProtectionScopeCurrentUser">
            <summary>
              Looks up a localized string similar to User mode.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.DataProtectionScopeLocalMachine">
            <summary>
              Looks up a localized string similar to Machine mode.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.DecryptPasswordCheckFailure">
            <summary>
              Looks up a localized string similar to Password is not correct..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ErrorExportingKey">
            <summary>
              Looks up a localized string similar to An error occurred exporting the key..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ErrorImportingKey">
            <summary>
              Looks up a localized string similar to An error occurred importing the key. Please make sure the file path and ProtectionScope are current..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExistingKeyLabel">
            <summary>
              Looks up a localized string similar to Use an existing DPAPI-protected key file.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportDialogErrorTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportDialogTitle">
            <summary>
              Looks up a localized string similar to Export Key As.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportDirectoryInvalid">
            <summary>
              Looks up a localized string similar to Directory is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyCommandText">
            <summary>
              Looks up a localized string similar to Export key.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyDialogTitle">
            <summary>
              Looks up a localized string similar to Export Key Wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyFileMessage">
            <summary>
              Looks up a localized string similar to The key for this algorithm will be encrypted with a password and stored in a file. Please choose where you would like to store this file:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyLongCommandText">
            <summary>
              Looks up a localized string similar to Export cryptography key to archive..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyPasswordConfirmLabel">
            <summary>
              Looks up a localized string similar to Confirm password:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyPasswordLabel">
            <summary>
              Looks up a localized string similar to Please enter the password with which to encrypt this key file:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyUICancelButton">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyUIOkButton">
            <summary>
              Looks up a localized string similar to Ok.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportPasswordMinLength">
            <summary>
              Looks up a localized string similar to Password must be at least {0} characters..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportPasswordsDoNotMatch">
            <summary>
              Looks up a localized string similar to Passwords do not match..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportSuccessful">
            <summary>
              Looks up a localized string similar to Key has been exported successfully..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportSuccessfulTitle">
            <summary>
              Looks up a localized string similar to Export.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.FileDoesNotExists">
            <summary>
              Looks up a localized string similar to Could not find the specified file..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.FileShouldNotBeEmpty">
            <summary>
              Looks up a localized string similar to The file name should not be empty.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.GenerateKeyButtonText">
            <summary>
              Looks up a localized string similar to &amp;Generate.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.GenericCreateStatusText">
            <summary>
              Looks up a localized string similar to Create a new {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportArchivedKeyMessage">
            <summary>
              Looks up a localized string similar to Please choose the location of the existing password-encrypted algorithm key file:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportArchivedKeyPasswordLabel">
            <summary>
              Looks up a localized string similar to Please enter the password that was used to encrypt this key file:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportDecryptError">
            <summary>
              Looks up a localized string similar to Unable to decrypt key.  Password may be incorrect..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportDecryptFormatError">
            <summary>
              Looks up a localized string similar to Unable to read key file. File format may be invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportDialogErrorTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportDialogTitle">
            <summary>
              Looks up a localized string similar to Open key archive.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportKeyLabel">
            <summary>
              Looks up a localized string similar to Import a password-protected key file.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportPasswordInvalid">
            <summary>
              Looks up a localized string similar to Password is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportPasswordInvalidTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportSourceFileInvalid">
            <summary>
              Looks up a localized string similar to File does not exist..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportSuccessful">
            <summary>
              Looks up a localized string similar to Key has been imported successfully..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportSuccessfulTitle">
            <summary>
              Looks up a localized string similar to Import.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.InvalidExportDestination">
            <summary>
              Looks up a localized string similar to Invalid export destination..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.InvalidImportSource">
            <summary>
              Looks up a localized string similar to Invalid source file..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.InvalidKeyWhenSavingError">
            <summary>
              Looks up a localized string similar to Key is not set and node is invalid. Please delete this node and recreate it with a valid key..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyArchiveFileFilter">
            <summary>
              Looks up a localized string similar to Key export files (*.txt)|*.txt|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyCouldNotBeRead">
            <summary>
              Looks up a localized string similar to Could not read key from archive. Password might be incorrect..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyedHashProviderNodeName">
            <summary>
              Looks up a localized string similar to Keyed Hash Provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyFileBadNameError">
            <summary>
              Looks up a localized string similar to {0} is not a valid key file name. Please re-enter..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyFileFilter">
            <summary>
              Looks up a localized string similar to Key files (*.key)|*.key|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyFileLoadingError">
            <summary>
              Looks up a localized string similar to Unable to load cryptographic configuration -- Cannot open key file {0}. Configuration will be removed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyManagerEditorRequiresKeyInfoProperty">
            <summary>
              Looks up a localized string similar to Invalid property type.  You may only use the KeyManagerEditor on properties of the type KeyInfo..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyManagerUICurrentKeySizeCaption">
            <summary>
              Looks up a localized string similar to Key Size:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyManagerUIInvalidKey">
            <summary>
              Looks up a localized string similar to Invalid key.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyManagerUIInvalidKeyCharactersErrorMessage">
            <summary>
              Looks up a localized string similar to Key must be in hexadecimal form (for example, 49FFC7).
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyManagerUIInvalidKeyLengthErrorMessage">
            <summary>
              Looks up a localized string similar to Invalid key length.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyManagerUIKeyBoxEncrypted">
            <summary>
              Looks up a localized string similar to The key is hidden for security purposes.  If you would like a new key you must create a new cryptography instance.  If you must replace the key for this instance, delete this instance and create a new instance with the same name..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyShouldNotBeEmpty">
            <summary>
              Looks up a localized string similar to Please enter a key..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.LoadExistingKeyFileFailureErrorMessage">
             <summary>
               Looks up a localized string similar to Unable to load key from file {0}.
            
            Exception message is: &apos;{1}&apos;.
            
            Would you like to proceed and generate a new key?.
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.MissingPassword">
            <summary>
              Looks up a localized string similar to Key file is password protected and no password was provided..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.OpenExistingKeyFileFailureErrorMessage">
             <summary>
               Looks up a localized string similar to Unable to open Key key file: {0}.
            
            Exception message is: &apos;{1}&apos;..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.OpenExistingKeyFileFailureTitle">
            <summary>
              Looks up a localized string similar to Unable to open key file.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.OpenExistingKeyFileTitle">
            <summary>
              Looks up a localized string similar to Open existing key file.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.OverwriteExportFileCaption">
            <summary>
              Looks up a localized string similar to Export Key.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.OverwriteExportFileMessage">
            <summary>
              Looks up a localized string similar to The file {0} is read-only.  Would you like to overwrite the file?.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ProtectedKeySettingsToString">
            <summary>
              Looks up a localized string similar to &lt;hidden&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ProtectionScopeDescription">
            <summary>
              Looks up a localized string similar to The DataProtectionScope that should be used..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.SaveExistingKeyFileTitle">
            <summary>
              Looks up a localized string similar to Choose key file.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.SupplyKeyMessage">
            <summary>
              Looks up a localized string similar to In order to use this algorithm, you must supply a key. You can either create a new key, or use an existing key..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.TypeShouldDeriveFromHashAlgorithm">
            <summary>
              Looks up a localized string similar to Type should derive from System.Security.Cryptography.HashAlgorithm..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.TypeShouldDeriveFromSymmetricAlgorithm">
            <summary>
              Looks up a localized string similar to Type should derive from System.Security.Cryptography.SymmetricAlgorithm..
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.OpenExistingKeyFileControl">
            <summary>
            Visual control that allows a user to select an existing key file within the cryptographic key wizard.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.OpenExistingKeyFileControl.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.OpenExistingKeyFileControl"/> class.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.OpenExistingKeyFileControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.OpenExistingKeyFileControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.OpenExistingKeyFileControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.OpenExistingKeyFileControl.FilePath">
            <summary>
            The file path to the existing key file.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings">
            <summary>
            <para>Represents the settings to store and open a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.ProtectedKey"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings"/> class
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.#ctor(System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings"/> class, given a <paramref name="fileName"/> and <see cref="T:System.Security.Cryptography.DataProtectionScope"/>.
            </summary>
            <param name="fileName">The file path to the protected keyfile.</param>
            <param name="scope">The <see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the keyfile.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.ToString">
            <summary>
            Returns a string representation of this class.
            </summary>
            <returns>A string representation of this class.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.FileName">
            <summary>
            Gets or sets the file path to the protected keyfile.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.Scope">
            <summary>
            Gets or sets the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the keyfile.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.ProtectedKey">
            <summary>
            Gets or sets the actual <see cref="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.ProtectedKey"/> represented by this class.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyControl">
            <summary>
            Visual control that allows a user to select an to select a method of proving a key.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyControl.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyControl"/> class.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyControl.Method">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyMethod"/> which should be used inside the cryptographic key wizard.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyMethod">
            <summary>
            Enumeration to represent the ways a user can provide a cryptographic key.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyMethod.CreateNew">
            <summary>
            A new key should be created.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyMethod.OpenExisting">
            <summary>
            An existing protected key file should be used.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyMethod.ImportKey">
            <summary>
            An archived keyfile should be used.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SymmetricAlgorithmKeyCreator">
            <summary>
            <para>Creates keys for a <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SymmetricAlgorithmKeyCreator.#ctor(System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SymmetricAlgorithmKeyCreator"/> class.
            </summary>
            <param name="algorithmType">The <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/> type that should be used.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SymmetricAlgorithmKeyCreator.GenerateKey">
            <summary>
            <para>Generates a random key.</para>
            </summary>
            <returns><para>A random key.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SymmetricAlgorithmKeyCreator.KeyIsValid(System.Byte[])">
            <summary>
            <para>Determines if the <paramref name="key"/> is valid.</para>
            </summary>
            <param name="key">The key to test.</param>
            <returns><para><see langword="true"/> if the key is valid; otherwise <see langword="false"/>.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SymmetricAlgorithmKeyCreator.KeyLength">
            <summary>
            <para>Gets the length of the key.</para>
            </summary>
            <value>The length of the key.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MemberChooser.MemberChooserResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MemberChooser.MemberChooserResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MemberChooser.MemberChooserResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MemberChooser.MemberChooserResources.FieldsNode">
            <summary>
              Looks up a localized string similar to Fields.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MemberChooser.MemberChooserResources.MethodsNode">
            <summary>
              Looks up a localized string similar to Methods.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MemberChooser.MemberChooserResources.PropertiesNode">
            <summary>
              Looks up a localized string similar to Properties.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooser">
            <summary>
            Allows for multiple member selection.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooser.#ctor(System.Windows.Forms.Design.IUIService)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooser"/> class.
            </summary>
            <param name="uiService">The <see cref="T:System.Windows.Forms.Design.IUIService"/> to perform UI operations.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooser.ChooseMembers(System.Type)">
            <summary>
            Launches a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI"/> to perform the selection of multiple members.
            </summary>
            <param name="type">The type for which the members are to be selected.</param>
            <returns>A colleciton with the selected members.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI">
            <summary>
            User interface for selecting multiple members from a type.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI.#ctor(System.Type,System.Windows.Forms.Design.IUIService)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI"/> class.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> for which the members are to be chosen from.</param>
            <param name="uiService">The <see cref="T:System.Windows.Forms.Design.IUIService"/> to provide UI services.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI.GetSelectedMembers">
            <summary>
            Returns the selected members.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MultilineTextEditor">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MultilineTextEditor"/> provides an in-line multi-line text editor for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/>.
            </summary>
            <remarks>
            This may be applied to a <see cref="T:System.String"/> property on a <see cref="T:System.Configuration.ConfigurationElement"/>
            with the <see cref="T:System.ComponentModel.EditorAttribute"/> and specifying <see cref="F:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommonDesignTime.EditorTypes.MultilineText"/>
            for the <see cref="P:System.ComponentModel.EditorAttribute.EditorTypeName"/>.
            <code>[Editor(CommonDesignTime.EditorTypes.MultilineText, CommonDesignTime.EditorTypes.FrameworkElement)]</code>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MultilineTextEditor.#ctor">
            <summary>
            Instatiates a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MultilineTextEditor"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyGroup">
            <summary>
            Represents a group of assemblies.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyGroup.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyGroup"/> class with a name and a set of assemblies.
            </summary>
            <param name="name">The name for the group.</param>
            <param name="assemblies">The assemblies in the group.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyGroup.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyGroup.Assemblies">
            <summary>
            Gets the set of assemblies.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SearchAction">
            <summary>
            Finds and updates nodes containing classes that match the supplied string.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SearchAction.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyGroupNode})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SearchAction"/> class.
            </summary>
            <param name="searchText">The text to search.</param>
            <param name="nodes">The tree of nodes representing the assemblies, namespaces and classes to match.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SearchAction.Abort">
            <summary>
            Aborts the execution of the search.
            </summary>
            <returns><see langword="true"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SearchAction.Run">
            <summary>
            Schedules the execution of the search action.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SearchAction.Completed">
            <summary>
            Event raised whent the search has completed.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SearchActionEventArgs">
            <summary>
            Event args indicating the completion of a search action.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SearchActionEventArgs.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SearchActionEventArgs"/> with a selected node.
            </summary>
            <param name="result">The node that should be selected by default as the result of the search 
            action, or <see langword="null"/> if there is no such node.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SearchActionEventArgs.Result">
            <summary>
            Gets the node that should be selected by default as the result of the search action.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SelectGacAssembliesDialog">
            <summary>
            Interaction logic for SelectGacAssembliesDialog.xaml
            </summary>
            <summary>
            SelectGacAssembliesDialog
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SelectGacAssembliesDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SelectGacAssembliesDialog"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SelectGacAssembliesDialog.GetAssemblyNames">
            <summary>
            Returns the names for the assemblies selected by the user.
            </summary>
            <returns>The names for the assemblies selected by the user.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SelectGacAssembliesDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyNamesCollection">
            <summary>
            Non-generic ObservableCollection subclass for XAML support.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowser">
            <summary>
            Interaction logic for TypeBrowser.xaml
            </summary>
            <summary>
            TypeBrowser
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowser"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowser.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IAssemblyDiscoveryService)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowser"/> class with a view model and an
            assembly discovery service.
            </summary>
            <param name="viewModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel"/>.</param>
            <param name="assemblyDiscoveryService">The assembly discovery service.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowser.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowser.SelectedType">
            <summary>
            Gets the type selected by the user.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowser.SupportsAssemblyLoading">
            <summary>
            Gets an indication of whether the browser supports assembly loading.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel">
            <summary>
            View model for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowser"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.INodeCreator">
            <summary>
            Interface for the creation of nodes.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.INodeCreator.CreateTypeNode(System.Type)">
            <summary>
            Creates a new type node.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.INodeCreator.CreateNamespaceNode(System.String)">
            <summary>
            Creates a new namespace node.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.INodeCreator.CreateAssemblyNode(System.Reflection.Assembly)">
            <summary>
            Creates a new assembly node.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel.#ctor(System.Func{System.Type,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel"/> class with a type filter predicate.
            </summary>
            <param name="typeFilter">The type filter predicate.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel"/> class with a 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint"/> and a service provider.
            </summary>
            <param name="constraint">The constraint to use when filtering types.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel.#ctor(System.Func{System.Type,System.Boolean},System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel"/> class with a 
            type filter predicate and a service provider.
            </summary>
            <param name="typeFilter">The type filter predicate.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel.UpdateAssemblyGroups(System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyGroup})">
            <summary>
            Updates the assembly groups for the view model.
            </summary>
            <param name="assemblyGroups">The new set of assembly groups.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel.ResolveType">
            <summary>
            Resolves the type represented by the current selection and the values for the generic type 
            parameters, if any.
            </summary>
            <returns>Returns the type represented by the current selection.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel.Notify(System.String)">
            <summary>
            Notifies that a property has changed its value.
            </summary>
            <param name="property">The name of the changed property.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel.AssemblyGroups">
            <summary>
            Gets the collection of assembly groups.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel.GenericTypeParameters">
            <summary>
            Gets the collection of generic type parameters associated to the currently selected type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel.HasGenericParameters">
            <summary>
            Gets a value indicating whether the currently selected type has generic parameters.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel.Title">
            <summary>
            Gets the title for the view model.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel.TypeName">
            <summary>
            Gets or sets the type name input for the view model.
            </summary>
            <remarks>Setting a value triggers a search.</remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel.ConcreteType">
            <summary>
            Gets or sets the currently selected type.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserViewModel.PropertyChanged">
            <summary>
            Event raised when a property has changed.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.Node">
            <summary>
            Base class for nodes in the type browser view model.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.Node.Notify(System.String)">
            <summary>
            Notifies that a property has changed its value.
            </summary>
            <param name="property">The name of the changed property.</param>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.Node.PropertyChanged">
            <summary>
            Event raised when a property has changed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.Node.IsExpanded">
            <summary>
            Gets or sets the expanded state.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.Node.IsSelected">
            <summary>
            Gets or sets the selection state.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.Node.Visibility">
            <summary>
            Gets or sets the visibility.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeNode">
            <summary>
            Represents a type.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeNode.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeNode"/> class for a type.
            </summary>
            <param name="type">The represented type.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeNode.Data">
            <summary>
            Gets the represented type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeNode.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeNode.FullName">
            <summary>
            Gets the full name.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.NamespaceNode">
            <summary>
            Represents a namespace.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.NamespaceNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.NamespaceNode"/> class for a namespace name.
            </summary>
            <param name="name">The namespace name.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.NamespaceNode.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.NamespaceNode.Types">
            <summary>
            Gets the nodes representing the types in the represented namespace.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyNode">
            <summary>
            Represents an assembly.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyNode.#ctor(System.Reflection.Assembly,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.INodeCreator,System.Func{System.Type,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyNode"/> class.
            </summary>
            <param name="assembly">The represented assembly.</param>
            <param name="nodeCreator">The node creator.</param>
            <param name="typeFilter">The type filter predicate.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyNode.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyNode.Namespaces">
            <summary>
            Gets the nodes representing the namespaces in the represented assembly.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyGroupNode">
            <summary>
            Represents an assembly group.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyGroupNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyGroup,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.INodeCreator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyGroupNode"/> class.
            </summary>
            <param name="assemblyGroup">The represented assembly group.</param>
            <param name="nodeCreator">The node creator.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyGroupNode.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.AssemblyGroupNode.Assemblies">
            <summary>
            Gets the nodes representing the assemblies in the represented assembly group.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.GenericTypeParameter">
            <summary>
            Represents a generic type parameter in a generic type.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> represents a property of a single <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> describes the configuration property via property metadata <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Attributes"/> and
            provides access to set and retrieve its value via <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Value"/>.
            <br/>
            The value described by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> is maintained by another <see cref="T:System.Object"/> provided at construction time.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> provides a base definition for the logic backing a view-element within
            the Enterprise Library Configuration Design tool.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel.Dispose(System.Boolean)">
            <summary>
            Indicates the object is being disposed.
            </summary>
            <param name="disposing">Indicates <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel.Dispose(System.Boolean)"/> was invoked through an explicit call to <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel.Dispose"/> instead of a finalizer call.</param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel.Bindable">
            <summary>
            When overridden, gets an object that is bound to the view.
            </summary>
            <remarks>
            By default, the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> returns itself.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.#ctor(System.IServiceProvider,System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Intantiates a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/> used to obtain services.  This is most-often used when the property appears in an editor.</param>
            <param name="component">The <see cref="T:System.Object"/> that contains the property described by <paramref name="declaringProperty"/>.</param>
            <param name="declaringProperty">The description of the property owned by <paramref name="component"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.#ctor(System.IServiceProvider,System.Object,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Intantiates a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/> used to obtain services.  This is most-often used when the property appears in an editor.</param>
            <param name="component">The <see cref="T:System.Object"/> that contains the property described by <paramref name="declaringProperty"/>.</param>
            <param name="declaringProperty">The description of the property owned by <paramref name="component"/>.</param>
            <param name="additionalAttributes">Additional, or overridden, meta-data attributes for the <paramref name="declaringProperty"/></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.PropertyDependencyInitialization(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel)">
            <summary>
            Property dependencies not provided through the constructor and satisfied via dependency-injection.
            </summary>
            <param name="containingSection">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> that contains this property.</param>
            <param name="applicationModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel"/> the property resides in.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.CreateBindableProperty(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property)">
            <summary>
            Returns a Bindable property for the property passed in as the <paramref name="propertyToBind"/>. <br/>
            Note that the <paramref name="propertyToBind"/> may not be the property you override, but in the case of 
            environmental overrides, might be a overridden property that is based on the current one. <br/>
            <br/>
            This method translates the metadata of the current property into a <see ref="BindableProperty"/> that determines the visual layout. <br/>
            </summary>
            <param name="propertyToBind">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> for which a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.BindableProperty"/> needs to be created.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.CreateBindableProperty">
            <summary>
            Returns an appropriate bindable property for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> based on the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Attributes"/> meta-data.
            </summary>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.CreateBindableProperty(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property)"/>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.GetChildProperties">
            <summary>
            Retrieves child properties for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Validate">
            <summary>
            Validates this property by invoking <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Validate(System.String)"/> with the value from <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.BindableProperty"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Validate(System.String)">
            <summary>
             Validates the property and updates the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ValidationResults"/> collection.
            </summary>
            <param name="value">The value to run validation against.  This may be different from the internal value.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ResetValidationResults(System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            Resets the validation results with the provided enumerable of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/>.
            </summary>
            <param name="results"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ConvertToBindableValue(System.Object)">
            <summary>
            Converts a value from an internal value to one that can be displayed in the user-interface.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ConvertFromBindableValue(System.String)">
            <summary>
            Converts a value from a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.BindableProperty"/> value to a value
            that can be stored internally.
            </summary>
            <param name="bindableValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ConvertFromBindableValueInvariant(System.String)">
            <summary>
            Converts a value with no <see cref="T:System.Globalization.CultureInfo"/> considerations, from a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.BindableProperty"/> value to a value
            that can be stored internally.
            </summary>
            <param name="bindableValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.GetValue">
            <summary>
            Gets the underlying, stored value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SetValue(System.Object)">
            <summary>
            Sets the underlying, stored value.
            </summary>
            <remarks>
            Once the value is stored, the property is <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Validate"/>.
            
            </remarks>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property changes.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext)">
            <summary>
             Provides an opportunity to initialize the property after creation and prior to visualization.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.GetValidators">
            <summary>
            Gets the set of validators for this property.
            </summary>
            <remarks>
            Validators may be added by deriving from this and returning additional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator"/> objects.  
            Or, they can be added by providing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.Validation.ValidationAttribute"/> attributes to the 
            underlying <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Component"/> or during the construction of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.<br/>
            Validators specified by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.Validation.ValidationAttribute"/> are created by the containing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/>.
            </remarks>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing default property validators, obtained from <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.GetDefaultPropertyValidators"/>
            and additional validators provided through <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.Validation.ValidationAttribute"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.GetDefaultPropertyValidators">
            <summary>
            Gets the set of default property validators this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Dispose(System.Boolean)">
            <summary>
            Indicates the object is being disposed.
            </summary>
            <param name="disposing">Indicates <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel.Dispose(System.Boolean)"/> was invoked through an explicit call to <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel.Dispose"/> instead of a finalizer call.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ContainingSection">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> containing this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <remarks>
            The containing section for this property is typically specified in the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.PropertyDependencyInitialization(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel)"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Attributes">
            <summary>
            Gets the attributes that were supplied to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.PropertiesShown">
            <summary>
            Gets or sets a value indicating that child properties should be shown.
            </summary>
            <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ChildProperties"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Category">
            <summary>
            Gets a category for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.PropertyName">
            <summary>
            The name of the property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.DisplayName">
            <summary>
            The name of this property as it should appear in the UI.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Description">
            <summary>
            Gets a description for this property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.PropertyType">
            <summary>
            Gets the <see cref="T:System.Type"/> of the property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Hidden">
            <summary>
            Returns <see langword="true"/> if the property should show up in the editor.
            Otherwise returns <see langword="false"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Component">
            <summary>
            Gets the <see cref="T:System.Object"/> that defines the property described by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.DeclaringProperty">
            <summary>
            Gets the <see cref="T:System.ComponentModel.PropertyDescriptor"/> for the property defined on <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Component"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Converter">
            <summary>
            Converter that should be used to convert value to and from a string representation.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.HasChildProperties">
            <summary>
            Gets a value indiciating that this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> has child properties.
            </summary>
            <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ChildProperties"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ChildProperties">
            <summary>
            Gets the child properties for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.HasSuggestedValues">
            <summary>
            Returns a value indicating that this property has suggested values.
            </summary>
            <value>Returns <see langword="true"/> if there are suggested values for this property. 
            Otherwise, returns <see langword="false"/>.
            </value>
            <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SuggestedValues"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SuggestedValues">
            <summary>
            Get a list of suggested values.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ReadOnly">
            <summary>
            Gets a value indicating if the property is read-only.
            </summary>
            <value>
            Returns <see langword="true"/> if the property is read-only.
            Otherwise, returns <see langword="false"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SuggestedValuesEditable">
            <summary>
            Gets a value indicating if the values must be from the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SuggestedValues"/> set
            or if other values an be provided.
            </summary>
            <remarks>
            Returns <see langword="true"/> if the value must come from the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SuggestedValues"/> list.
            Otherwise, returns <see langword="false"/>.</remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.BindableProperty">
            <summary>
            Gets a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.BindableProperty"/> used as the bound value in the user-interface.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Value">
            <summary>
            The value of the property.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.IsRequired">
            <summary>
            Gets a value indicating if the property is requried.
            </summary>
            <value>
            Returns <see langword="true"/> if the property is required.
            Otherwise, returns <see langword="false"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.IsValid">
            <summary>
             Gets a value indicating if the property is valid.
            </summary>
             <value>
             Returns <see langword="true"/> if the property is valid.
             Otherwise, returns <see langword="false"/>.
             </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ValidationResults">
            <summary>
            Gets any validation results for this property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.GenericTypeParameter.#ctor(System.Type,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.GenericTypeParameter"/> class.
            </summary>
            <param name="typeParameter">The represented generic type parameter.</param>
            <param name="serviceProvider">A service provider.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.GenericTypeParameter.GetValue">
            <summary>
            Gets the underlying, stored value.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.GenericTypeParameter.SetValue(System.Object)">
            <summary>
            Sets the underlying, stored value.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.GenericTypeParameter.TypeParameter">
            <summary>
            Gets the represented type parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.GenericTypeParameter.TypeArgument">
            <summary>
            Gets or sets the concrete type specified for the represented type parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.GenericTypeParameter.IsRequired">
            <summary>
            Gets a value indicating if the property is required.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.GenericTypeParameter.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.GenericTypeParameter.PropertyType">
            <summary>
            Gets the <see cref="T:System.Type"/> of the property.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectionEditor">
            <summary>
            Editor for type name properties that opens a type browser.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value of the specified object.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain
            additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <seealso cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information
            </param>
            <returns>
            <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal"/> for this editor.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectionEditor.GetBaseTypeAttribute(System.ComponentModel.ITypeDescriptorContext)">
            <devdoc>
            Get the base type of the object to use to filter possible types.
            </devdoc>        
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditor">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditorFormUI">
            <summary>
            Provides a dialog box for editing identity
            role rule expressions.
            </summary>
            <summary>
            Provides a dialog box for editing identity
            role rule expressions.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditorFormUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditorFormUI.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditorFormUI"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditorFormUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both 
            managed and unmanaged resources; 
            false to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditorFormUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditorFormUI.Expression">
            <summary>
            Gets or sets the expression that 
            is currently being edited.
            </summary>
            <value>An expression</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox">
            <summary>
            Represents a customized <see cref="T:System.Windows.Forms.RichTextBox"/> 
            control that adds syntax highlighting for
            identity role rule expressions.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox.OnTextChanged(System.EventArgs)">
            <summary>
            Adds syntax highlighting to the current text.
            </summary>
            <param name="e">The arguments for the event.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox.InitParser">
            <devDoc>
            Initializes Parser to improve first time text input performance.
            </devDoc>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox.ParseStatus">
            <summary>
            Gets the current parse status message.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox.ExpressionIsValid">
            <summary>
            Gets whether or not the expression is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox.SelectionUnderlineStyle">
            <summary> 
            Gets or sets the underline style to apply to the current selection or insertion point. 
            </summary> 
            <value>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle"/> that represents the underline style to 
            apply to the current text selection or to text entered after the insertion point.</value> 
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox.SelectionUnderlineColor">
            <summary> 
            Gets or sets the underline color to apply to the current selection or insertion point. 
            </summary> 
            <value>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor"/> that represents the underline color to 
            apply to the current text selection or to text entered after the insertion point.</value> 
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.NativeMethods.CHARFORMAT2">
            <summary> 
            Contains information about character formatting in a rich edit control. 
            </summary> 
            <remarks><see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.NativeMethods.CHARFORMAT2"/> requires Rich Edit 2.0.</remarks> 
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.NativeMethods.PARAFORMAT2">
            <summary> 
            Contains information about paragraph formatting in a rich edit control. 
            </summary> 
            <remarks><see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.NativeMethods.PARAFORMAT2"/> requires Rich Edit 2.0.</remarks> 
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.AccessDenied">
            <summary>
              Looks up a localized string similar to Not Authorized.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.AccessGranted">
            <summary>
              Looks up a localized string similar to Authorized.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.ParseFailedCaption">
            <summary>
              Looks up a localized string similar to Expression is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.ParseFailedMessage">
            <summary>
              Looks up a localized string similar to Expression is invalid. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.ParseSucceededMessageBox">
            <summary>
              Looks up a localized string similar to Expression is valid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.ParseSucceededMessageBoxCaption">
            <summary>
              Looks up a localized string similar to Expression is valid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.RuleNameRequired">
            <summary>
              Looks up a localized string similar to You must specify a name for this Rule..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.UnableToParseDialogCaption">
            <summary>
              Looks up a localized string similar to Unable to parse expression.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.UnableToParseDialogMessage">
            <summary>
              Looks up a localized string similar to Unable to parse expression.  Are you sure you want to exit?.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor">
            <summary> 
            Specifies the color of underline for a segment of rich text. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.None">
            <summary> 
            No specific underline color specified. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Black">
            <summary> 
            Black. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Blue">
            <summary> 
            Blue. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Cyan">
            <summary> 
            Cyan. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.LimeGreen">
            <summary> 
            LimeGreen. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Magenta">
            <summary> 
            Magenta. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Red">
            <summary> 
            Red. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Yellow">
            <summary> 
            Yellow. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.White">
            <summary> 
            White. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.DarkBlue">
            <summary> 
            DarkBlue. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.DarkCyan">
            <summary> 
            DarkCyan. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Green">
            <summary> 
            Green. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.DarkMagenta">
            <summary> 
            DarkMagenta. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Brown">
            <summary> 
            Brown. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.OliveGreen">
            <summary> 
            OliveGreen. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.DarkGray">
            <summary> 
            DarkGray. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Gray">
            <summary> 
            Gray. 
            </summary> 
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle">
            <summary> 
            Specifies the underline styles for a segment of rich text. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.None">
            <summary> 
            No underlining. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Normal">
            <summary> 
            Single-line solid underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Word">
            <summary> 
            Single-line underline broken between words. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Double">
            <summary> 
            Double-line underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Dotted">
            <summary> 
            'Dotted' pattern underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Dash">
            <summary> 
            'Dash' pattern underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.DashDot">
            <summary> 
            'Dash-dot' pattern underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.DashDotDot">
            <summary> 
            'Dash-dot-dot' pattern underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Wave">
            <summary> 
            Single-line wave style underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Thick">
            <summary> 
            Single-line solid underline with extra thickness. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Hairline">
            <summary> 
            Single-line solid underline with less thickness. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.DoubleWave">
            <summary> 
            Double-line wave style underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.HeavyWave">
            <summary> 
            Single-line wave style underline with extra thickness. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.LongDash">
            <summary> 
            'Long Dash' pattern underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.ThickDash">
            <summary> 
            'Dash' pattern underline with extra thickness. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.ThickDashDot">
            <summary> 
            'Dash-dot' pattern underline with extra thickness. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.ThickDashDotDot">
            <summary> 
            'Dash-dot-dot' pattern underline with extra thickness. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.ThickDotted">
            <summary> 
            'Dotted' pattern underline with extra thickness. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.ThickLongDash">
            <summary> 
            'Long Dash' pattern underline with extra thickness. 
            </summary> 
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditor">
            <summary>
            Editor for formatter templates.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>.
            </summary>
            <param name="context">See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>.</param>
            <returns>See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditorUI">
            <summary>
            Represents an editor for a template.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditorUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditorUI.#ctor">
            <summary>
            Initializes the components.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditorUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditorUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditorUI.UserText">
            <summary>
            The text of the template as defined by the user at designtime.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint">
            <summary>
            Represents a constraint on a <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint.#ctor(System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.TypeSelectorIncludes)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint"/> class.
            </summary>
            <param name="baseType">The base type (class or interface) from which the constrained type should derive.</param>
            <param name="configurationType">The base type from which a type specified by the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationElementTypeAttribute"/>
            bound to the constrained type should derive, or <see langword="null"/> if no such constraint is necessary.
            </param>
            <param name="typeSelectorIncludes">Additional constraints.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint.Matches(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint.GetDisplayString">
            <summary>
            Gets a representation of the constraint.
            </summary>
            <returns>A string representing the constraint.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint.BaseType">
            <summary>
            Gets the base type (class or interface) from which the constrained type should derive.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint.ConfigurationType">
            <summary>
            Gets the base type from which a type specified by the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationElementTypeAttribute"/> 
            bound to the constrained type should derive, or <see langword="null"/> if no such constraint is necessary.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint.TypeSelectorIncludes">
            <summary>
            Gets the additional constraints.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButton">
            <summary>
            Sites and opens the <see cref="T:System.Windows.Controls.ContextMenu"/> on a button when it is clicked.  This
            enables showing the context menu on left-click gestures.
            <br/>
            This is used by the design-time infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButton.OnClick">
            <summary>
            Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> routed event. 
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButton.TargetElementProperty">
            <summary>
             The target element containing the context menu to show.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButton.OnCreateAutomationPeer">
            <summary>
            Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Windows Presentation Foundation (WPF) infrastructure.
            </summary>
            <returns>
            The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementation.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButton.TargetElement">
            <summary>
             Gets or sets the target element containing the context menu to show.
            </summary>
             <remarks>
             If this is <see langword="null"/>, then <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButton"/> attempts to show its context menu.</remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButtonAutomationPeer">
            <summary>
             The automation-peer for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButton"/>. This is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButtonAutomationPeer.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButton)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButtonAutomationPeer"/>.
            </summary>
            <param name="owner">The owning <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButton"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButtonAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            An <see cref="F:System.String.Empty"/> string.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButtonAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>
            The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom"/> enumeration value.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>.
            </summary>
            <returns>
            null.
            </returns>
            <param name="patternInterface">A value from the enumeration.
                            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.DoubleClickCommand">
            <summary>
            Class that contains attacheable properties that can be used to bind an <see cref="T:System.Windows.Input.ICommand"/> implemention to a <see cref="T:System.Windows.Controls.Control"/>'s <see cref="E:System.Windows.Controls.Control.MouseDoubleClick"/> event
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.DoubleClickCommand.CommandProperty">
            <summary>
            Attacheable property that can be used to bind an <see cref="T:System.Windows.Input.ICommand"/> implemention to a <see cref="T:System.Windows.Controls.Control"/>'s <see cref="E:System.Windows.Controls.Control.MouseDoubleClick"/> event
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.DoubleClickCommand.CommandParameterProperty">
            <summary>
            Attacheable property that can be used to bind an <see cref="T:System.Windows.Input.ICommand"/> parameter value to a <see cref="T:System.Windows.Controls.Control"/>'s <see cref="E:System.Windows.Controls.Control.MouseDoubleClick"/> event
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.DoubleClickCommand.GetCommand(System.Windows.DependencyObject)">
            <summary>
            Gets the <see cref="T:System.Windows.Input.ICommand"/> implementation bound to a <see cref="T:System.Windows.Controls.Control"/>'s <see cref="E:System.Windows.Controls.Control.MouseDoubleClick"/> event.
            </summary>
            <param name="extendee">The <see cref="T:System.Windows.Controls.Control"/> to get the <see cref="T:System.Windows.Input.ICommand"/> implementation from.</param>
            <returns>If an <see cref="T:System.Windows.Input.ICommand"/> was attached to <paramref name="extendee"/> returns the attachted <see cref="T:System.Windows.Input.ICommand"/>. Otherwise <see langword="null"/>. </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.DoubleClickCommand.SetCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)">
            <summary>
            Sets an <see cref="T:System.Windows.Input.ICommand"/> implementation to a <see cref="T:System.Windows.Controls.Control"/>'s <see cref="E:System.Windows.Controls.Control.MouseDoubleClick"/> event.
            </summary>
            <param name="extendee">The <see cref="T:System.Windows.Controls.Control"/> to set the <see cref="T:System.Windows.Input.ICommand"/> implementation for.</param>
            <param name="command">The <see cref="T:System.Windows.Input.ICommand"/> implementation to set to <paramref name="extendee"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.DoubleClickCommand.GetCommandParameter(System.Windows.DependencyObject)">
            <summary>
            Gets the <see cref="T:System.Windows.Input.ICommand"/> parameter bound to a <see cref="T:System.Windows.Controls.Control"/>'s <see cref="E:System.Windows.Controls.Control.MouseDoubleClick"/> event.
            </summary>
            <param name="extendee">The <see cref="T:System.Windows.Controls.Control"/> to get the <see cref="T:System.Windows.Input.ICommand"/> implementation from.</param>
            <returns>If an <see cref="T:System.Windows.Input.ICommand"/> parameter was attached to <paramref name="extendee"/> returns the attachted parameter value. Otherwise <see langword="null"/>. </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.DoubleClickCommand.SetCommandParameter(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets an <see cref="T:System.Windows.Input.ICommand"/> parameter implementation to a <see cref="T:System.Windows.Controls.Control"/>'s <see cref="E:System.Windows.Controls.Control.MouseDoubleClick"/> event.
            </summary>
            <param name="extendee">The <see cref="T:System.Windows.Controls.Control"/> to set the <see cref="T:System.Windows.Input.ICommand"/> parameter for.</param>
            <param name="commandParameter">The <see cref="T:System.Windows.Input.ICommand"/> parameter to set to <paramref name="extendee"/>.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainer">
            <summary>
            Contains an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> providing hookup for keyboard acceleration
            and default layout and visualization.
            <br/>
            This is used by the design-time infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainer.OnApplyTemplate">
            <summary>
            Applies the control's template.
            </summary>
            <remarks>
            Locates the Title control in the template and monitors the <see cref="E:System.Windows.Controls.Control.MouseDoubleClick"/> event
            to toggle the contained <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainer.IsExpanded"/> property.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainer.OnCreateAutomationPeer">
            <summary>
            Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Windows Presentation Foundation (WPF) infrastructure.
            </summary>
            <returns>
            Returns a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainerAutomationPeer"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainer.IsExpanded">
            <summary>
             Gets or sets the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainer.IsExpandedProperty"/> value.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainer.Element">
            <summary>
             The contained <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainerAutomationPeer">
            <summary>
            This is used by the design-time infrastructure and is not intended to be used directly from your code.
            <br/>
            The automation peer for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainerAutomationPeer.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainer)">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainerAutomationPeer"/>.
            </summary>
            <param name="control">The owning <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainer"/></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainerAutomationPeer.GetClickablePointCore">
            <summary>
            Gets a <see cref="T:System.Windows.Point"/> that represents the clickable space that is on the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint"/>.
            </summary>
            <returns>
            The <see cref="T:System.Windows.Point"/> on the element that allows a click. The point values are (<see cref="F:System.Double.NaN"/>, <see cref="F:System.Double.NaN"/>) if the element is not both a <see cref="T:System.Windows.Interop.HwndSource"/> and a <see cref="T:System.Windows.PresentationSource"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainerAutomationPeer.GetAutomationIdCore">
            <summary>
            Gets the string that uniquely identifies the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId"/>.
            </summary>
            <returns>
            The automation identifier for the element associated with the <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>, or <see cref="F:System.String.Empty"/> if there isn't an automation identifier.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainerAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            An <see cref="F:System.String.Empty"/> string.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainerAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>
            The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom"/> enumeration value.
            </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SectionModelContainer">
            <summary>
            The container for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> providing.
            <br/>
            This is used by the design-time infrastructure and is not intended to be used directly from your code.
            </summary>
            <remarks>
            Handles selection and adornment of related elements within the container.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SectionModelContainer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SectionModelContainer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SectionModelContainer.OnApplyTemplate">
            <summary>
            Sets the relationship canvas and sets the PART_Content to <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Bindable"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SectionModelContainer.Dispose(System.Boolean)">
            <summary>
            Indicates the object is being disposed.
            </summary>
            <param name="disposing">Indicates <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SectionModelContainer.Dispose(System.Boolean)"/> was invoked through an explicit call to <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SectionModelContainer.Dispose"/> instead of a finalizer call.</param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SectionModelContainer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionHelper">
            <summary>
            A utility class that coordinates between an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> and 
            connections with the user-interface, such as focus and input binding.
            <br/>
            This is used by the design-time infrastructure and is not intended to be used directly from your code.    
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionHelper.#ctor(System.Windows.Controls.Control)">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionHelper"/>.
            </summary>
            <param name="control">The control to coordinate with.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionHelper.Attach(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Attaches an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> and begins monitoring for property changes.
            </summary>
            <param name="viewModel">The element to attach.</param>
            <remarks>
            When attached begins monitoring the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> event of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>
            and establishes <see cref="T:System.Windows.Input.KeyGesture"/> bindings based on the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Commands"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionHelper.Clear">
            <summary>
            Clears the attached view model and unhooks the <see cref="P:System.Windows.UIElement.InputBindings"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingContextMenu">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingContextMenu"/> tracks the currently
            selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingMenuItem"/> as the user navigates
            through the menu.
            <br/>
            This is used by the design-time infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingContextMenu.CurrentSelectionProperty">
            <summary>
             The currently selected <see cref="T:System.Windows.Controls.MenuItem"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingContextMenu.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element used to display the specified item.
            </summary>
            <returns>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingMenuItem"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingContextMenu.CurrentSelection">
            <summary>
             Gets the currently selected <see cref="T:System.Windows.Controls.MenuItem"/> from <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingContextMenu.CurrentSelectionProperty"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingMenuItem">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingMenuItem"/> tracks child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingMenuItem"/>s
            and provides notification to its parent if it becomes selected.
            <br/>
            This is used by the design-time infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingMenuItem.CurrentSelectionProperty">
            <summary>
             The currently selected <see cref="T:System.Windows.Controls.MenuItem"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingMenuItem.#ctor">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingMenuItem"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingMenuItem.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element used to display a specified item.
            </summary>
            <returns>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingMenuItem"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.SelectionNotifyingMenuItem.CurrentSelection">
            <summary>
             Gets the currently selected child <see cref="T:System.Windows.Controls.MenuItem"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator">
            <summary>
            This is used by the design-time infrastructure and is not intended to be used directly from your code.
            <br/>
            Associates a <see cref="T:System.Windows.Input.KeyGesture"/> to control the expansion or contraction of one <see cref="T:System.Windows.Controls.Grid"/> column.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.TargetColumnProperty">
            <summary>
            The target column number to control with the specified input gesture.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.GetTargetColumn(System.Windows.Controls.Grid)">
            <summary>
            Returns the target column number to expand or contract in response to <see cref="T:System.Windows.Input.KeyGesture"/>
            </summary>
            <param name="grid">The grid containing the column.</param>
            <returns>The the column number</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.SetTargetColumn(System.Windows.Controls.Grid,System.Int32)">
            <summary>
            Sets the target column number to expand or contravct in reponse to <see cref="T:System.Windows.Input.KeyGesture"/>
            </summary>
            <param name="grid">The grid containing the column.</param>
            <param name="columnIndex">The column number to address.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.DecrementKeyGestureProperty">
            <summary>
            The <see cref="T:System.Windows.Input.KeyGesture"/> used to decrement the width of the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.TargetColumnProperty"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.GetDecrementKeyGesture(System.Windows.Controls.Grid)">
            <summary>
            Retrieves the <see cref="T:System.Windows.Input.KeyGesture"/> attached property value for decrementing the column width.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.SetDecrementKeyGesture(System.Windows.Controls.Grid,System.Windows.Input.KeyGesture)">
            <summary>
            Sets the <see cref="T:System.Windows.Input.KeyGesture"/> attached property value for decrementing the column width.
            </summary>
            <param name="grid"></param>
            <param name="gesture"></param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.IncrementKeyGestureProperty">
            <summary>
            The <see cref="T:System.Windows.Input.KeyGesture"/> used to increment the width of the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.TargetColumnProperty"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.GetIncrementKeyGesture(System.Windows.Controls.Grid)">
            <summary>
            Retrieves the <see cref="T:System.Windows.Input.KeyGesture"/> attached property value for incrementing the column width.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.SetIncrementKeyGesture(System.Windows.Controls.Grid,System.Windows.Input.KeyGesture)">
            <summary>
            Sets the <see cref="T:System.Windows.Input.KeyGesture"/> attached property value for incrementing the column width.
            </summary>
            <param name="grid"></param>
            <param name="gesture"></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAcceleratorBehavior">
            <summary>
            Behavior attached to <see cref="T:System.Windows.Controls.Grid"/> to manage handling increment and decrement responses to <see cref="T:System.Windows.Input.KeyGesture"/>
            This is attached to a grid using the <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator"/> attached properties.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAcceleratorBehavior.Attach(System.Windows.Controls.Grid)">
            <summary>
            Attaches to the grid to begin conitoring <see cref="E:System.Windows.UIElement.KeyDown"/> events.
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAcceleratorBehavior.MoveGrid(System.Double)">
            <summary>
            Moves the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.TargetColumnProperty"/> by the amount specified.
            </summary>
            <remarks>
            This will decrement as long as the value is not below <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth"/>, once it is, it no longer decrements.
            </remarks>
            <param name="delta">The amount to increment (if positive) or decrement (if negative) the grid.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarAutomationPeer">
            <summary>
            AutomationPeer for Calendar Control
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarAutomationPeer.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar)">
            <summary>
            Initializes a new instance of the CalendarAutomationPeer class.
            </summary>
            <param name="owner">Owning Calendar</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern that is associated with the specified System.Windows.Automation.Peers.PatternInterface.
            </summary>
            <param name="patternInterface">A value from the System.Windows.Automation.Peers.PatternInterface enumeration.</param>
            <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarButtonAutomationPeer">
            <summary>
            AutomationPeer for CalendarButton
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarButtonAutomationPeer.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarButton)">
            <summary>
            Initializes a new instance of the CalendarButtonAutomationPeer class.
            </summary>
            <param name="owner">Owning CalendarButton</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern that is associated with the specified System.Windows.Automation.Peers.PatternInterface.
            </summary>
            <param name="patternInterface">A value from the System.Windows.Automation.Peers.PatternInterface enumeration.</param>
            <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Overrides the GetLocalizedControlTypeCore method for CalendarButtonAutomationPeer
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetHelpTextCore">
            <summary>
            Overrides the GetHelpTextCore method for CalendarButtonAutomationPeer
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetNameCore">
            <summary>
            Overrides the GetNameCore method for CalendarButtonAutomationPeer
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer">
            <summary>
            AutomationPeer for CalendarDayButton
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton)">
            <summary>
            Initializes a new instance of the CalendarDayButtonAutomationPeer class.
            </summary>
            <param name="owner">Owning CalendarDayButton</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern that is associated with the specified System.Windows.Automation.Peers.PatternInterface.
            </summary>
            <param name="patternInterface">A value from the System.Windows.Automation.Peers.PatternInterface enumeration.</param>
            <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetHelpTextCore">
            <summary>
            Overrides the GetHelpTextCore method for CalendarDayButtonAutomationPeer
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Overrides the GetLocalizedControlTypeCore method for CalendarDayButtonAutomationPeer
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetNameCore">
            <summary>
            Overrides the GetNameCore method for CalendarDayButtonAutomationPeer
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds selection item to selection.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes selection item from selection.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Selects this item.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
            <summary>
            Gets the table item's column headers.
            </summary>
            <returns>The table item's column headers</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
            <summary>
            Get's the table item's row headers.
            </summary>
            <returns>The table item's row headers</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
            <summary>
            Grid item column.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
            <summary>
            Grid item column span.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
            <summary>
            Grid item's containing grid.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
            <summary>
            Grid item row.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
            <summary>
            Grid item row span.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            True if the owning CalendarDayButton is selected.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Selection items selection container.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar">
            <summary>
            Represents a control that enables a user to select a date by using a visual calendar display. 
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.#ctor">
            <summary>
            Initializes a new instance of the Calendar class.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.CalendarButtonStyleProperty">
            <summary>
            Identifies the CalendarButtonStyle dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.CalendarDayButtonStyleProperty">
            <summary>
            Identifies the DayButtonStyle dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.CalendarItemStyleProperty">
            <summary>
            Identifies the MonthStyle dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.DisplayDateProperty">
            <summary>
            Identifies the DisplayDate dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateProperty property changed handler.
            </summary>
            <param name="d">Calendar that changed its DisplayDate.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.DisplayDateEndProperty">
            <summary>
            Identifies the DisplayDateEnd dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.OnDisplayDateEndChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateEndProperty property changed handler.
            </summary>
            <param name="d">Calendar that changed its DisplayDateEnd.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.DisplayDateStartProperty">
            <summary>
            Identifies the DisplayDateStart dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.OnDisplayDateStartChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateStartProperty property changed handler.
            </summary>
            <param name="d">Calendar that changed its DisplayDateStart.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.DisplayModeProperty">
            <summary>
            Identifies the DisplayMode dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.OnDisplayModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayModeProperty property changed handler.
            </summary>
            <param name="d">Calendar that changed its DisplayMode.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.FirstDayOfWeekProperty">
            <summary>
            Identifies the FirstDayOfWeek dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.OnFirstDayOfWeekChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FirstDayOfWeekProperty property changed handler.
            </summary>
            <param name="d">Calendar that changed its FirstDayOfWeek.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.IsTodayHighlightedProperty">
            <summary>
            Identifies the IsTodayHighlighted dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.OnIsTodayHighlightedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsTodayHighlightedProperty property changed handler.
            </summary>
            <param name="d">Calendar that changed its IsTodayHighlighted.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.SelectedDateProperty">
            <summary>
            Identifies the SelectedDate dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.OnSelectedDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedDateProperty property changed handler.
            </summary>
            <param name="d">Calendar that changed its SelectedDate.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.SelectionModeProperty">
            <summary>
            Identifies the SelectionMode dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.OnApplyTemplate">
            <summary>
            Invoked whenever application code or an internal process, 
            such as a rebuilding layout pass, calls the ApplyTemplate method.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.ToString">
            <summary>
            Provides a text representation of the selected date.
            </summary>
            <returns>A text representation of the selected date, or an empty string if SelectedDate is a null reference.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.OnCreateAutomationPeer">
            <summary>
            Creates the automation peer for this Calendar Control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.OnGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
                Called when this element gets focus.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.SelectedDatesChanged">
            <summary>
            Occurs when a date is selected.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.DisplayDateChanged">
            <summary>
            Occurs when the DisplayDate property is changed.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.DisplayModeChanged">
            <summary>
            Occurs when the DisplayMode property is changed. 
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.SelectionModeChanged">
            <summary>
            Occurs when the SelectionMode property is changed. 
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.BlackoutDates">
            <summary>
            Gets or sets the dates that are not selectable.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.CalendarButtonStyle">
            <summary>
            Gets or sets the style for displaying a CalendarButton.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.CalendarDayButtonStyle">
            <summary>
            Gets or sets the style for displaying a day.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.CalendarItemStyle">
            <summary>
            Gets or sets the style for a Month.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.DisplayDate">
            <summary>
            Gets or sets the date to display.
            </summary>
            
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.DisplayDateEnd">
            <summary>
            Gets or sets the last date to be displayed.
            </summary>
            
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.DisplayDateStart">
            <summary>
            Gets or sets the first date to be displayed.
            </summary>
            
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.DisplayMode">
            <summary>
            Gets or sets a value indicating whether the calendar is displayed in months or years.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.FirstDayOfWeek">
            <summary>
            Gets or sets the day that is considered the beginning of the week.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.IsTodayHighlighted">
            <summary>
            Gets or sets a value indicating whether the current date is highlighted.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.SelectedDate">
            <summary>
            Gets or sets the currently selected date.
            </summary>
            
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.SelectedDates">
            <summary>
            Gets the dates that are currently selected.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.SelectionMode">
            <summary>
            Gets or sets the selection mode for the calendar.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar.DatePickerDisplayDateFlag">
            <summary>
            This flag is used to determine whether DatePicker should change its 
            DisplayDate because of a SelectedDate change on its Calendar
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection">
            <summary>
            Represents a collection of DateTimeRanges.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar)">
            <summary>
            Initializes a new instance of the CalendarBlackoutDatesCollection class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast">
            <summary>
            Dates that are in the past are added to the BlackoutDates.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime)">
            <summary>
            Checks if a DateTime is in the Collection
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime,System.DateTime)">
            <summary>
            Checks if a Range is in the collection
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.ContainsAny(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange)">
            <summary>
            Returns true if any day in the given DateTime range is contained in the BlackOutDays.
            </summary>
            <param name="range">CalendarDateRange that is searched in BlackOutDays</param>
            <returns>true if at least one day in the range is included in the BlackOutDays</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.GetNonBlackoutDate(System.Nullable{System.DateTime},System.Int32)">
            <summary>
            This finds the next date that is not blacked out in a certian direction.
            </summary>
            <param name="requestedDate"></param>
            <param name="dayInterval"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.ClearItems">
            <summary>
            All the items in the collection are removed.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.InsertItem(System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange)">
            <summary>
            The item is inserted in the specified place in the collection.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.RemoveItem(System.Int32)">
            <summary>
            The item in the specified index is removed from the collection.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.SetItem(System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange)">
            <summary>
            The object in the specified index is replaced with the provided item.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.RegisterItem(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange)">
            <summary>
            Registers for change notification on date ranges
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.UnRegisterItem(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange)">
            <summary>
            Un registers for change notification on date ranges
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.Item_Changing(System.Object,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRangeChangingEventArgs)">
            <summary>
            Reject date range changes that would make the blackout dates collection invalid
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.Item_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Update the calendar view to reflect the new blackout dates
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.IsValid(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange)">
            <summary>
            Tests to see if a date range is not already selected
            </summary>
            <param name="item">date range to test</param>
            <returns>True if no selected day falls in the given date range</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.IsValid(System.DateTime,System.DateTime)">
            <summary>
            Tests to see if a date range is not already selected
            </summary>
            <param name="start">First day of date range to test</param>
            <param name="end">Last day of date range to test</param>
            <returns>True if no selected day falls between start and end</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarBlackoutDatesCollection.GetContainingDateRange(System.DateTime)">
            <summary>
            Gets the DateRange that contains the date.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarButton">
            <summary>
            Represents a button control used in Calendar Control, which reacts to the Click event.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarButton.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarButton.#ctor">
            <summary>
            Represents the CalendarButton that is used in Calendar Control.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarButton.HasSelectedDaysProperty">
            <summary>
            Dependency property field for HasSelectedDays property
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarButton.IsInactiveProperty">
            <summary>
            Dependency property field for IsInactive property
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarButton.OnApplyTemplate">
            <summary>
            Apply a template to the button.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarButton.OnCreateAutomationPeer">
            <summary>
            Creates the automation peer for the DayButton.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarButton.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the button.
            </summary>
            <param name="useTransitions">
            true to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarButton.OnVisualStatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Common PropertyChangedCallback for dependency properties that trigger visual state changes
            </summary>
            <param name="dObject"></param>
            <param name="e"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarButton.HasSelectedDays">
            <summary>
            True if the CalendarButton represents a date range containing the display date
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarButton.IsInactive">
            <summary>
            True if the CalendarButton represents
                a month that falls outside the current year 
                or 
                a year that falls outside the current decade
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateChangedEventArgs">
            <summary>
            Provides data for the DateSelected and DisplayDateChanged events.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateChangedEventArgs.AddedDate">
            <summary>
            Gets the date to be newly displayed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateChangedEventArgs.RemovedDate">
            <summary>
            Gets the date that was previously displayed.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange">
            <summary>
            Specifies a DateTime range class which has a start and end.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange.#ctor">
            <summary>
            Initializes a new instance of the CalendarDateRange class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the CalendarDateRange class which creates a range from a single DateTime value.
            </summary>
            <param name="day"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the CalendarDateRange class which accepts range start and end dates.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange.ContainsAny(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange)">
            <summary>
            Returns true if any day in the given DateTime range is contained in the current CalendarDateRange.
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange.CoerceEnd(System.DateTime,System.DateTime)">
            <summary>
            Coerced the end parameter to satisfy the start &lt;= end constraint
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns>If start &lt;= end the end parameter otherwise the start parameter</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange.End">
            <summary>
            Specifies the End date of the CalendarDateRange.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRange.Start">
            <summary>
            Specifies the Start date of the CalendarDateRange.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarDateRangeChangingEventArgs">
            <summary>
            Event arguments to notify clients that the range is changing and what the new range will be
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton">
            <summary>
            Represents a button control used in Calendar Control, which reacts to the Click event.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.DEFAULTCONTENT">
            <summary>
            Default content for the CalendarDayButton
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.StateToday">
            <summary>
            Identifies the Today state.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.StateRegularDay">
            <summary>
            Identifies the RegularDay state.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.GroupDay">
            <summary>
            Name of the Day state group.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.StateBlackoutDay">
            <summary>
            Identifies the BlackoutDay state.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.StateNormalDay">
            <summary>
            Identifies the NormalDay state.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.GroupBlackout">
            <summary>
            Name of the BlackoutDay state group.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.#ctor">
            <summary>
            Represents the CalendarDayButton that is used in Calendar Control.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.IsTodayProperty">
            <summary>
            Dependency property field for IsToday property
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.IsSelectedProperty">
            <summary>
            Dependency property field for IsSelected property
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.IsInactiveProperty">
            <summary>
            Dependency property field for IsActive property
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOutProperty">
            <summary>
            Dependency property field for IsBlackedOut property
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.IsHighlightedProperty">
            <summary>
            Dependency property field for IsHighlighted property
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.OnApplyTemplate">
            <summary>
            Apply a template to the button.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.OnCreateAutomationPeer">
            <summary>
            Creates the automation peer for the CalendarDayButton.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the button.
            </summary>
            <param name="useTransitions">
            true to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.OnVisualStatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Common PropertyChangedCallback for dependency properties that trigger visual state changes
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.IsToday">
            <summary>
            True if the CalendarDayButton represents today
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.IsSelected">
            <summary>
            True if the CalendarDayButton is selected
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.IsInactive">
            <summary>
            True if the CalendarDayButton represents a day that falls in the currently displayed month
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOut">
            <summary>
            True if the CalendarDayButton represents a blackout date
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarDayButton.IsHighlighted">
            <summary>
            True if the CalendarDayButton represents a highlighted date
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarItem.#ctor">
            <summary>
            Represents the month that is used in Calendar Control.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarItem.OnApplyTemplate">
            <summary>
            Invoked whenever application code or an internal process, 
            such as a rebuilding layout pass, calls the ApplyTemplate method.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarItem.GetOwnerBinding(System.String)">
            <summary>
            Gets a binding to a property on the owning calendar
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.CalendarItem.DisplayMode">
            <summary>
            Gets a value indicating whether the calendar is displayed in months, years or decades.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarMode">
            <summary>
            Specifies values for the different modes of operation of a Calendar. 
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarMode.Month">
            <summary>
            The Calendar displays a month at a time.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarMode.Year">
            <summary>
             The Calendar displays a year at a time.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarMode.Decade">
            <summary>
            The Calendar displays a decade at a time.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarModeChangedEventArgs">
            <summary>
            Provides data for the DisplayModeChanged event.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarModeChangedEventArgs.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarMode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarMode)">
            <summary>
            Initializes a new instance of the CalendarModeChangedEventArgs class.
            </summary>
            <param name="oldMode">Previous value of the property, prior to the event being raised.</param>
            <param name="newMode">Current value of the property at the time of the event.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarModeChangedEventArgs.NewMode">
            <summary>
            Gets the new mode of the Calendar.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarModeChangedEventArgs.OldMode">
            <summary>
            Gets the previous mode of the Calendar.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarSelectionChangedEventArgs">
            <summary>
            Ensures proper handling in case UIElement.RaiseEvent(e) throws InvalidCastException when 
                e is of type SelectionChangedEventArgs 
                e.RoutedEvent was registered with a handler not of type System.Windows.Controls.SelectionChangedEventHandler
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarSelectionChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.IList,System.Collections.IList)">
            <summary>
            Constructor
            </summary>
            <param name="eventId">Routed Event</param>
            <param name="removedItems">Items removed from selection</param>
            <param name="addedItems">Items added to selection</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarSelectionMode">
            <summary>
            Specifies values for the different selection modes of a Calendar. 
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarSelectionMode.SingleDate">
            <summary>
            One date can be selected at a time.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarSelectionMode.SingleRange">
            <summary>
            One range of dates can be selected at a time.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarSelectionMode.MultipleRange">
            <summary>
            Multiple dates or ranges can be selected at a time.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.CalendarSelectionMode.None">
            <summary>
            No dates can be selected.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.SelectedDatesCollection">
            <summary>
            Represents the collection of SelectedDates for the Calendar Control.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.SelectedDatesCollection.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Calendar)">
            <summary>
            Initializes a new instance of the CalendarSelectedDatesCollection class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.SelectedDatesCollection.AddRange(System.DateTime,System.DateTime)">
            <summary>
            Adds a range of dates to the Calendar SelectedDates.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.SelectedDatesCollection.ClearItems">
            <summary>
            Clears all the items of the SelectedDates.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.SelectedDatesCollection.InsertItem(System.Int32,System.DateTime)">
            <summary>
            Inserts the item in the specified position of the SelectedDates collection.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.SelectedDatesCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified position.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.SelectedDatesCollection.SetItem(System.Int32,System.DateTime)">
            <summary>
            The object in the specified index is replaced with the provided item.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.SelectedDatesCollection.AddRangeInternal(System.DateTime,System.DateTime)">
            <summary>
            Adds a range of dates to the Calendar SelectedDates.
            </summary>
            <remarks>
            Helper version of AddRange for mouse drag selection. 
            This version guarantees no exceptions will be thrown by removing blackout days from the range before adding to the collection      
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates">
            <summary>
            Names and helpers for visual states in the controls.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateCalendarButtonUnfocused">
            <summary>
            Unfocused state for Calendar Buttons
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateCalendarButtonFocused">
            <summary>
            Focused state for Calendar Buttons
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.GroupCalendarButtonFocus">
            <summary>
            CalendarButtons Focus state group
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateNormal">
            <summary>
            Normal state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateMouseOver">
            <summary>
            MouseOver state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StatePressed">
            <summary>
            Pressed state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateDisabled">
            <summary>
            Disabled state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.GroupCommon">
            <summary>
            Common state group
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateUnfocused">
            <summary>
            Unfocused state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateFocused">
            <summary>
            Focused state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.GroupFocus">
            <summary>
            Focus state group
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateSelected">
            <summary>
            Selected state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateUnselected">
            <summary>
            Unselected state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.GroupSelection">
            <summary>
            Selection state group
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateActive">
            <summary>
            Active state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateInactive">
            <summary>
            Inactive state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.GroupActive">
            <summary>
            Active state group
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateValid">
            <summary>
            Valid state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateInvalidFocused">
            <summary>
            InvalidFocused state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateInvalidUnfocused">
            <summary>
            InvalidUnfocused state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.GroupValidation">
            <summary>
            Validation state group
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateUnwatermarked">
            <summary>
            Unwatermarked state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.StateWatermarked">
            <summary>
            Watermarked state
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.GroupWatermark">
            <summary>
            Watermark state group
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStates.GoToState(System.Windows.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            true to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.DatePickerAutomationPeer">
            <summary>
            AutomationPeer for DatePicker Control
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.DatePickerAutomationPeer.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePicker)">
            <summary>
            Initializes a new instance of the AutomationPeer for DatePicker control.
            </summary>
            <param name="owner">DatePicker</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.DatePickerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern that is associated with the specified System.Windows.Automation.Peers.PatternInterface.
            </summary>
            <param name="patternInterface">A value from the System.Windows.Automation.Peers.PatternInterface enumeration.</param>
            <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.DatePickerAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.DatePickerAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Automation.Peers.DatePickerAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Overrides the GetLocalizedControlTypeCore method for DatePicker
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePickerDateValidationErrorEventArgs">
            <summary>
            Provides data for the DateValidationError event.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePickerDateValidationErrorEventArgs.#ctor(System.Exception,System.String)">
            <summary>
            Initializes a new instance of the DatePickerDateValidationErrorEventArgs class. 
            </summary>
            <param name="exception">The exception that initially triggered the DateValidationError event.</param>
            <param name="text">The text being parsed.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception">
            <summary>
            Gets the exception that initially triggered the DateValidationError event.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePickerDateValidationErrorEventArgs.Text">
            <summary>
            Gets the text being parsed when the DateValidationError event was raised.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException">
            <summary>
            Gets or sets a value that indicates whether Exception should be thrown.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePickerFormat">
            <summary>
            Specifies date formats for a DatePicker.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePickerFormat.Long">
            <summary>
            Specifies that the date should be displayed using unabbreviated days of the week and month names.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.DatePickerFormat.Short">
            <summary>
            Specifies that the date should be displayed using abbreviated days of the week and month names.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.DatePickerTextBox">
            <summary>
            DatePickerTextBox is a specialized form of TextBox which displays custom visuals when its contents are empty
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.DatePickerTextBox.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.DatePickerTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.DatePickerTextBox"/> class.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.DatePickerTextBox.WatermarkProperty">
            <summary>
            Watermark dependency property
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.DatePickerTextBox.OnApplyTemplate">
            <summary>
            Called when template is applied to the control.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.DatePickerTextBox.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the textbox.
            </summary>
            <param name="useTransitions">
            true to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.DatePickerTextBox.OnDatePickerTextBoxIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsEnabled property changes.
            </summary>
            <param name="sender">Sender object</param>
            <param name="e">Property changed args</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.DatePickerTextBox.OnWatermarkPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when watermark property is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.Primitives.DatePickerTextBox.Watermark">
            <summary>
            Watermark content
            </summary>
            <value>The watermark.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.SR">
            <summary>
                Retrieves exception strings and other localized strings.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ButtonBaseBehavior">
            <summary>
                Provides VisualStateManager behavior for ButtonBase controls.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ControlBehavior">
            <summary>
                Provides VisualStateManager base behavior for controls.
            </summary>
            <remarks>
                Provides focus states.
                Forwards the Loaded event to UpdateState.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.GetVisualStateBehavior(System.Windows.DependencyObject)">
            <summary>
                Returns the value of the VisualStateBehavior attached property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.SetVisualStateBehavior(System.Windows.DependencyObject,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior)">
            <summary>
                Sets the value of the VisualStateBehavior attached property.
                Setting the value will attach the behavior to the instance of the control.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.VisualStateBehaviorProperty">
            <summary>
                The attached DependencyProperty for VisualStateBehavior.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.Attach(System.Windows.Controls.Control)">
            <summary>
                Checks that a VisualStateBehavior isn't already attached. If not,
                then attaches to the Control using OnAttach.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.Detach(System.Windows.Controls.Control)">
            <summary>
                Checks that a VisualStateBehavior isn't already attached. If not,
                then attaches to the Control using OnAttach.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.GetIsVisualStateBehaviorAttached(System.Windows.DependencyObject)">
            <summary>
                Used to determine if a VisualStateBehavior is already attached.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.SetIsVisualStateBehaviorAttached(System.Windows.DependencyObject,System.Boolean)">
            <summary>
                Sets whether a VisualStateBehavior is already attached.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.IsVisualStateBehaviorAttachedProperty">
            <summary>
                Attached property used to flag whether a VisualStateBehavior is attached.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.RegisterBehavior(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior)">
            <summary>
                Applies the specified behavior to all instances of the target
                control type.
            </summary>
            <param name="behavior">The behavior being registered.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.OnAttach(System.Windows.Controls.Control)">
            <summary>
                Attach to the appropriate events on the instance of the
                control in order to update the state correctly.
            </summary>
            <param name="control">An instance of the control.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.OnDetach(System.Windows.Controls.Control)">
            <summary>
                Detach to the appropriate events on the instance of the
                control in order to not leak memory.
            </summary>
            <param name="control">An instance of the control.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.DetachHandler(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This handler will be fired from the Unloaded event and causes the control to detach behaviors.
            </summary>
            <param name="sender">Control</param>
            <param name="e">Unused</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.AttachHandler(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This handler will be fired from the Loaded event and causes the control to re-attach behaviors.
            </summary>
            <param name="sender">Control</param>
            <param name="e">Unused</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.UpdateState(System.Windows.Controls.Control,System.Boolean)">
            <summary>
                Called to update the control's visual state.
            </summary>
            <param name="control">The instance of the control being updated.</param>
            <param name="useTransitions">Whether to use transitions or not.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.AddValueChanged(System.Windows.DependencyProperty,System.Type,System.Object,System.EventHandler)">
            <summary>
                Attaches an event handler to be called when a property changes.
            </summary>
            <param name="dp">When this DependencyProperty changes on the instance, the handler will be called.</param>
            <param name="targetType">The target type of the property or the instance if it is an attached property.</param>
            <param name="instance">The instance of the object.</param>
            <param name="handler">The handler to call.</param>
            <returns>true if the handler was attached, false otherwise.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.VisualStateBehavior.TargetType">
            <summary>
                Specifies the Type of the Control that this behavior targets.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ControlBehavior.OnAttach(System.Windows.Controls.Control)">
            <summary>
                Attaches to property changes and events.
            </summary>
            <param name="control">An instance of the control.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ControlBehavior.OnDetach(System.Windows.Controls.Control)">
            <summary>
            Detaches property changes and events.
            </summary>
            <param name="control">The control</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ControlBehavior.UpdateState(System.Windows.Controls.Control,System.Boolean)">
            <summary>
                Called to update the control's visual state.
            </summary>
            <param name="control">The instance of the control being updated.</param>
            <param name="useTransitions">Whether to use transitions or not.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ControlBehavior.TargetType">
            <summary>
                This behavior targets Control derived Controls.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ButtonBaseBehavior.OnAttach(System.Windows.Controls.Control)">
            <summary>
                Attaches to property changes and events.
            </summary>
            <param name="control">An instance of the control.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ButtonBaseBehavior.OnDetach(System.Windows.Controls.Control)">
            <summary>
            Detaches property changes and events.
            </summary>
            <param name="control">The control</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ButtonBaseBehavior.UpdateState(System.Windows.Controls.Control,System.Boolean)">
            <summary>
                Called to update the control's visual state.
            </summary>
            <param name="control">The instance of the control being updated.</param>
            <param name="useTransitions">Whether to use transitions or not.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ButtonBaseBehavior.TargetType">
            <summary>
                This behavior targets ButtonBase derived Controls.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ListBoxItemBehavior">
            <summary>
                Provides VisualStateManager behavior for ListBoxItem controls.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ListBoxItemBehavior.OnAttach(System.Windows.Controls.Control)">
            <summary>
                Attaches to property changes and events.
            </summary>
            <param name="control">An instance of the control.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ListBoxItemBehavior.OnDetach(System.Windows.Controls.Control)">
            <summary>
                Detaches to property changes and events.
            </summary>
            <param name="control">An instance of the control.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ListBoxItemBehavior.UpdateState(System.Windows.Controls.Control,System.Boolean)">
            <summary>
                Called to update the control's visual state.
            </summary>
            <param name="control">The instance of the control being updated.</param>
            <param name="useTransitions">Whether to use transitions or not.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ListBoxItemBehavior.TargetType">
            <summary>
                This behavior targets ListBoxItem derived Controls.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ProgressBarBehavior">
            <summary>
                Provides VisualStateManager behavior for ProgressBar controls.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ProgressBarBehavior.OnAttach(System.Windows.Controls.Control)">
            <summary>
                Attaches to property changes and events.
            </summary>
            <param name="control">An instance of the control.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ProgressBarBehavior.OnDetach(System.Windows.Controls.Control)">
            <summary>
            Detaches property changes and events.
            </summary>
            <param name="control">The control</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ProgressBarBehavior.UpdateState(System.Windows.Controls.Control,System.Boolean)">
            <summary>
                Called to update the control's visual state.
            </summary>
            <param name="control">The instance of the control being updated.</param>
            <param name="useTransitions">Whether to use transitions or not.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ProgressBarBehavior.TargetType">
            <summary>
                This behavior targets ProgressBar derived Controls.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.TextBoxBaseBehavior">
            <summary>
                Provides VisualStateManager behavior for TextBox controls.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.TextBoxBaseBehavior.OnAttach(System.Windows.Controls.Control)">
            <summary>
                Attaches to property changes and events.
            </summary>
            <param name="control">An instance of the control.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.TextBoxBaseBehavior.OnDetach(System.Windows.Controls.Control)">
            <summary>
            Detaches property changes and events.
            </summary>
            <param name="control">The control</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.TextBoxBaseBehavior.UpdateState(System.Windows.Controls.Control,System.Boolean)">
            <summary>
                Called to update the control's visual state.
            </summary>
            <param name="control">The instance of the control being updated.</param>
            <param name="useTransitions">Whether to use transitions or not.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.TextBoxBaseBehavior.TargetType">
            <summary>
                This behavior targets TextBoxBase derived Controls.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ToggleButtonBehavior">
            <summary>
                Provides VisualStateManager behavior for ToggleButton controls.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ToggleButtonBehavior.OnAttach(System.Windows.Controls.Control)">
            <summary>
                Attaches to property changes and events.
            </summary>
            <param name="control">An instance of the control.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ToggleButtonBehavior.OnDetach(System.Windows.Controls.Control)">
            <summary>
            Detaches property changes and events.
            </summary>
            <param name="control">The control</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ToggleButtonBehavior.UpdateState(System.Windows.Controls.Control,System.Boolean)">
            <summary>
                Called to update the control's visual state.
            </summary>
            <param name="control">The instance of the control being updated.</param>
            <param name="useTransitions">Whether to use transitions or not.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.ToggleButtonBehavior.TargetType">
            <summary>
                This behavior targets ToggleButton derived Controls.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.TypeHandlerFactory`1.GetImplementingType(System.Type,System.Type)">
            <summary>
            Given a base type, which may be an interface, and a target type, this returns the most-base type (not an interface)
            of type that implements or is equal to the base type.
            </summary>
            <param name="baseType"></param>
            <param name="targetType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.TypeHandlerFactory`1.IsGenericTypeDefinitionOf(System.Type,System.Type)">
            <summary>
            True if the target type is assignable from a generic base class which matches
            the definition
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.TypeHandlerFactory`1.GetDefaultHandler(System.Type)">
            <summary>
            Return the default handler if any for the given type.
            </summary>
            <param name="type">Type for handler</param>
            <returns>Default handler if any</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.Windows.Controls.TypeHandlerFactory`1.GetBaseType(`0)">
            <summary>
            Return the base type for the given handler.
            </summary>
            <param name="handler">Handler</param>
            <returns>Base type</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.TemplateVisualStateAttribute">
            <summary>
                Define an expected VisualState in the contract between a Control and its
                ControlTemplate for use with the VisualStateManager.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.TemplateVisualStateAttribute.Name">
            <summary>
                Name of the VisualState.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.TemplateVisualStateAttribute.GroupName">
            <summary>
                Name of the VisualStateGroup containing this state.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualState">
            <summary>
                A visual state that can be transitioned into.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualState.Name">
            <summary>
                The name of the VisualState.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualState.Storyboard">
            <summary>
                Storyboard defining the values of properties in this visual state.
            </summary>        
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateChangedEventArgs">
            <summary>
                EventArgs for VisualStateGroup.CurrentStateChanging and CurrentStateChanged events.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateChangedEventArgs.OldState">
            <summary>
                The old state the control is transitioning from
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateChangedEventArgs.NewState">
            <summary>
                The new state the control is transitioning to
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateChangedEventArgs.Control">
            <summary>
                The control involved in the state change
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateGroup">
            <summary>
                A group of mutually exclusive visual states.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateGroup.Name">
            <summary>
                The Name of the VisualStateGroup.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateGroup.States">
            <summary>
                VisualStates in the group.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateGroup.Transitions">
            <summary>
                Transitions between VisualStates in the group.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateGroup.CurrentState">
            <summary>
                VisualState that is currently applied.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateGroup.CurrentStateChanged">
            <summary>
                Raised when transition begins
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateGroup.CurrentStateChanging">
            <summary>
                Raised when transition ends and new state storyboard begins.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateManager">
            <summary>
                Manages visual states and their transitions on a control.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateManager.GoToState(System.Windows.Controls.Control,System.String,System.Boolean)">
            <summary>
                Transitions a control's state.
            </summary>
            <param name="control">The control who's state is changing.</param>
            <param name="stateName">The new state that the control is in.</param>
            <param name="useTransitions">Whether to use transition animations.</param>
            <returns>true if the state changed successfully, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateManager.GoToStateCore(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateGroup,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualState,System.Boolean)">
            <summary>
                Allows subclasses to override the GoToState logic.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateManager.ShouldRunStateStoryboard(System.Windows.FrameworkElement,System.Windows.FrameworkElement,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualState,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateGroup)">
            <summary>
              If the stateGroupsRoot or control is removed from the tree, then the new
              storyboards will not be able to resolve target names. Thus,
              if the stateGroupsRoot or control is not in the tree, don't start the new
              storyboards.
            </summary> 
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateManager.GetTransition(System.Windows.FrameworkElement,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateGroup,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualState,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualState)">
            <summary>
            Get the most appropriate transition between two states.
            </summary>
            <param name="element">Element being transitioned.</param>
            <param name="group">Group being transitioned.</param>
            <param name="from">VisualState being transitioned from.</param>
            <param name="to">VisualState being transitioned to.</param>
            <returns>
            The most appropriate transition between the desired states.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualStateManager.GetTemplateRoot(System.Windows.Controls.Control)">
            <summary>
                Returns the root element of an expanded template for a given control.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualTransition">
            <summary>
            Defines a transition between VisualStates.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualTransition.From">
            <summary>
            Name of the state to transition from.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualTransition.To">
            <summary>
            Name of the state to transition to.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualTransition.Storyboard">
            <summary>
            Storyboard providing fine grained control of the transition.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.Toolkit.VisualTransition.GeneratedDuration">
            <summary>
            Duration of the transition.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.VisualTreeWalker">
            <summary>
            Utility class for walking the visual tree and locating visual elements relative to a reference visual element.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.BooleanInverseConverter">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.BooleanInverseConverter"/> inverts the boolean result of a value.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.BooleanInverseConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Boolean"/> to its inverse value.
            </summary>
            <returns>
            The inverted <see cref="T:System.Boolean"/> value.
            </returns>
            <param name="value">The value produced by the binding source.
                            </param><param name="targetType">The type of the binding target property.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.BooleanInverseConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value (not implemented by this class).
            </summary>
            <returns>
            Always returns null, regardless of input.
            </returns>
            <param name="value">The value that is produced by the binding target.
                            </param><param name="targetType">The type to convert to.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.BooleanToHiddenConverter">
            <summary>
            Converts a <see langword="bool"/> to a <see cref="T:System.Windows.Visibility"/> value, usually
            in a binding expression.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.BooleanToHiddenConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see langword="bool"/> to a <see cref="T:System.Windows.Visibility"/> enumeration value.
            </summary>
            <returns>
            A converted value. If the input <paramref name="value"/> is true, then returns <see cref="F:System.Windows.Visibility.Visible"/>.
            Otherwise, <see cref="F:System.Windows.Visibility.Hidden"/> is returned.
            </returns>
            <param name="value">The value produced by the binding source.
                            </param><param name="targetType">The type of the binding target property.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.BooleanToHiddenConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Windows.Visibility"/> value to a <see langword="bool"/>
            </summary>
            <returns>
            Returns <see langword="true"/> if <paramref name="value"/> is <see cref="F:System.Windows.Visibility.Visible"/>.
            Otherwise, <see langword="false"/> is returned.
            </returns>
            <param name="value">The value that is produced by the binding target.
                            </param><param name="targetType">The type to convert to.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.EnumerableToBooleanConverter">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.EnumerableToBooleanConverter"/> converts an <see cref="T:System.Collections.IEnumerable"/> to <see langword="bool"/> based on
            the presence of enumerable items. 
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.EnumerableToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Collections.IEnumerable"/> to a <see cref="T:System.Boolean"/> based on the presence of enumerable items.
            </summary>
            <returns>
            Returns <see langword="true"/> if there is at least one item in the <see cref="T:System.Collections.IEnumerable"/>, <see langword="false"/> otherwise.
            </returns>
            <param name="value">The value produced by the binding source.
                            </param><param name="targetType">The type of the binding target property.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.EnumerableToBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value (not implemented).
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.
                            </param><param name="targetType">The type to convert to.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.EnumerableToVisibilityConverter">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.EnumerableToVisibilityConverter"/> converts an <see cref="T:System.Collections.IEnumerable"/> to a <see cref="T:System.Windows.Visibility"/> setting.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.EnumerableToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Collections.IEnumerable"/> to a <see cref="T:System.Windows.Visibility"/> setting.
            </summary>
            <returns>
            Returns <see cref="F:System.Windows.Visibility.Visible"/> if there are any items in the <see cref="T:System.Collections.IEnumerable"/>,
            otherwise returns <see cref="F:System.Windows.Visibility.Collapsed"/>.
            </returns>
            <param name="value">The value produced by the binding source.
                            </param><param name="targetType">The type of the binding target property.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.EnumerableToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented.
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.
                            </param><param name="targetType">The type to convert to.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.ErrorsToStringConverter">
            <summary>
            Converts an <see cref="T:System.Collections.Generic.IEnumerable`1"/> to a string.
            </summary>
            <seealso cref="T:System.Windows.Controls.ValidationError"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.ErrorsToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the <see cref="T:System.Windows.Controls.ValidationError"/> enumerable to a string.
            </summary>
            <param name="value">The value of <see cref="T:System.Collections.Generic.IEnumerable`1"/></param>
            <param name="targetType">The target type to convert to.</param>
            <param name="parameter">Any conversion parameters, not used.</param>
            <param name="culture">Culture info.</param>
            <returns>A <see cref="T:System.String"/> of the errors joined by <see cref="P:System.Environment.NewLine"/></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.ErrorsToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.InverseBooleanToCollapsedConverter">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.InverseBooleanToCollapsedConverter"/> converts a <see cref="T:System.Boolean"/> to <see cref="F:System.Windows.Visibility.Visible"/>
            if a value is <see langword="false"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.InverseBooleanToCollapsedConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Boolean"/> value to a <see cref="T:System.Windows.Visibility"/> value.
            </summary>
            <returns>
            Returns <see cref="F:System.Windows.Visibility.Visible"/> if <paramref name="value"/> is <see langword="false"/>.
            Otherwise, returns <see cref="F:System.Windows.Visibility.Collapsed"/>
            </returns>
            <param name="value">The value produced by the binding source.
                            </param><param name="targetType">The type of the binding target property.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.InverseBooleanToCollapsedConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented.
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.
                            </param><param name="targetType">The type to convert to.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.IsWarningToTextConverter">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.IsWarningToTextConverter"/> converts a <see cref="T:System.Boolean"/> to a warning or error display string.
            </summary>
            <remarks>
            This converter is used in the display of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/> to display an appropriate
            string indicating a validation error or warning.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.IsWarningToTextConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Boolean"/> to a warning or error display string.
            </summary>
            <returns>
            Returns a Warning display string if <paramref name="value"/> is <see langword="true"/>.
            Otherwise, returns an Error display string.
            </returns>
            <param name="value">The value produced by the binding source.
                            </param><param name="targetType">The type of the binding target property.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.IsWarningToTextConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented.
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.
                            </param><param name="targetType">The type to convert to.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.NullOrEmptyToBooleanConverter">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.NullOrEmptyToBooleanConverter"/> converts nullor empty values to boolean values.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.NullOrEmptyToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts any <see cref="T:System.Object"/> to a boolean.
            </summary>
            <returns>
            Returns <see langword="true"/> if <paramref name="value"/> is neither <see langword="null"/> nor <see cref="M:System.String.IsNullOrEmpty(System.String)"/>.
            </returns>
            <param name="value">The value produced by the binding source.
                            </param><param name="targetType">The type of the binding target property.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.NullOrEmptyToBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            This is not implemented.
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.
                            </param><param name="targetType">The type to convert to.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.NullToBooleanConverter">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.NullToBooleanConverter"/> converts a value that is possibly <see langword="null"/> to a <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.NullToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value that is possibly <see langword="null"/> to a <see cref="T:System.Boolean"/>.
            </summary>
            <returns>
            Returns <see langword="true"/> if <paramref name="value"/> is <see langword="null"/>.
            Otherwise, returns <see langword="false"/>.
            </returns>
            <param name="value">The value produced by the binding source.
                            </param><param name="targetType">The type of the binding target property.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.NullToBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back by always returning <see langword="null"/>.
            </summary>
            <returns>
            Returns <see langword="null"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.
                            </param><param name="targetType">The type to convert to.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.NullToHiddenConverter">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.NullToHiddenConverter"/> converts a possibly <see langword="null"/> <see cref="T:System.Object"/> to a <see cref="T:System.Windows.Visibility"/> value.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.NullToHiddenConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Object"/> to a <see cref="T:System.Windows.Visibility"/> value.
            </summary>
            <returns>
            Returns <see cref="F:System.Windows.Visibility.Visible"/> if <paramref name="value"/> is not null.
            Otherwise, returns <see cref="F:System.Windows.Visibility.Hidden"/>.
            </returns>
            <param name="value">The value produced by the binding source.
                            </param><param name="targetType">The type of the binding target property.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.NullToHiddenConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented.
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.
                            </param><param name="targetType">The type to convert to.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.PropertiesToVisibilityConverter">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.PropertiesToVisibilityConverter"/> converts an <see cref="T:System.Collections.Generic.IEnumerable`1"/> to a <see cref="T:System.Windows.Visibility"/> value.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.PropertiesToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an <see cref="T:System.Collections.Generic.IEnumerable`1"/> to a <see cref="T:System.Windows.Visibility"/> value.
            </summary>
            <returns>
            Returns <see cref="F:System.Windows.Visibility.Visible"/> if <paramref name="value"/> is an <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            that has at least one <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty"/> with <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Hidden"/> that is <see langword="false"/>.
            Otherwise, returns <see cref="F:System.Windows.Visibility.Collapsed"/>.
            </returns>
            <param name="value">The value produced by the binding source.
                            </param><param name="targetType">The type of the binding target property.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.PropertiesToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented, always returns <see langword="null"/>.
            </summary>
            <returns>
            Returns <see langword="null"/>
            </returns>
            <param name="value">The value that is produced by the binding target.
                            </param><param name="targetType">The type to convert to.
                            </param><param name="parameter">The converter parameter to use.
                            </param><param name="culture">The culture to use in the converter.
                            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationElementType">
            <summary>
            A wrapper class for <see cref="T:System.Type"/> to allow for dependency injection.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationElementType.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationElementType"/>.
            </summary>
            <param name="elementType">The <see cref="T:System.Type"/> that should be injected.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationElementType.ElementType">
            <summary>
            Gets the <see cref="T:System.Type"/> instance that was injected.
            </summary>
            <value>
            The <see cref="T:System.Type"/> instance that was injected.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.FilteredSafeExtensions">
            <summary>
            Provides extensions for selecting and filtering from <see cref="T:System.Collections.Generic.IEnumerable`1"/> while
            catching a fixed set of exception and logs those exceptions using <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter"/>.
            </summary>
            <remarks>
            This monitors for a fixed set of exceptions and logs those exceptions using <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LogWarning(System.String)"/>.
            
            The set of exceptions currently monitore are:
            <list>
            <item><see cref="T:System.IO.FileLoadException"/></item>
            <item><see cref="T:System.IO.FileNotFoundException"/></item>
            <item><see cref="T:System.TypeLoadException"/></item>
            <item><see cref="T:System.Reflection.ReflectionTypeLoadException"/></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.FilteredSafeExtensions.FilterSelectSafe``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Safely selects items from <see cref="T:System.Collections.Generic.IEnumerable`1"/> and runs exceptions through the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.FilteredSafeExtensions.FilterException(System.Exception)"/>.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.FilteredSafeExtensions.FilterSelectManySafe``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Safely selects many items from <see cref="T:System.Collections.Generic.IEnumerable`1"/> and runs exceptions through the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.FilteredSafeExtensions.FilterException(System.Exception)"/>
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.FilteredSafeExtensions.FilterException(System.Exception)">
            <summary>
            Filters an exception by comparing it to an internal type list.  If the exception type matches one in the list, it logs a warning.
            Exceptions not matching the list are rethrown.
            </summary>
            <param name="ex"></param>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LogWarning(System.String)"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ConfigurationResources">
            <summary>
            Provides depenency properties to merge dictionaries into <see cref="T:System.Windows.FrameworkElement"/> from
            the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources"/> dictionary.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ConfigurationResources.MergedDictionariesProperty">
            <summary>
             Manages a semi-colon separated list of merged dictionaries to merge into a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ConfigurationResources.GetMergedDictionaries(System.Windows.FrameworkElement)">
            <summary>
            Retrieves the semi-colon separated list of resource keys that are
            merged into the <paramref name="targetObject"/>.  Each entry separated
            by a semi-colon maps to an entry in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources"/>
            dictionary.
            </summary>
            <param name="targetObject"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ConfigurationResources.SetMergedDictionaries(System.Windows.FrameworkElement,System.String)">
            <summary>
             Sets the semi-colon separated list of resource keys used to 
             locate <see cref="T:System.Windows.ResourceDictionary"/> items from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources"/>
             to merge into the <paramref name="targetObject"/>s resources.
            </summary>
            <param name="targetObject"></param>
            <param name="dictionaryNames"></param>
            <example>
            <![CDATA[
             FrameworkElement frameworkElement = new FrameworkElement();
             ConfigurationResources.SetMergedDictionaries(frameworkElement,"DictionaryKeyOne;DictionaryKeyTwo");
             ]]>
            </example>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ComponentModelElement">
            <summary>
            <see cref="T:System.ComponentModel.IComponent"/> implemention for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> classes.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ComponentModelElement.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.IServiceProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ComponentModelElement"/>.
            </summary>
            <param name="elementViewModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> that will be represented by this <see cref="T:System.ComponentModel.IComponent"/>.</param>
            <param name="serviceProvider">A <see cref="T:System.IServiceProvider"/> instance that will be used to obtain services.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ComponentModelElement.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ComponentModelElement"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ComponentModelElement.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ComponentModelElement"/>.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ComponentModelElement.Disposed">
            <summary>
            Occurs when the <see cref="T:System.ComponentModel.IComponent"/> is disposed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ComponentModelElement.Site">
            <summary>
            Gets the <see cref="T:System.ComponentModel.ISite"/> of the Component.
            </summary>
            <remarks>
            This <see cref="T:System.ComponentModel.IComponent"/> implementation does not allow the site to be set.
            </remarks>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ComponentModelElement.PropertyChanged">
            <summary>
            Occurs when a property value changed.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Console.Hosting.ConfigurationEditorUI">
            <summary>
            Interaction logic for ConfigurationEditor.xaml
            </summary>
            <summary>
            ConfigurationEditorUI
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Console.Hosting.ConfigurationEditorUI.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Console.Hosting.ConfigurationEditorUI"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Console.Hosting.ConfigurationEditorUI.UpdateSize(System.Double,System.Double)">
            <summary>
            Updates the sice of this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Console.Hosting.ConfigurationEditorUI"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Console.Hosting.ConfigurationEditorUI.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.FrameworkElementUITypeEditor">
            <summary>
            <see cref="T:System.Drawing.Design.UITypeEditor"/> implementation that allows to edit an component's value using a <see cref="T:System.Windows.FrameworkElement"/>.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.FrameworkElementUITypeEditor.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.FrameworkEditorBindableProperty)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.FrameworkElementUITypeEditor"/>.
            </summary>
            <param name="property">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instance that should be edited.</param>
            <param name="bindableProperty">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.FrameworkEditorBindableProperty"/> instance that contains the UI interaction logic for <paramref name="property"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.FrameworkElementUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.FrameworkElementUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/>  method.
            </summary>
            <returns>Always returns <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.DropDown"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.FrameworkElementUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Displays the editor, a <see cref="T:System.Windows.FrameworkElement"/>, and returns the value provided by the user.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> instance that can be used to gain additional context information on the property being edited.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The value to edit.</param>
            <returns>The value provided by the user.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.FrameworkElementUITypeEditor.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.FrameworkElementUITypeEditor"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.FrameworkElementUITypeEditor.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.FrameworkElementUITypeEditor"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.FrameworkElementUITypeEditor.IsDropDownResizable">
            <summary>
            Gets a value indicating whether drop-down editors should be resizable by the user.
            </summary>
            <value>
            Always returns <see langword="true"/>.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.SafeEnumerableExtensions">
            <summary>
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> extensions to skip over exceptions produced by enumerables and,
            optionally, provide an <see cref="T:System.Action"/> delegate for handling those exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.SafeEnumerableExtensions.WithNoExceptions``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Filters out exceptions produced by <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <returns>An enumerable that filters exceptions from <paramref name="source"/></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.SafeEnumerableExtensions.WithNoExceptions``1(System.Collections.Generic.IEnumerable{``0},System.Action{System.Exception})">
            <summary>
            Filters out exceptions produced by <see cref="T:System.Collections.Generic.IEnumerable`1"/> and calls back to an <see cref="T:System.Action`1"/> 
            for handling errors.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="exceptionAction"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.SafeEnumerableExtensions.SelectSafe``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Filters out exceptions occurring from <paramref name="selector"/> during selection.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.SafeEnumerableExtensions.SelectSafe``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Action{System.Exception})">
            <summary>
            Filters out exceptions occurring from <paramref name="selector"/> during selection and calls back to an <see cref="T:System.Action`1"/>
            when an error is encountered.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <param name="exceptionAction"></param>
            <returns></returns>
            <seealso cref="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.SafeEnumerableExtensions.SelectManySafe``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Filters out exceptions occurring from <paramref name="selector"/> during SelectMany.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
            <seealso cref="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.SafeEnumerableExtensions.SelectManySafe``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Action{System.Exception})">
            <summary>
            Filters out exceptions occurring from <paramref name="selector"/> during SelectMany.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <param name="exceptionAction"></param>
            <returns></returns>
            <seealso cref="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources">
            <summary>
            Provides access to the global <see cref="T:System.Windows.ResourceDictionary"/> items in the configuration tool.
            This is used in combination with the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ConfigurationResources.MergedDictionariesProperty"/> to
            manage merging of resource dictionaries, particarly in a hosted environment like Visual Studio,
            where you cannot rely on a global <see cref="T:System.Windows.Application"/> object to be available.
            <br/>
            This global class also maintains an ExtendedDictionary for extension components to place their <see cref="T:System.Windows.ResourceDictionary"/>s.
            New wizards, for example, may need to add their extended items.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources.Get(System.String)">
            <summary>
             Retrieves a <see cref="T:System.Windows.ResourceDictionary"/> by the dictionary key specified.
            </summary>
            <param name="dictionaryKey"></param>
            <returns></returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Thrown if the item cannot be found.</exception>
            <remarks>
             If the item cannot be located by the key, it will attempt to
             locate a xaml file from the Resources of this assembly with the same
             name as the key.
             </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources.Add(System.String,System.Uri)">
            <summary>
             Adds a resource dictionary based on a relative Uri.
            </summary>
            <param name="resourceDictionaryKey">The key entry for the dictionary.</param>
            <param name="relativeUri">The <see cref="F:System.UriKind.Relative"/> <see cref="T:System.Uri"/> specifying the resource dictionary.</param>
             <exception cref="T:System.ArgumentException">If an item with the key name already exists.</exception>
            <remarks>
            The Uri will attempt to be loaded via <see cref="M:System.Windows.Application.LoadComponent(System.Uri)"/>
             <br/>
             You cannot add a resource with the name of ExtendedDictionary as there is always one maintained by this class that is
             intended to support extensibility scenarios.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources.Add(System.String,System.String)">
            <summary>
             Adds a resource dictionary based on a relative Uri.
            </summary>
            <param name="resourceDictionaryKey">The key entry for the dictionary.</param>
            <param name="relativeResourceUri">A string Uri referencing the resource to add. This string will be converted to a <see cref="F:System.UriKind.Relative"/> <see cref="T:System.Uri"/>.</param>
            <remarks>
            The Uri will attempt to be loaded via <see cref="M:System.Windows.Application.LoadComponent(System.Uri)"/>
             <br/>
             You cannot add a resource with the name of ExtendedDictionary as there is always one maintained by this class that is
             intended to support extensibility scenarios.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources.Add(System.String,System.String,System.Boolean)">
            <summary>
             Adds a resource dictionary based on a relative Uri.
            </summary>
            <param name="resourceDictionaryKey">The key entry for the dictionary.</param>
            <param name="relativeResourceUri">A string Uri referencing the resource to add. This string will be converted to a <see cref="F:System.UriKind.Relative"/> <see cref="T:System.Uri"/>.</param>
            <param name="keepAlive">True to maintain the created dictionary with a strong reference instead of a weak reference.</param>
            <remarks>
            The Uri will attempt to be loaded via <see cref="M:System.Windows.Application.LoadComponent(System.Uri)"/>
             <br/>
             You cannot add a resource with the name of ExtendedDictionary as there is always one maintained by this class that is
             intended to support extensibility scenarios.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources.Add(System.String,System.Uri,System.Boolean)">
            <summary>
             Adds a resource dictionary based on a relative Uri.
            </summary>
            <param name="resourceDictionaryKey">The key entry for the dictionary.</param>
            <param name="resourceUri">A Uri referencing the resource to add. This must be a <see cref="F:System.UriKind.Relative"/> <see cref="T:System.Uri"/>.</param>
            <param name="keepAlive">True to maintain the created dictionary with a strong reference instead of a weak reference.</param>
            <remarks>
            The Uri will attempt to be loaded via <see cref="M:System.Windows.Application.LoadComponent(System.Uri)"/>
             <br/>
             You cannot add a resource with the name of ExtendedDictionary as there is always one maintained by this class that is
             intended to support extensibility scenarios.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources.Add(System.String,System.Windows.ResourceDictionary,System.Boolean)">
            <summary>
             Adds a resource dictionary with the specified key.
            </summary>
            <param name="resourceDictionaryKey">Key for the resource dictionary</param>
            <param name="dictionary">The <see cref="T:System.Windows.ResourceDictionary"/> to add.</param>
            <param name="keepAlive">True to maintain a strong-reference to the dictionary, false to maintain a weak-reference.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources.Remove(System.String)">
            <summary>
            Removes a resource dictionary of the specified key.
            </summary>
            <param name="resourceDictionaryKey">The key of the <see cref="T:System.Windows.ResourceDictionary"/> to remove.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources.Clear">
            <summary>
             This will clear the resource dictionary except for ExtendedDictionary item.
             This method is largely used to support testability
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources.SetDictionary(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.KeyedResourceDictionary)">
            <summary>
            This is for test-support only and is not intended to be used by
            your code.
            </summary>
            <param name="resourceDictionary"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources.AddExtendedDictionary(System.Windows.ResourceDictionary)">
            <summary>
             Adds a <see cref="T:System.Windows.ResourceDictionary"/> to the extended dictionaries.
            </summary>
            <param name="dictionary"></param>
             <remarks>
             This should be used by extensions to the configuration tool for their
             resources to get loaded into the visual tree.
             </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources.RemoveExtendedDictionary(System.Windows.ResourceDictionary)">
            <summary>
             Removes a <see cref="T:System.Windows.ResourceDictionary"/> from the extended dictionaries.
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SectionView">
            <summary>
            Defines the main surface views for sections in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            <br/>
            This is used by the design-time infrastructure and is not intended to be used directly from your code.
            </summary>
            
            <summary>
            SectionView
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SectionView.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SectionView"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SectionView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter">
            <summary>
            An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HostAdapter.ISingleHierarchyConfigurationUIHostAdapter"/> implementation which can be used to load the configuration UI inside an external tool, e.g: Visual Studio.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HostAdapter.ISingleHierarchyConfigurationUIHostAdapter"/> implementation has System.ComponentModel support, which allows the host to use common components such as the <see cref="T:System.Windows.Forms.PropertyGrid"/> to interact with its elements.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HostAdapter.HostAdapterConfiguration,System.IServiceProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter"/>.
            </summary>
            <param name="hostConfiguration">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HostAdapter.HostAdapterConfiguration"/> that contains information on which assemblies to load into the designer.</param>
            <param name="serviceProvider">An <see cref="T:System.IServiceProvider"/> used to obtain services.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.Load(System.String)">
            <summary>
            Loads a configuration file into the designer.
            </summary>
            <param name="configurationFile">The path to the configuration file that should be loaded into the designer.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.NavigateTask(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HostAdapter.Task)">
            <summary>
            Orients the editor towards a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HostAdapter.Task"/>, typically error or warning, obtained by subscribing to the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.TasksChanged"/> event.
            </summary>
            <param name="task">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HostAdapter.Task"/> that should be oriented to.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.Save(System.String)">
            <summary>
            Saves the configuration in the designer to a file.
            </summary>
            <param name="configurationFile">The path of the file the configuration should be saved to.</param>
            <see langref="true"/> if the save operation completed successfully; Otherwise <see langref="false"/>.
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.Validate">
            <summary>
            Performs validation on the elements inside the designer.
            </summary>
            <see langref="true"/> if no validation errors where found; Otherwise <see langref="false"/>.
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type <paramref name="serviceType"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ComponentModelElement"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.CloseDropDown">
            <summary>
            Displays the specified control in a drop down area below a value field of the property grid that provides this service.
            </summary>
            <remarks>
            This method is not implemented for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter"/> implementation.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.DropDownControl(System.Windows.Forms.Control)">
            <summary>
            Closes any previously opened drop down control area.
            </summary>
            <remarks>
            This method is not implemented for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter"/> implementation.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.ShowDialog(System.Windows.Forms.Form)">
            <summary>
            Shows the specified <see cref="T:System.Windows.Forms.Form"/>.
            </summary>
            <param name="dialog">The <see cref="T:System.Windows.Forms.Form"/> to display.</param>
            <returns>A <see cref="T:System.Windows.Forms.DialogResult"/> indicating the result code returned by the <see cref="T:System.Windows.Forms.Form"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.ShowWindow(System.Windows.Window)">
            <summary>
            Shows a <see cref="T:System.Windows.Window"/> to the user.
            </summary>
            <param name="window">An instance of the <see cref="T:System.Windows.Window"/> to show.</param>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.DocumentClosed">
            <summary>
            This event is not used.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.EditorControl">
            <summary>
            Gets an <see cref="T:System.Windows.Forms.UserControl"/> that can be used to display the designer.
            </summary>
            <value>
            An <see cref="T:System.Windows.Forms.UserControl"/> that can be used to display the designer.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.IsDirty">
            <summary>
            Gets a <see cref="T:System.Boolean"/> value indicating whether the designer has unsaved changes.
            </summary>
            <value>
            <see langref="true"/> if the designer has unsaved changes; Otherwise <see langref="false"/>.
            </value>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.SelectionChanged">
            <summary>
            Occurs if the selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> changed in the designer.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.StatusTextChanged">
            <summary>
            This event is not used.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.SingleHierarchyConfigurationUIHostAdapter.TasksChanged">
            <summary>
            Occurs if the list of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HostAdapter.Task"/>'s changed in the designer.
            </summary>
            <remarks>
            Tasks are typically validation errors or warnings.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter">
             <summary>
             A static log writer for the configuration tool that, currently relies underlying <see cref="T:System.Diagnostics.Trace"/>
             mechanisms for publishing.
             </summary>
             <remarks>
             Logging is off by default and may be turned in the configuration file by configuration a trace switch 
             named configurationToolLogging.
             
             <example>
             <![CDATA[
             <system.diagnostics>
               <switches>
                 <add name="configurationToolLogging" value="Warning"/>
               </switches>
             </system.diagnostics>
            ]]>
             </example>
             </remarks>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LoggingSwitch">
            <summary>
            The <see cref="T:System.Diagnostics.TraceSwitch"/> for the configuration tool.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LogException(System.Exception)">
            <summary>
            Logs an exception using <see cref="M:System.Exception.ToString"/>
            with level of <see cref="F:System.Diagnostics.TraceLevel.Error"/>
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LogException(System.String,System.Exception)">
            <summary>
            Logs an exception by combining a message and exception
            with level of <see cref="F:System.Diagnostics.TraceLevel.Error"/>
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LogError(System.String)">
            <summary>
            Logs a message with level of <see cref="F:System.Diagnostics.TraceLevel.Error"/>
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LogWarning(System.String)">
            <summary>
            Logs a message with level of <see cref="F:System.Diagnostics.TraceLevel.Warning"/>
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LogInfo(System.String)">
            <summary>
            Logs a message with level of <see cref="F:System.Diagnostics.TraceLevel.Info"/>
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.WaitDialog">
            <summary>
            Interaction logic for WaitDialog.xaml
            </summary>
            <summary>
            WaitDialog
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.WaitDialog.#ctor">
            <summary>
             Wait dialog to display during longer running operations.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.WaitDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.WaitDialog.Message">
            <summary>
             Message to display in wait dialog
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AddCachingBlockCommandDefaultCacheManagerName">
            <summary>
              Looks up a localized string similar to Cache Manager.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AddConfigurationSourcesCommandDefaultSelectedSourceName">
            <summary>
              Looks up a localized string similar to System Configuration Source.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AddDatabaseBlockCommandDefaultConnectionStringName">
            <summary>
              Looks up a localized string similar to Connection String.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AdmGenerationDialogErrorTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AdmTemplateDialogFilter">
            <summary>
              Looks up a localized string similar to ADM Files(*.adm)|*.adm.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ApplicationLoadingConfigurationFileWaitMessage">
             <summary>
               Looks up a localized string similar to Loading configuration file 
            {0}..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ApplicationNewConfiguration">
            <summary>
              Looks up a localized string similar to New Configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ApplicationTitleFormat">
            <summary>
              Looks up a localized string similar to Enterprise Library Configuration - {0} {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AssembliesFilter">
            <summary>
              Looks up a localized string similar to Assemblies (*.dll;*.exe)|*.dll;*.exe.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AssemblyLoadFailedErrorMessage">
            <summary>
              Looks up a localized string similar to Error loading assembly: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.BadImageExceptionWhenLoading">
             <summary>
               Looks up a localized string similar to Error loading assembly {0}
                
            This error is commonly caused by either a mismatch in the version of the .NET Framework between the configuration tool and the assembly being loaded or when trying to load a 32-bit only assembly in a 64-bit process. If this is your case, please try running the version of the Enterprise Library Configuration tool that matches the assembly you wish to load..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CachingSettingsDisplayName">
            <summary>
              Looks up a localized string similar to Caching Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CollectionEditorContainedElementPropertyDisplayNameFormat">
            <summary>
              Looks up a localized string similar to {0}.{1}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CommandConfigurationSourceElementDeleteOnWrongType">
            <summary>
              Looks up a localized string similar to The ConfigurationSourceElementDeleteCommand may only be used on elements that are ConfigurationSourceElement configuration type..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ConnectionStringHiddenValue">
            <summary>
              Looks up a localized string similar to &lt;Hidden&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ConnectionStringsDisplayName">
            <summary>
              Looks up a localized string similar to ConnectionStrings Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CryptographySettingsDisplayName">
            <summary>
              Looks up a localized string similar to Cryptography Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CustomAttributesPropertyDescription">
            <summary>
              Looks up a localized string similar to The configuration attributes for this custom provider..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CustomAttributesPropertyDisplayName">
            <summary>
              Looks up a localized string similar to Attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CustomDatabaseSettingsDisplayName">
            <summary>
              Looks up a localized string similar to Database Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DatabaseSettingsDoesntHaveDefaultDatabase">
            <summary>
              Looks up a localized string similar to No Default Database Instance is specified in the Database Settings..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DefaultCollectionElementCommandTitle">
            <summary>
              Looks up a localized string similar to Add {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DefaultDeleteElementTitleFormat">
            <summary>
              Looks up a localized string similar to Delete {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DefaultElementCollectionAddCommandTitleFormat">
            <summary>
              Looks up a localized string similar to _Add {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DeleteSectionConfirmationDialogMessage">
            <summary>
              Looks up a localized string similar to Are you sure you want to delete this section? .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DeleteSectionConfirmationDialogTitle">
            <summary>
              Looks up a localized string similar to Confirm Delete.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DuplicateExceptionTypeMessage">
            <summary>
              Looks up a localized string similar to The selected type &apos;{0}&apos; already exists in the collection..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DuplicateValidationTypeMessage">
            <summary>
              Looks up a localized string similar to The selected type &apos;{0}&apos; already exists in the collection..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DuplicationExceptionTypeTitle">
            <summary>
              Looks up a localized string similar to Add exception type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DuplicationValidationTypeTitle">
            <summary>
              Looks up a localized string similar to Add validation type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.EmailTraceListenerEncryptWarning">
            <summary>
              Looks up a localized string similar to Be sure to encrypt this configuration section otherwise the user name and password are stored as clear-text in the configuration file..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.EmailTraceListenerUserNameAndPasswordNotNeeded">
            <summary>
              Looks up a localized string similar to The user name and password are not needed when using this authentication mode..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.EmailTraceListenerValidationSupplyUserNameAndPassword">
            <summary>
              Looks up a localized string similar to Supply a user name and password when using UserNameAndPassword authentication..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.EnumEditorExceptionInvalidPropertyType">
            <summary>
              Looks up a localized string similar to Enum editor can only be used with enumerable properties..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.EnvironmentDeltaFileFilter">
            <summary>
              Looks up a localized string similar to Delta Configuration files (*.dconfig)|*.dconfig|All Files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorCouldNotLoadSection">
            <summary>
              Looks up a localized string similar to Error Loading Section {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorCustomAttributesDuplicateKey">
            <summary>
              Looks up a localized string similar to Duplicate custom attribute key &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorExecutingCommand">
             <summary>
               Looks up a localized string similar to An error occurred executing the command {0}.
            
            Message: {1}.
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorGeneratingAdmFile">
            <summary>
              Looks up a localized string similar to An error occurred creating the ADM template. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorGenericTypeParameterNotSet">
            <summary>
              Looks up a localized string similar to Type argument not set for parameter {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorLoadingAssembly">
            <summary>
              Looks up a localized string similar to Error loading assembly.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorLoadingConfigSourceFile">
             <summary>
               Looks up a localized string similar to An error occurred loading the configuration source:
            {0}.
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorLoadingDeltaFile">
            <summary>
              Looks up a localized string similar to An error occurred loading the delta configuration file: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorLoadingTypes">
            <summary>
              Looks up a localized string similar to Error loading types.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorNoSelectedType">
            <summary>
              Looks up a localized string similar to No type has been selected..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorOpeningEditor">
            <summary>
              Looks up a localized string similar to Error occurred when invoking the editor..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorResolvingType">
            <summary>
              Looks up a localized string similar to There was an error resolving the type: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorResolvingTypeCaption">
            <summary>
              Looks up a localized string similar to Error resolving type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorSavingConfigurationSectionsOnMainFile">
            <summary>
              Looks up a localized string similar to The application could not save the configuration information to the configuration file. Please try to save the configuration to a different file..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorSavingConfigurationSectionsOnSelectedSource">
            <summary>
              Looks up a localized string similar to The application could not save the configuration information to the selected configuration source. Please check the settings for the selected configuration source or select a different one in the Configuration Sources section..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorSavingConfigurationSourceOnMainFile">
            <summary>
              Looks up a localized string similar to The application could not save the configuration sources section to the configuration file. Please try to save the configuration to a different file..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionCannotInvokeContextMenuButton">
            <summary>
              Looks up a localized string similar to Cannot invoke as button is not enabled..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionCollectionElementEditorNeedsTemplateAttribute">
            <summary>
              Looks up a localized string similar to Property {0} has a CollectionElementEditor specified, but is missing the required CollectionEditorTemplateAttribute..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionHandlingExceptionTypesHeader">
            <summary>
              Looks up a localized string similar to Exception Types.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionHandlingHandlersHeader">
            <summary>
              Looks up a localized string similar to Handlers.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionHandlingSettingsDisplayName">
            <summary>
              Looks up a localized string similar to Exception Handling Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionReferenceScopeNotSet">
            <summary>
              Looks up a localized string similar to Reference attribute for type {0} has no scope specified..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionStringNullOrEmpty">
            <summary>
              Looks up a localized string similar to The value cannot be null or an empty string..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.FileDialogLocateCryptoKeyTitle">
            <summary>
              Looks up a localized string similar to Cryptography key..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.GenerateAdmTemplateCommandText">
            <summary>
              Looks up a localized string similar to Generate ADM Template.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.GenericTypeParameter">
            <summary>
              Looks up a localized string similar to Generic type parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.InstrumentationSettingsDisplayName">
            <summary>
              Looks up a localized string similar to Instrumentation Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.InvalidKeyValueError">
            <summary>
              Looks up a localized string similar to The key entered is not valid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.InvalidWizardTypeMessage">
            <summary>
              Looks up a localized string similar to {0} should be of or derive from WizardModel..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.LoadTypesErrorMessage">
            <summary>
              Looks up a localized string similar to Error loading types:{0}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.LoggingSettingsDisplayName">
            <summary>
              Looks up a localized string similar to Logging Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MergedDictionariesTargetTypeError">
            <summary>
              Looks up a localized string similar to The MergedDictionaryProperty can only be applied to FrameworkElement types..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MessageBoxErrorTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MessageboxMessageUnableToLocateCryptoKey">
             <summary>
               Looks up a localized string similar to The tool is unable to load the cryptography key file &apos;{0}&apos;.
            
            If your configuration has not been saved, save it now. If it has been saved and the key file still cannot be found use this dialog to locate the key file manually.
            
            Would you like to locate the key file manually?.
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MessageboxTitleUnableToLocateCryptoKey">
            <summary>
              Looks up a localized string similar to Unable to locate cryptography key..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MoveElementDownCommandTitle">
            <summary>
              Looks up a localized string similar to Move Down.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MoveElementUpCommandTitle">
            <summary>
              Looks up a localized string similar to Move Up.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.NewCollectionElementNameFormat">
            <summary>
              Looks up a localized string similar to {0} {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.NoProtectionProviderDisplayName">
            <summary>
              Looks up a localized string similar to (no protection).
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.OpenConfigurationFileDialogFilter">
            <summary>
              Looks up a localized string similar to Configuration files (*.config)|*.config|All Files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.OpenConfigurationFileDialogTitle">
            <summary>
              Looks up a localized string similar to Open Configuration File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.OracleConnectionStringsDisplayName">
            <summary>
              Looks up a localized string similar to Oracle Connection Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PolicyInjectionCallHandlersHeader">
            <summary>
              Looks up a localized string similar to Call Handlers.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PolicyInjectionMatchingRulesHeader">
            <summary>
              Looks up a localized string similar to Matching Rules.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PolicyInjectionSettingsDisplayName">
            <summary>
              Looks up a localized string similar to Policy Injection Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PromptContinueOperationDiscardChangesWarningMessage">
             <summary>
               Looks up a localized string similar to Continuing will discard changes made to the current configuration. 
            Do you want to save the existing configuration?.
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PromptContinueOperationDiscardChangesWarningTitle">
            <summary>
              Looks up a localized string similar to Enterprise Library Configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PromptOverwriteReadonlyFileMessage">
             <summary>
               Looks up a localized string similar to The file &apos;{0}&apos; cannot be saved because it is write-protected. 
            
            Do you want to remove the write-protection and overwrite the file in its current location?.
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PromptOverwriteReadonlyFiletitle">
            <summary>
              Looks up a localized string similar to Save of Read-Only Configuration File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PromptSaveOverFileThatCannotBeReadFromWarningMessage">
            <summary>
              Looks up a localized string similar to The application cannot read the file &apos;{0}&apos;. It may contain errors or invalid content. If you continue, you will overwrite this file..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PromptSaveOverFileThatCannotBeReadFromWarningTitle">
            <summary>
              Looks up a localized string similar to Save Configuration File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.RangeBoundValidatorErrorMessage">
            <summary>
              Looks up a localized string similar to UpperBound must be greater than the LowerBound..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ReferencePropertyInvalidType">
            <summary>
              Looks up a localized string similar to ElementReferenceProperty may only be created for properties of type string.  Check the property on which the ReferenceAttribute is applied..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ReferencePropertyNoReference">
            <summary>
              Looks up a localized string similar to &lt;none&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ResourceDictionaryKeyNotFound">
            <summary>
              Looks up a localized string similar to Could not find or load resource with key {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveApplicationBeforeExportingAdmRequest">
            <summary>
              Looks up a localized string similar to The application configuration has not been saved. Would you like to save the configuration before exporting?.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveApplicationCaption">
            <summary>
              Looks up a localized string similar to Save Application.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveApplicationErrorMessage">
             <summary>
               Looks up a localized string similar to An exception occurred while saving the file.  
            {0}.
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveApplicationErrorMessageTitle">
            <summary>
              Looks up a localized string similar to Save Configuration File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveConfigurationFileDialogFilter">
            <summary>
              Looks up a localized string similar to Configuration files (*.config)|*.config|All Files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveConfigurationFileDialogTitle">
            <summary>
              Looks up a localized string similar to Save Configuration File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveConfigurationInvalidError">
            <summary>
              Looks up a localized string similar to The configuration has validation errors that must be corrected before it can be saved..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SecurityAuthorizationRulesHeader">
            <summary>
              Looks up a localized string similar to Authorization Rules.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SecuritySettingsDisplayName">
            <summary>
              Looks up a localized string similar to Security Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SelectValidatedMembersCommandHelpText">
            <summary>
              Looks up a localized string similar to Allows you to quickly select a number of validation targets..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SelectValidatedMembersCommandTitle">
            <summary>
              Looks up a localized string similar to Select Members ....
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ServiceNotFound">
            <summary>
              Looks up a localized string similar to Service not found: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ToggleShowHideSectionCommand">
            <summary>
              Looks up a localized string similar to Show/Hide Application Block Elements.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ToggleShowPropertiesCommandTitle">
            <summary>
              Looks up a localized string similar to Toggle Properties.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.TypeBrowerPickTypeAssignableFrom">
            <summary>
              Looks up a localized string similar to types that derive from {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.TypeBrowserPickAnyType">
            <summary>
              Looks up a localized string similar to any type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.TypeBrowserPickTypeWithConfigurationElement">
            <summary>
              Looks up a localized string similar to  with a Configuration Element Type of {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.TypeBrowserTitleFormat">
            <summary>
              Looks up a localized string similar to Browsing for {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.UnexpectedErrorOverwritingProperties">
            <summary>
              Looks up a localized string similar to Unexpected Error occurred overriding properties.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidateCommandTitle">
            <summary>
              Looks up a localized string similar to Validate.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationDirectoryDoesNotExist">
            <summary>
              Looks up a localized string similar to The path {0} cannot be located..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationElementReferenceMissing">
            <summary>
              Looks up a localized string similar to Referenced item is not available.  Select an existing item or add a new item..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationElementReferenceMissingWithScope">
            <summary>
              Looks up a localized string similar to Referenced item is not available.  Select an existing item or add a new item to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationErrorConnectionStringRequired">
            <summary>
              Looks up a localized string similar to Connection string is a required value..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationErrorDuplicateKeyValue">
            <summary>
              Looks up a localized string similar to Duplicate key value..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationErrorEnvironmentWithDeltaFileAlreadyExists">
            <summary>
              Looks up a localized string similar to An environment with Environment Delta File &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationErrorEnvironmentWithEmptyName">
            <summary>
              Looks up a localized string similar to The Environment name is required..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationErrorEnvironmentWithEnvironmentFileAlreadyExists">
            <summary>
              Looks up a localized string similar to An environment with Environment Configuration File &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationErrorEnvironmentWithNameAlreadyExists">
            <summary>
              Looks up a localized string similar to An environment with name &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationErrorExceptionMessage">
            <summary>
              Looks up a localized string similar to An error occurred during validation: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationErrorMatchCollectionMustHaveMoreThan1Entry">
            <summary>
              Looks up a localized string similar to Match collection must have at least one match entry..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationErrorToString">
            <summary>
              Looks up a localized string similar to The property {0} is invalid for {1}. Message: {2}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationFileNotWritable">
            <summary>
              Looks up a localized string similar to The file {0} is read-only..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationFilePathNotFound">
            <summary>
              Looks up a localized string similar to Could not locate the file or part of the path for {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationLogFormatterInvalidExceptionFormatter">
            <summary>
              Looks up a localized string similar to Invalid exception formatter..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationLoggingPriorityValuesInvalid">
            <summary>
              Looks up a localized string similar to The maximum priority must be higher than the minimum priority..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationPathNotVerified">
            <summary>
              Looks up a localized string similar to The file {0} cannot be verified..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationRequiredPropertyValueMissing">
            <summary>
              Looks up a localized string similar to The field {0} is missing a required value..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationRuleSetsHeader">
            <summary>
              Looks up a localized string similar to Rule Sets.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationRulesHeader">
            <summary>
              Looks up a localized string similar to Rules.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationSettingsDisplayName">
            <summary>
              Looks up a localized string similar to Validation Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationTypeNotLocatable">
            <summary>
              Looks up a localized string similar to Unable to find type {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationValidationTargetsHeader">
            <summary>
              Looks up a localized string similar to Validation Targets.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.WarningAssemblyLoadNonFatal">
            <summary>
              Looks up a localized string similar to The configuration editor was unable to load an assembly. This may affect the configuration tasks you can perform.  The error encountered was: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.WarningSelectedSourceCannotBeUsedInCombinationWithParentSource">
            <summary>
              Looks up a localized string similar to Using both Parent Source and a Selected Source other than System Configuration Source will persist the Parent Source in the current configuration file. If the expected result is to merge configuration from within the Selected Source, open the Selected Source and add the Parent Source locally..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.WarningSelectedSourceCannotBeUsedInCombinationWithRedirects">
            <summary>
              Looks up a localized string similar to Using both Redirected Sections and a Selected Source other than System Configuration Source will persist the Redirected Sections in the current configuration file. If the expected result is to redirect from within the Selected Source, open the Selected Source and add the redirects locally..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.WarningToTextConverterError">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.WarningToTextConverterWarning">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel">
            <summary>
            ViewModel class that represents the configuration editor application.<br/>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel">
            <summary>
            Service interface used to interact with the Enterprise Library Configuration Designtime.
            </summary>
            <remarks>
            In order to get an instance of this interface, declare it as a constructor argument on the consuming component or use the <see cref="T:Microsoft.Practices.Unity.IUnityContainer"/> to obtain an instance from code.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.SetDirty">
            <summary>
            Sets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.IsDirty"/> property to <see langword="true"/>, indicating that the application has unsaved changes.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.New">
            <summary>
            Re-initializes the application with a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <remarks>
            Closes the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> and any open Configuration Environments prior to re-initializing the application.<br/>
            If the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> or any Configuration Environments contain changes it will attempt to save these changes.<br/>
            </remarks>
            <returns>
            <see langword="true"/> if Re-initializing the application completed successfully, otherwise <see langword="false"/>. 
            E.g. The user cancelled saving the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.<br/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.Save">
            <summary>
            Saves the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> and any open Configuration Environments.
            </summary>
            <returns>
            <see langword="true"/> if saving the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> completed successfully, otherwise <see langword="false"/>. 
            E.g. The user cancelled saving the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.<br/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.Save(System.String)">
            <summary>
            Saves the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> to <paramref name="configurationFilePath"/>.
            </summary>
            <param name="configurationFilePath">The path to the file to which the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> should be saved.</param>
            <returns>
            <see langword="true"/> if saving the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> completed successfully, otherwise <see langword="false"/>. 
            E.g. The user cancelled saving the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.<br/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.Load(System.String)">
            <summary>
            Loads a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> from <paramref name="configurationFilePath"/>.
            </summary>
            <param name="configurationFilePath">The path to the configuration file that should be loaded.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.EnsureCanSaveConfigurationFile(System.String)">
            <summary>
            Ensures whether a configuration file can be saved to by the application.<br/>
            </summary>
            <remarks>
            This method will prompt the user if the <paramref name="configurationFile"/> is maked as readonly or has invalid content (and therefore needs to be overwritten).<br/>
            If the file does not exist it will create an empty configuration file that can be used to save to.
            </remarks>
            <param name="configurationFile">The path to which a configuration file is intented to be saved to.</param>
            <returns><see langword="true"/> if the application can save to the target configuration file. Otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.PromptSaveChangesIfDirtyAndContinue">
            <summary>
            Prompts the user to save any unsaved changes.
            </summary>
            <returns>
            <see langword="false"/> if the user choose not to save changes or the save operation failed. Otherwise <see langword="true"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.OnSelectedElementChanged(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.SelectedElementChanged"/> event.
            </summary>
            <param name="element">The newly selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.ConfigurationFilePath">
            <summary>
            Gets the path to the currently opened <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <returns>
            The path to the currently opened <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.IsDirty">
            <summary>
            Gets whether the application model contains unsaved changes.<br/>
            </summary>
            <value>
            <see langword="true"/> if the application model contains unsaved changes. Otherwise <see langword="false"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.NewConfigurationCommand">
            <summary>
            Gets an <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to re-initialize the application with a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <value>
            An <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to re-initialize the application with a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </value>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.New"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.SaveConfigurationCommand">
            <summary>
            Gets an <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to save the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <value>
            An <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to save the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </value>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.Save"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.SaveAsConfigurationCommand">
            <summary>
            Gets an <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to save a copy of the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <value>
            An <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to save a copy of the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.OpenConfigurationCommand">
            <summary>
            Gets an <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to open a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <value>
            An <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to open a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.ExitCommand">
            <summary>
            Gets an <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to close the application.
            </summary>
            <value>
            An <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to close the application.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.OnCloseAction">
            <summary>
            Gets or sets the <see cref="T:System.Action"/> that should be performed to close the application.
            </summary>
            <value>
            The <see cref="T:System.Action"/> that should be performed to close the application.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.ValidationModel">
            <summary>
            Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.ValidationModel"/> instance for this application.
            </summary>
            <value>
            The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.ValidationModel"/> instance for this application.
            </value>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.SelectedElementChanged">
            <summary>
            Occurs when the selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> changed.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup,Microsoft.Practices.Unity.IUnityContainer,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.MenuCommandService,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ValidationModel)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel"/>.
            </summary>
            <param name="uiService">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf"/> that should be used to interact with the user.</param>
            <param name="sourceModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> that should be used to interact with the configuration schema.</param>
            <param name="lookup">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup"/> that should be used to look up <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances.</param>
            <param name="builder">The <see cref="T:Microsoft.Practices.Unity.IUnityContainer"/> instance that should be used to create view model instances with.</param>
            <param name="menuCommandService">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.MenuCommandService"/> that should be used to look up top-level <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> instances.</param>
            <param name="validationModel">The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.ValidationModel"/> that should be used to add validation errors and warnings to.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.NewEnvironment">
            <summary>
            Creates a new Configuration Environment.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.LoadEnvironment(Microsoft.Practices.EnterpriseLibrary.Configuration.EnvironmentalOverrides.Configuration.EnvironmentalOverridesSection,System.String)">
            <summary>
            Opens a Configuration Environment from a Delta Configuration File (*.dconfig).
            </summary>
            <param name="environment">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.EnvironmentalOverrides.Configuration.EnvironmentalOverridesSection"/> contained in the Delta Configuration File (*.dconfig).</param>
            <param name="environmentDeltaFile">The path to the source Delta Configuration File (*.dconfig).</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.RemoveEnvironment(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentSourceViewModel)">
            <summary>
            Removes a Configuration Environment from the application.
            </summary>
            <param name="environment">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentSourceViewModel"/> that should be removed.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.New">
            <summary>
            Re-initializes the application with a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <remarks>
            Closes the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> and any open Configuration Environments prior to re-initializing the application.<br/>
            If the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> or any Configuration Environments contain changes it will attempt to save these changes.<br/>
            </remarks>
            <returns>
            <see langword="true"/> if Re-initializing the application completed successfully, otherwise <see langword="false"/>. 
            E.g. The user cancelled saving the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.<br/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.Save">
            <summary>
            Saves the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> and any open Configuration Environments.
            </summary>
            <returns>
            <see langword="true"/> if saving the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> completed successfully, otherwise <see langword="false"/>. 
            E.g. The user cancelled saving the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.<br/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.EnsureCanSaveConfigurationFile(System.String)">
            <summary>
            Ensures whether a configuration file can be saved to by the application.<br/>
            </summary>
            <remarks>
            This method will prompt the user if the <paramref name="configurationFile"/> is maked as readonly or has invalid content (and therefore needs to be overwritten).<br/>
            If the file does not exist it will create an empty configuration file that can be used to save to.
            </remarks>
            <param name="configurationFile">The path to which a configuration file is intented to be saved to.</param>
            <returns><see langword="true"/> if the application can save to the target configuration file. Otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.OnSelectedElementChanged(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.SelectedElementChanged"/> event.
            </summary>
            <param name="element">The newly selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.SetDirty">
            <summary>
            Sets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.IsDirty"/> property to <see langword="true"/>, indicating that the application has unsaved changes.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.Load(System.String)">
            <summary>
            Loads a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> from <paramref name="configurationFilePath"/>.
            </summary>
            <param name="configurationFilePath">The path to the configuration file that should be loaded.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.Save(System.String)">
            <summary>
            Saves the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> to <paramref name="configurationFilePath"/>.
            </summary>
            <param name="configurationFilePath">The path to the file to which the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> should be saved.</param>
            <returns><see langword="true"/>if the save operation succeeded, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.PromptSaveChangesIfDirtyAndContinue">
            <summary>
            Prompts the user to save any unsaved changes.
            </summary>
            <returns>
            <see langword="false"/> if the user choose not to save changes or the save operation failed. Otherwise <see langword="true"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.OpenConfigurationSource">
            <summary>
            Opens a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> from a file the user specifies.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.SaveMainConfiguration">
            <summary>
            Saves the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <returns>
            <see langword="true"/> if saving the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> completed successfully, otherwise <see langword="false"/>. 
            E.g. The user cancelled saving the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.<br/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.SaveMainConfiguration(System.String,System.Boolean)">
            <summary>
            Saves the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> to <paramref name="fileName"/>.
            </summary>
            <param name="fileName">The file path to which the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> should be saved.</param>
            <param name="saveAs"><see langword="true"/> if a new copy of the file should be saved to <paramref name="fileName"/>.</param>
            <returns>
            <see langword="true"/> if saving the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> completed successfully, otherwise <see langword="false"/>. 
            E.g. The user cancelled saving the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.<br/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.SaveAs">
            <summary>
            Saves a copy of the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> and any loaded Configuration Environment.
            </summary>
            <returns>
            <see langword="true"/> if saving the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> completed successfully, otherwise <see langword="false"/>. 
            E.g. The user cancelled saving the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.<br/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.ApplicationTitle">
            <summary>
            Gets the application title, including an asteriks that is used as an indicator whether the application contains unsaved changed.
            </summary>
            <value>
            The application title, including an asteriks that is used as an indicator whether the application contains unsaved changed.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.CurrentConfigurationSource">
            <summary>
            Gets the currently opened <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <value>
            The currently opened <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.WizardCommands">
            <summary>
            Gets the available <see cref="T:System.Windows.Input.ICommand"/> instances that should be displayed in the top-level wizard menu.
            </summary>
            <value>
            The available <see cref="T:System.Windows.Input.ICommand"/> instances that should be displayed in the top-level wizard menu.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.BlockCommands">
            <summary>
            Gets the available <see cref="T:System.Windows.Input.ICommand"/> instances that should be displayed in the top-level blocks menu.
            </summary>
            <value>
            The available <see cref="T:System.Windows.Input.ICommand"/> instances that should be displayed in the top-level blocks menu.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.OpenEnvironmentCommand">
            <summary>
            Gets an <see cref="T:System.Windows.Input.ICommand"/> instance that can be bound to and invoked to open a Configuration Environment from a Delta Configuration File (*.dconfig).
            </summary>
            <value>
            An <see cref="T:System.Windows.Input.ICommand"/> instance that can be bound to and invoked to open a Configuration Environment from a Delta Configuration File (*.dconfig).
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.NewEnvironmentCommand">
            <summary>
            Gets an <see cref="T:System.Windows.Input.ICommand"/> instance that can be bound to and invoked to create a new Configuration Environment.
            </summary>
            <value>
            An <see cref="T:System.Windows.Input.ICommand"/> instance that can be bound to and invoked to create a new Configuration Environment.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.Environments">
            <summary>
            Gets the currently loaded Configuration Environments.
            </summary>
            <value>
            The currently loaded Configuration Environments.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.IsDirty">
            <summary>
            Gets whether the application model contains unsaved changes.<br/>
            </summary>
            <value>
            <see langword="true"/> if the application model contains unsaved changes. Otherwise <see langword="false"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.ConfigurationFilePath">
            <summary>
            Gets the path to the currently opened <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <returns>
            The path to the currently opened <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </returns>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.SelectedElementChanged">
            <summary>
            Occurs when the selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> changed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.NewConfigurationCommand">
            <summary>
            Gets an <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to re-initialize the application with a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <value>
            An <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to re-initialize the application with a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </value>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.New"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.SaveConfigurationCommand">
            <summary>
            Gets an <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to save the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <value>
            An <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to save the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </value>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.Save"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.SaveAsConfigurationCommand">
            <summary>
            Gets an <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to save a copy of the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <value>
            An <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to save a copy of the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </value>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.SaveAs"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.OpenConfigurationCommand">
            <summary>
            Gets an <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to open a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <value>
            An <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to open a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </value>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.OpenConfigurationSource"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.ExitCommand">
            <summary>
            Gets an <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to close the application.
            </summary>
            <value>
            An <see cref="T:System.Windows.Input.ICommand"/> instance that can be invoked to close the application.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.OnCloseAction">
            <summary>
            Gets or sets the <see cref="T:System.Action"/> that should be performed to close the application.
            </summary>
            <value>
            The <see cref="T:System.Action"/> that should be performed to close the application.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.ValidationModel">
            <summary>
            Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.ValidationModel"/> instance for this application.
            </summary>
            <value>
            The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.ValidationModel"/> instance for this application.
            </value>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel.PropertyChanged">
            <summary>
            Occurs when a property value has changed.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.KeyedResourceDictionary">
            <summary>
            Maintains reference of <see cref="T:System.Windows.ResourceDictionary"/> items and auto-loads resources
            from well-known locations.
            </summary>
            <remarks>
            This dictionary is used in with hosted WPF applications to help maintain sets of dictionaries 
            can be added to and referenced by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources"/> static facade
            and used via Xaml by the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.ConfigurationResources.MergedDictionariesProperty"/>.
            <br/>
            This dictionary generally maintains its reference of <see cref="T:System.Windows.ResourceDictionary"/> items as
            <see cref="T:System.WeakReference"/>s by default.  But can optionally maintain strongly-held references.
            <br/>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.KeyedResourceDictionary.Add(System.String,System.Windows.ResourceDictionary,System.Boolean)">
            <summary>
             Adds a new instance of <see cref="T:System.Windows.ResourceDictionary"/> to the collection and optionally keeps it alive.
            </summary>
            <param name="key">The key to the resource dictionary.</param>
            <param name="dictionary">The <see cref="T:System.Windows.ResourceDictionary"/> item to add.</param>
            <param name="keepAlive">True to maintain a strongly-held reference to the dictionary, false to maintain a weak-reference</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.KeyedResourceDictionary.Get(System.String)">
            <summary>
             Retrieves the resource with the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Thrown if the item cannot be found in the collecation and not auto-loaded from a well-known location.</exception>
            <remarks>
            If the item cannot be found in the collection by the key provided,
            it attempts to search for the resource from the /Resources path
            of this assembly for a Xaml file with the same name as key.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.KeyedResourceDictionary.Contains(System.String)">
            <summary>
             Determines if there is an entry in the collection by the provided key name.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.KeyedResourceDictionary.Remove(System.String)">
            <summary>
             Removes the item by the name of the key specified. 
            </summary>
            <param name="key"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.KeyedResourceDictionary.Keys">
            <summary>
             Returns the set of keys in the collection.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidator">
            <summary>
            Base class for Validators that validate <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> values in the designer.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator">
            <summary>
            A baseclass for Validators used in the configuration designer.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator.ValidateCore(System.Object,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            When implemented in a derived class, validates <paramref name="value"/> as part of the <paramref name="instance"/>.
            </summary>
            <param name="instance">The instance to validate.</param>
            <param name="value">Value to validate</param>
            <param name="results">The collection to wich any results that occur during the validation can be added.</param>		
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator.Validate(System.Object,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            Validates <paramref name="value"/> as part of the <paramref name="instance"/>.
            </summary>
            <param name="instance">The instance to validate.</param>
            <param name="value">Value to validate.</param>
            <param name="results">The collection to wich any results that occur during the validation can be added.</param>		
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidator.ValidateCore(System.Object,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            Casts <paramref name="instance"/> to <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> and calls <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidator.ValidateCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})"/> to perform the actual validation.
            </summary>
            <param name="instance">The instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> to validate.</param>
            <param name="value">Value to validate</param>
            <param name="results">The collection to wich any results that occur during the validation can be added.</param>		
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidator.ValidateCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            When implemented in a derived class, validates <paramref name="value"/> as part of the Property <paramref name="property"/>.
            </summary>
            <param name="property">The Property that declares the <paramref name="value"/>.</param>
            <param name="value">Value to validate</param>
            <param name="results">The collection to wich any results that occur during the validation can be added.</param>		
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ElementReferenceValidator">
            <summary>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidator"/> class that is used to validate <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty"/> values.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ElementReferenceValidator.ValidateCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            Validates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty"/>.
            </summary>
            <remarks>
            If the <paramref name="property"/> is required and <paramref name="value"/> is empty, the method reports a validation error.<br/>
            If the value cannot be resolved, the method reports a validation warning.<br/>
            </remarks>
            <param name="property">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty"/> that should be validated.</param>
            <param name="value">The value used for validation.</param>
            <param name="results">The collection to wich any results that occur during the validation can be added.</param>		
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ElementValidationResult">
            <summary>
            Represents a validation result associated with an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult">
            <summary>
            Collects information relevant to a warning or error returned by validation.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.#ctor(System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/> calss with the invalid object, property name, and error message.
            </summary>
            <param name="errorMessage">
            The message that describes the error.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.#ctor(System.String,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/> calss with the invalid object, property name, and error message.
            </summary>
            <param name="errorMessage">
            The message that describes the error.
            </param>
            <param name="isWarning">Sets the error as a warning instead of an error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.ToString">
            <summary>
            Returns the string representation of the validation result.
            </summary>
            <returns>
            The string representation of the validation result.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.PropertyName">
            <summary>
            Gets the property name of the failed validation.
            If the validation is not related to a specific property
            this may return <see cref="F:System.String.Empty"/>
            </summary>
            <value>
            The property name of the failed validation.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.Message">
            <summary>
            Gets or sets the message for the error.
            </summary>
            <value>
            The message for the error.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.IsWarning">
            <summary>
            Returns true if the validation error is a warning.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.ElementId">
            <summary>
             The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> reference of the containing element producing the valiation error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.ElementName">
            <summary>
             The name of the element.  If the error
             is not element specific, this may return
             <see cref="F:System.String.Empty"/>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.IsError">
            <summary>
             Returns true if the element is an error.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ElementValidationResult.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.String)">
            <summary>
             Initializes a new instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/> for on a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <param name="element">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ElementValidationResult"/> is associated with.</param>
            <param name="errorMessage">A message that describes the validation result.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ElementValidationResult.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.String,System.Boolean)">
            <summary>
             Initializes a new instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/> for on a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <param name="element">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ElementValidationResult"/> is associated with.</param>
            <param name="errorMessage">A message that describes the validation result.</param>
            <param name="isWarning"><see langword="true"/> if the validation result is a warning (and shouldn't prohibit saving the configuration); Otherwise <see langword="false"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ElementValidationResult.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ElementValidationResult"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources. </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ElementValidationResult.ElementName">
            <summary>
             Gets the name of the element associated with this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/>.
            </summary>
            <remarks>
              If the result is not element specific, this may return <see cref="F:System.String.Empty"/>.
            </remarks>
            <value>
             The name of the element associated with this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ElementValidationResult.ElementId">
            <summary>
             Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ElementId"/> of the element associated with this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/>.
            </summary>
             <value>
             The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ElementId"/> of the element associated with this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/>.
             </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FilePathValidator">
            <summary>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidator"/> class that validates whether the value is an existing file.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidator">
            <summary>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidator"/> instance that validates whether the value is an existing file.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidator.ValidateCore(System.Object,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            Validates whether <paramref name="value"/> is a valid file path then calls <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidator.InnerValidateCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})"/> passing a rooted file path.
            </summary>
            <param name="instance">The instance to validate, this is expected to be a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/></param>
            <param name="value">The value that should be validated.</param>
            <param name="results">The collection to add any results that occur during the validation.</param>		
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidator.IsUnc(System.String)">
            <summary>
            Determines if the specified path is network path.
            </summary>
            <param name="path">The path to test.</param>
            <returns>Returns <see langword="true"/> if the path </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidator.InnerValidateCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            When overridden in a derived class performs validation on <paramref name="fileName"/>.
            </summary>
            <param name="instance">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instance that declares <paramref name="fileName"/> as a value.</param>
            <param name="fileName">A rooted and valid file path</param>
            <param name="errors">The collection to add any results that occur during the validation.</param>	
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidator.ApplicationModel">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel"/> that is used to obtain contextual information used for validation.
            </summary>
            <remarks>
            This is an Dependency property and will be set when this class is constructed.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidator.ContextPath">
            <summary>
            Returns the path which should be used to validate relative paths.
            </summary>
            <value>The path from the current configuration file.</value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FilePathValidator.#ctor">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FilePathValidator"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FilePathValidator.InnerValidateCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            Validates whether <paramref name="fileName"/> is an existing file.
            </summary>
            <param name="instance">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instance that declares <paramref name="fileName"/> as a value.</param>
            <param name="fileName">A rooted and valid file path.</param>
            <param name="errors">The collection to add any results that occur during the validation.</param>	
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileWritableValidator">
            <summary>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidator"/> class that validates whether the value is a file that can be written to.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileWritableValidator.InnerValidateCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            Validates whether <paramref name="fileName"/> is a file that can be written to.
            </summary>
            <param name="instance">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instance that declares <paramref name="fileName"/> as a value.</param>
            <param name="fileName">A rooted and valid file path</param>
            <param name="errors">The collection to add any results that occur during the validation.</param>	
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.NameValueCollectionValidator">
            <summary>
            A validator class that validates whether a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>'s <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Value"/> is a valid <see cref="T:System.Collections.Specialized.NameValueCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.NameValueCollectionValidator.ValidateCore(System.Object,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            Validates whether the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> <paramref name="instance"/> has a <see cref="T:System.Collections.Specialized.NameValueCollection"/> that can be serialized as a set of XML attributes.
            </summary>
            <param name="instance">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instance to validate.</param>
            <param name="value">This value is being ignored by this validator.</param>
            <param name="results">The collection to wich any results that occur during the validation can be added.</param>		
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidationResult">
            <summary>
             Validation result associated with a specific <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidationResult.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/> class with the invalid object, property name, and error message.
            </summary>
            <param name="property">
            The invalid property.
            </param>
            <param name="errorMessage">
            The message that describes the result.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidationResult.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.String,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/> class with the invalid object, property name, and error message.
            </summary>
            <param name="property">
            The invalid property.
            </param>
            <param name="errorMessage">
            The message that describes the result.
            </param>
            <param name="isWarning">Sets the result as a warning instead of an error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidationResult.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ElementValidationResult"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources. </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidationResult.PropertyName">
            <summary>
            Gets the property name of the failed validation.
            </summary>
            <value>
            The property name of the failed validation.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidationResult.ElementId">
            <summary>
             The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ElementId"/> reference of the containing element producing the valiation error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidationResult.FriendlyPath">
            <summary>
            Gets a <see cref="T:System.String"/> that helps the user locate the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> associates with this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/>.
            </summary>
            <value>
            A <see cref="T:System.String"/> that helps the user locate the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> associates with this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidationResult.ElementName">
            <summary>
             The name of the element.  If the result
             is not element specific, this may return
             <see cref="F:System.String.Empty"/>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RequiredFieldValidator">
            <summary>
             A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidator"/> class that validates whether a required value is not empty.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RequiredFieldValidator.ValidateCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            Validates whether <paramref name="value"/> is not <see langword="null"/> or an empty string.
            </summary>
            <param name="property">The Property that declares the <paramref name="value"/>.</param>
            <param name="value">Value to validate</param>
            <param name="results">The collection to wich any results that occur during the validation can be added.</param>		
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.TypeValidator">
            <summary>
             A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.PropertyValidator"/> class that validates whether a <see cref="T:System.Type"/> can be resolved from the value.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.TypeValidator.ValidateCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            Validates whether <paramref name="value"/> is can be used to resolve an instance of <see cref="T:System.Type"/>.
            </summary>
            <remarks>
            The <paramref name="value"/> is interpreted from within the designers application domain.<br/>
            Therefore results cannot be guaranteed to be accurate and warnings are reported, rather than errors.
            </remarks>
            <param name="property">The Property that declares the <paramref name="value"/>.</param>
            <param name="value">Value to validate</param>
            <param name="results">The collection to wich any results that occur during the validation can be added.</param>		
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FilePathExistsValidator">
            <summary>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidator"/> class that validates whether the value is a file in an existing directory.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FilePathExistsValidator.InnerValidateCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            Validates whether <paramref name="fileName"/> is a file in an existing directory.
            </summary>
            <param name="instance">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instance that declares <paramref name="fileName"/> as a value.</param>
            <param name="fileName">A rooted and valid file path.</param>
            <param name="errors">The collection to add any results that occur during the validation.</param>	
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/> class contains all the UI (User Interface) related information for a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.Property"/> instance.
            </summary>
            <remarks>
            <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.Property"/> instances are shown in the designer as well in Visual Studio's property grid.<br/>
            Threrefore the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/> class derives from <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </remarks>
            <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.Property"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/>.
            </summary>
            <param name="property">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> that should be displayed through a UI (User Interface).</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.propertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.CanResetValue(System.Object)">
            <summary>
            Returns whether resetting an object changes its value.
            </summary>
            <returns>
            Always returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.GetValue(System.Object)">
            <summary>
            Gets the current value of the property on a component.
            </summary>
            <returns>
            The value of a property for a given component.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.ResetValue(System.Object)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.SetValue(System.Object,System.Object)">
            <summary>
            When overridden in a derived class, sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set. </param><param name="value">The new value. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.ShouldSerializeValue(System.Object)">
            <summary>
            When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <returns>
            Always returns <see langword="false"/>.
            </returns>
            <param name="component">The component with the property to be examined for persistence. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.AddValueChanged(System.Object,System.EventHandler)">
            <summary>
            Enables other objects to be notified when this property changes.
            </summary>
            <param name="component">The component to add the handler for. </param><param name="handler">The delegate to add as a listener. </param><exception cref="T:System.ArgumentNullException"><paramref name="component"/> or <paramref name="handler"/> is null.</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.RemoveValueChanged(System.Object,System.EventHandler)">
            <summary>
            Enables other objects to be notified when this property changes.
            </summary>
            <param name="component">The component to remove the handler for. </param><param name="handler">The delegate to remove as a listener. </param><exception cref="T:System.ArgumentNullException"><paramref name="component"/> or <paramref name="handler"/> is null.</exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.DisplayName">
            <summary>
            Gets the name that can be displayed in a window, such as a Properties window.
            </summary>
            <returns>
            The name to display for the property.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.Category">
            <summary>
            Gets the name of the category to which the member belongs.
            </summary>
            <returns>
            The name of the category to which the member belongs.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.Description">
            <summary>
            Gets the description of the property.
            </summary>
            <returns>
            The description of the property.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.IsBindableValueCommitted">
            <summary>
            Gets whether the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindableValue"/> was comitted to the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <returns>
            <see langword="true"/> if the value set to <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindableValue"/> was comitted to the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>; Otheriwse <see langword="false"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindableValue">
            <summary>
            Gets or sets a textual representing the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>'s value.
            </summary>
            <remarks>
            <para>The value that is gotten or set through this property is expected to be in the client's culture.<br/></para>
            If validation errors occur when setting the value, the value will not be comitted to the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.<br/>
            Instead, the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>'s <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ValidationResults"/> can be used to display an error message.
            </remarks>
            <value>
            A textual representation of the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>'s value.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.Value">
            <summary>
            Gets the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>'s value.
            </summary>
            <returns>
            The underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>'s value.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.Property">
            <summary>
            Gets the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <returns>
            The underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.ReadOnly">
            <summary>
            Gets whether the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> is read-only.
            </summary>
            <returns>
            true if the property is read-only; otherwise, false.
            </returns>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.ComponentType">
            <summary>
            Gets the type of the component this property is bound to.
            </summary>
            <returns>
            Always returns <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.IsReadOnly">
            <summary>
            Gets whether this property is read-only.
            </summary>
            <returns>
            true if the property is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.PropertyType">
            <summary>
            Gets the type of the property.
            </summary>
            <returns>
            A <see cref="T:System.Type"/> that represents the type of the property.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.Converter">
            <summary>
            Gets a <see cref="T:System.ComponentModel.TypeConverter"/> implementation that can be used to interact with the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <returns>
            An instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter"/> that is used to display the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.SupportsChangeEvents">
            <summary>
            Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.
            </summary>
            <returns>
            Always returns <see langword="true"/>.
            </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter">
            <summary>
            A <see cref="T:System.ComponentModel.TypeConverter"/> implementation that can be used to display and interpret a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.Property"/>'s Value.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter"/>.
            </summary>
            <param name="property">The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.Property"/> instance this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter"/> is created for.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)"/> should be called to find the properties of this object; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> with the properties that are exposed for this data type, or null if there are no properties.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param><param name="value">An <see cref="T:System.Object"/> that specifies the type of array for which to get properties. </param><param name="attributes">An array of type <see cref="T:System.Attribute"/> that is used as a filter. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param><param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param><param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param><param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param><param name="value">The <see cref="T:System.Object"/> to convert. </param><exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param><param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed. </param><param name="value">The <see cref="T:System.Object"/> to convert. </param><param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to. </param><exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception><exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter"/> is associated with, using the specified context, given a set of property values for the object.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> representing the given <see cref="T:System.Collections.IDictionary"/>, or null if the object cannot be created. This method always returns null.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param><param name="propertyValues">An <see cref="T:System.Collections.IDictionary"/> of new property values. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"/> to create a new value, using the specified context.
            </summary>
            <returns>
            true if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"/> to create a new value; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or null if the data type does not support a standard set of values.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/> is an exclusive list of possible values, using the specified context.
            </summary>
            <returns>
            true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/> is an exhaustive list of possible values; false if other values are possible.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/> should be called to find a common set of values the object supports; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
            Returns whether the given value object is valid for this type and for the specified context.
            </summary>
            <returns>
            true if the specified value is valid for this object; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param><param name="value">The <see cref="T:System.Object"/> to test for validity. </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.EnvironmentAwareFrameworkEditorBindableProperty">
            <summary>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.FrameworkEditorBindableProperty"/> class specific to environmentally overridden properties.<br/>
            </summary>
            <remarks>
            <para>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instances are shown in the designer as well in Visual Studio's property grid.<br/>
            Threrefore this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty"/> class derives from <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </para>
            <para>
            In the Visual Studio Property Grid properties with a custom control will be shown as a drop down.
            </para>
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>
            <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SuggestedValues"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.FrameworkEditorBindableProperty">
            <summary>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/> class that allow's the UI (User Interface) to interact with the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> though a custom control (e.g. a date picker, rather than the default textbox).
            </summary>
            <remarks>
            <para>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instances are shown in the designer as well in Visual Studio's property grid.<br/>
            Threrefore this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty"/> class derives from <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </para>
            <para>
            In the Visual Studio Property Grid properties with a custom control will be shown as a drop down.
            </para>
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>
            <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SuggestedValues"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.FrameworkEditorBindableProperty.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.Type)">
            <summary>
            initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.FrameworkEditorBindableProperty"/>.
            </summary>
            <param name="property">The underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instance.</param>
            <param name="frameworkElementEditorType">The type of the control that should be used to edit the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>. This type must derive from <see cref="T:System.Windows.FrameworkElement"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.FrameworkEditorBindableProperty.CreateEditorInstance">
            <summary>
            Creates a new editor instance for the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <returns>a new editor instance for the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.FrameworkEditorBindableProperty.GetEditor(System.Type)">
            <summary>
            Gets an editor of the specified type.
            </summary>
            <returns>
            If the <paramref name="editorBaseType"/> is <see cref="T:System.Drawing.Design.UITypeEditor"/> a <see cref="T:System.Drawing.Design.UITypeEditor"/> implementation that wraps the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.FrameworkEditorBindableProperty.Editor"/> instance; Otherwise <see langword="null"/>.
            </returns>
            <param name="editorBaseType">The base type of editor, which is used to differentiate between multiple editors that a property supports. </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.FrameworkEditorBindableProperty.Editor">
            <summary>
            Gets a new editor instance for the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <value>
            A new editor isntance for the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.FrameworkEditorBindableProperty.CreatedEditorReferences">
            <summary>
            Gets a list of the editor instances created for the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <value>
            A list of the editor instances created for the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.EnvironmentAwareFrameworkEditorBindableProperty.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentSourceViewModel)">
            <summary>
            initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.FrameworkEditorBindableProperty"/>.
            </summary>
            <param name="property">The underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instance.</param>
            <param name="frameworkElementEditorType">The type of the control that should be used to edit the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>. This type must derive from <see cref="T:System.Windows.FrameworkElement"/>.</param>
            <param name="environment">The environment for which this the editor should be initialized.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.EnvironmentAwareFrameworkEditorBindableProperty.CreateEditorInstance">
            <summary>
            Creates a new editor instance for the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <returns>a new editor instance for the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.Cryptography.ExportKeyCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel">
            <summary>
            Represents a bindable command that can be executed from within the designer.<br/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
            Initializes an instance of CommandModel from <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute"/>.
            </summary>
            <param name="commandAttribute"></param>
            <param name="uiService"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
            Initializes an instance of CommandModel.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.InnerCanExecute(System.Object)">
            <summary>
            When implemented by a child, determines if the command can execute.
            </summary>
            <returns>
            Returns <see langword="true"/> if this command can be executed; otherwise, <see langword="false"/>.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.OnCanExecuteChanged">
            <summary>
             Invokes the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.CanExecuteChanged"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.InnerExecute(System.Object)">
            <summary>
            When implemented by a child, executes the command.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can be set to null.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.OnPropertyChanged(System.String)">
            <summary>
            Invokes the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.PropertyChanged"/> event for this class
            </summary>
            <param name="propertyName">The name of the property changing</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.Dispose(System.Boolean)">
            <summary>
            Indicates the object is being disposed.
            </summary>
            <param name="disposing">Indicates <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.Dispose(System.Boolean)"/> was invoked through an explicit call to <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.Dispose"/> instead of a finalizer call.</param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.UIService">
            <summary>
            Service for displaying messages and dialogs to the user.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.Placement">
            <summary>
             The logical placement of the command.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.Browsable">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.Title">
            <summary>
            Provides the title of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> command.  Typically this will appear as the title to a menu in the configuration tool.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.HelpText">
            <summary>
             The command's related help text.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.ChildCommands">
            <summary>
             Child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> commands to this command.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.KeyGesture">
            <summary>
            Defines the key gesture used for this command.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConnectionStringPropertyViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty">
            <summary>
             A property model from a property discovered on a <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ILogicalPropertyContainerElement">
            <summary>
            Denotes an associated from a property to its logical containing (or parent) element.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ILogicalPropertyContainerElement.ContainingElement">
            <summary>
            When implemented, returns the logical container (or parent) <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ILogicalPropertyContainerElement.ContainingElementDisplayName">
            <summary>
            When implemented, returns a display name for the logically containing element, which is used for e.g. validation results.<br/>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IEnvironmentalOverridesProperty">
            <summary>
            Interface that contains the necessary information needed to environmentally override a property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IEnvironmentalOverridesProperty.SupportsOverride">
            <summary>
            <see langword="true"/> if this property meets the requirements to be overridden.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IEnvironmentalOverridesProperty.PropertyAttributeName">
            <summary>
            The name of the attribute which is used to serialize this configuration property in XML.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IEnvironmentalOverridesProperty.ContainingElementXPath">
            <summary>
            The XPath to the XML element that declares the attribute for this configuration property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IEnvironmentalOverridesProperty.ConfigurationSectionName">
            <summary>
            The name of the configuration section that contains the property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IEnvironmentalOverridesProperty.ContainingSectionXPath">
            <summary>
            The XPath to the XML element that declares the containing configuration section.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IEnvironmentalOverridesProperty.DeltaConfigurationStorageConverter">
            <summary>
            The <see cref="T:System.ComponentModel.TypeConverter"/> that converts the internal overridden value to a string that can be stored in the delta configuration file.<br/>
            </summary>
            <remarks>
            In order to use a default implementation, return an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DefaultDeltaConfigurationStorageConverter"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
            <summary>
             Initializes an instance of ElementProperty.
            </summary>
            <param name="serviceProvider">Service provider used to locate services for the configuration system.</param>
            <param name="parent">The parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> owning the property.</param>
            <param name="declaringProperty">The description of the property.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
             Initializes an instance of ElementProperty.
            </summary>
            <param name="serviceProvider">Service provider used to locate certain services for the configuration system.</param>
            <param name="parent">The parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> owning the property.</param>
            <param name="declaringProperty">The description of the property.</param>
            <param name="additionalAttributes">Additional attributes made available to the ElementProperty.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.Dispose(System.Boolean)">
            <summary>
            Indicates the object is being disposed.
            </summary>
            <param name="disposing">Indicates <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel.Dispose(System.Boolean)"/> was invoked through an explicit call to <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel.Dispose"/> instead of a finalizer call.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.ConfigurationName">
            <summary>
            The name of the configuration element or attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.IsRequired">
            <summary>
             Returns <see langword="true" /> if the property is required.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.DeclaringElement">
            <summary>
             The element that contains the property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.SupportsOverride">
            <summary>
            Gets a value indicating that this property supports the ability to be over-ridden.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.PropertyAttributeName">
            <summary>
            The name of the attribute which is used to serialize this configuration property in XML.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.ContainingElementXPath">
            <summary>
            The XPath to the XML element that declares the attribute for this configuration property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.ConfigurationSectionName">
            <summary>
            The name of the configuration section that contains the property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.ContainingSectionXPath">
            <summary>
            The XPath to the XML element that declares the containing configuration section.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.DeltaConfigurationStorageConverter">
            <summary>
            The <see cref="T:System.ComponentModel.TypeConverter"/> that converts the internal overridden value to a string that can be stored in the delta configuration file.<br/>
            </summary>
            <remarks>
            In order to use a default implementation, return an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DefaultDeltaConfigurationStorageConverter"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConnectionStringSettingsDefaultDatabaseElementProperty">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty">
            <summary>
            A custom property added to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> to support properties that reference items in other <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>s.
            </summary>
            <remarks>
            The element reference property relies on the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>s registered with <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup"/> to create
            and monitor <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference"/>s.  This allows the property to provide a default value if the reference is not yet available
            and provide monitoring for name changes in the referenced item.
            
            ElementReferenceProperty provides <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.SuggestedValues"/> and <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.HasSuggestedValues"/> to support
            drop-down lists for selecting values.
            
            If the referenced item is available, the properties of that referenced item can be found through <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.ChildProperties"/>.
            
            Reference properties are automatically created by the use of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ReferenceAttribute"/> on the <see cref="T:System.Configuration.ConfigurationElement"/>.
            
            Note:  The declaring property must have a <see cref="T:System.String"/> property type
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
            <summary>
             Initializes an instance of the ElementReferenceProperty.  This is usually created by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/>.
            </summary>
            <param name="serviceProvider">The service provide used within the Enterprise Library configuration system.</param>
            <param name="lookup">The element lookup registry.</param>
            <param name="parent">The ElementViewModel on which this property is attached.</param>
            <param name="declaringProperty">The descriptor declaring this property.</param>
            <exception cref="T:System.ArgumentException">Thrown if the declaring property <see cref="P:System.ComponentModel.PropertyDescriptor.PropertyType"/> is not a <see cref="T:System.String"/> type.</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
             Initializes an instance of the ElementReferenceProperty.  This is usually created by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/>.
            </summary>
            <param name="serviceProvider">The service provide used within the Enterprise Library configuration system.</param>
            <param name="lookup">The element lookup registry.</param>
            <param name="parent">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> on which this property is attached.</param>
            <param name="declaringProperty">The descriptor declaring this property.</param>
            <param name="additionalAttributes">Additional attributes to apply to the reference proeprty.</param>
            <exception cref="T:System.ArgumentException">Thrown if the declaring property <see cref="P:System.ComponentModel.PropertyDescriptor.PropertyType"/> is not a <see cref="T:System.String"/> type.</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext)">
            <summary>
             Provides an opportunity to initialize the property after creation and prior to visualization.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.GetEmptyValue">
            <summary>
            Gets the value to use when the referred to object is no longer available.
            </summary>
            <returns>The string representation of an empty-value for this element.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.GetValueFromElement(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Returns the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindableValue"/> for an element that is displayed in a suggested value list.
            </summary>
            <param name="element">The element to collect a value for.</param>
            <returns>A string value for the element.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.GetSuggestedElements">
            <summary>
            Returns the suggested elements for this reference.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.Dispose(System.Boolean)">
            <summary>
            Indicates the object is being disposed.
            </summary>
            <param name="disposing">Indicates <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel.Dispose(System.Boolean)"/> was invoked through an explicit call to <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel.Dispose"/> instead of a finalizer call.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.Converter">
            <summary>
            Converter that should be used to convert value to and from a string representation.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.ReferencedElement">
            <summary>
             The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> referenced.  This will return null if the reference has not
             yet been realized, such as the case if the property has been loaded but the reference has not
             yet been loaded,
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.HasSuggestedValues">
            <summary>
            Returns a value indicating that this property has suggested values.
            </summary>
            <value>Returns <see langword="true"/> if there are suggested values for this property. 
            Otherwise, returns <see langword="false"/>.
            </value>
            <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SuggestedValues"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.SuggestedValues">
            <summary>
            Get a list of suggested values.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.Value">
            <summary>
            The value of the property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.HasChildProperties">
            <summary>
            Gets a value indiciating that this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> has child properties.
            </summary>
            <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ChildProperties"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.ChildProperties">
            <summary>
            Gets the child properties for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.ContainingScopeElement">
            <summary>
            Gets the element that provides the scope for searching for referenced elements.
            </summary>
            <remarks>
            Element references will be in the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.DescendentElements"/> collection
            of this element.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IElementChangeScope">
            <summary>
            An implementation of <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> and <see cref="T:System.Collections.Generic.IEnumerable`1"/> that can be used to iterate over and receive <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> events for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.DefaultDatabaseValidator">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverridesSectionDeltaFileValidator">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverridesSectionMergeFileValidator">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverridesSectionNameValidator">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.InteropDeltaStorageConverter">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.PolicyInjection.MatchCollectionPopulatedValidator">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.PolicyInjection.PolicyInjectionSectionViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> represents a <see cref="T:System.Configuration.ConfigurationSection"/> in the enterprise
            library configuration designer.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> provides a description of a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ConfigurationElement"/> 
            displayed in the Enterprise Library Configuration Design tool.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> collects metadata about a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ConfigurationElement"/> using
            reflection and additional <see cref="T:System.Attribute"/> values provided during construction.</remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IEnvironmentalOverridesElement">
            <summary>
            Interface that contains the necessary information needed to environmentally override a property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IEnvironmentalOverridesElement.IsElementPathReliableXPath">
            <summary>
            Gets a value indicating that this element's path is reliable.
            </summary>
            <remarks>
            The element's xpath is used in serializes and deserializing overrides for an element and must be reliable
            for the element to participate in the environmental overrides capability.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <param name="parentElementModel">The parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.</param>
            <param name="declaringProperty">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> describing the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ConfigurationElement"/> the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> represents.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <param name="parentElementModel">The parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.</param>
            <param name="declaringProperty">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> describing the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ConfigurationElement"/> the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> represents.</param>        
            <param name="additionalAttributes">Additional metadata <see cref="T:System.Attribute"/> values to apply to this item.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Configuration.ConfigurationElement,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <param name="parentElementModel">The parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.</param>
            <param name="thisElement">The </param>
            <param name="additionalAttributes">Additional metadata <see cref="T:System.Attribute"/> values to apply to this item.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext)">
            <summary>
            Initialization for this element during the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel.Load(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource)"/> or <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel.AddSection(System.String,System.Configuration.ConfigurationSection)"/>.
            </summary>
            <param name="context">The load context for this call</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ElementViewModelServiceDependencies(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel)">
            <summary>
            Injection Method used to supply additional dependencies to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <param name="elementLookup">The element registration.</param>
            <param name="applicationModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel"/> this element is part of.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Validate">
            <summary>
             Validates this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> and it's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Properties"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.GetValidators">
            <summary>
            Retrieves the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator"/> items for this element.
            </summary>
            <remarks>
            Element <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator"/> items are specified by using the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.Validation.ElementValidationAttribute"/>.</remarks>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Select">
            <summary>
            Makes this element the selected one on the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.CreateBindable">
            <summary>
            Creates the element the view binds to.  By default it is the element itself.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.GetLocalPathPart">
            <summary>
            Gets a string that can be appended to the parent's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> to compose a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> used to uniquely identify this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>. <br/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.RemoveChildFromView(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Removes an element from the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ChildElements"/> collection.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.AddChildToView(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Adds an element to the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ChildElements"/> collection.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.GetAllProperties">
            <summary>
            Gets all the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Property(System.String)"/> instances that are part of this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
            <returns>
            Returns an un evaluated iterator class. <br/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Property(System.String)">
            <summary>
            Gets the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Property(System.String)"/> with the specified <paramref name="propertyName"/>. <br/>
            If the property cannot be found, returns <see langword="null"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.GetAllChildElements">
            <summary>
            Gets all the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances that are directly contained in this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.EnsureHasChildElements">
            <summary>
            Ensures that that the children of this element have been discovered and populated for <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ChildElements"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ChildElement(System.String)">
            <summary>
            Retrieves a child element whose property name matches the specified property name.
            </summary>
            <param name="propertyName">The property name to match to the child element's property name.</param>
            <returns>The located child element or <see langword="null"/></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.DescendentElements(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Boolean})">
            <summary>
            Gets all descending <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> that match the supplied <paramref name="filter"/> instances relative to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.DescendentElements">
            <summary>
            Returns all descending <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances relative to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.DescendentConfigurationsOfType``1">
            <summary>
            Returns all descending <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances relative to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>
            whose <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ConfigurationType"/> is assignable to <typeparamref name="T"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>An empty set or a set <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> items.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.AncestorElements">
            <summary>
            Gets all ancestors <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.GetAllCommands">
            <summary>
            Creates or collections all the commands related to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.CreateDeleteCommand">
            <summary>
            Creates a delete <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> for this element based on it's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Attributes"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.CreateCustomCommands">
            <summary>
            Creates any custom commands for this element based on it's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Attributes"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.CreateOtherCommands">
            <summary>
            Creates commands other than Add, Delete, or custom command specified via attribute, for this element.
            </summary>
            <returns>
            An enumerable containing instances of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ToggleShowPropertiesCommand"/> and <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ValidateCommand"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.GetPromotedCommands">
            <summary>
            Gets any commands promoted by their child elements.
            </summary>
            <remarks>
            Commands promoted by children via the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.PromoteCommandsAttribute"/> appear in their parent's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Commands"/> list.</remarks>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Delete">
            <summary>
             Deletes this element.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.OnElementReferencesChanged">
            <summary>
            Invokes the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ElementReferencesChanged"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.OnDeleted">
            <summary>
            Invokes the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Deleted"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Dispose(System.Boolean)">
            <summary>
            Indicates the object is being disposed.
            </summary>
            <param name="disposing">Indicates <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel.Dispose(System.Boolean)"/> was invoked through an explicit call to <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel.Dispose"/> instead of a finalizer call.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.OnDescendentElementsChanged(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.DescendentElementsChanged"/> event.
            </summary>
            <param name="sender"></param>
            <param name="collectionChanged"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.PropertyChanged"/> event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ValidationResults">
            <summary>
             The validation results for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.IsSelected">
            <summary>
            Gets or sets the value indicating this element is selected.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.PropertiesShown">
            <summary>
            Gets or sets the value indicating if this element's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Properties"/> are shown in the view.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Bindable">
            <summary>
            Gets the element the view should bind to.  By default it is the element itself.
            </summary>
            <remarks>This is the cached bindable value created from <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.CreateBindable"/>.</remarks>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.CreateBindable"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.InheritedFromParentConfiguration">
            <summary>
            Gets or sets a value indicating that this configuratio was inherited from a parent configuration (such as machine.config).
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ElementId">
            <summary>
            Gets a unique identifier for this element.        
            </summary>
            <remarks>
            This identifier is unique within the lifetime of this element instance, but is not persisted in any way.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.IsNull">
            <summary>
            Gets a value indicating that the underlying <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ConfigurationElement"/> is <see langword="null"/>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ConfigurationType">
            <summary>
            Gets the type of the configuration element this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> was created for. <br/>
            </summary>
            <remarks>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>'s ConfigurationType is often used to identify or attach behavior to <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ConfigurationElement">
            <summary>
            Gets the configuration element instance this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>  was created for.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.DeclaringProperty">
            <summary>
            Gets the property on the containing configuration element, this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>  was created for.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path">
            <summary>
            Gets a string that can be used to uniquely identify this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>. <br/>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.TypePath">
            <summary>
            Gets the type path information for an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> in the
            form ParentTypePath/ConfigurationElementType.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Attributes">
            <summary>
            Gets the attributes that where supplied to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.PromoteCommands">
            <summary>
            Gets a boolean that indicates whether this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>'s add commands should be promoted to its parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <value>
            <see langword="true"/> if this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>'s add commands should be promoted to its parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>. Otherwise <see langword="false"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Name">
            <summary>
            Gets the name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> for use in the user-interface.<br/>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.NameProperty">
            <summary>
            Gets the property that provides the 'name' for the element.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.NamePropertyInternalValue">
            <summary>
            Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.NameProperty"/> internval value as a string representation.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Properties">
            <summary>
            Gets all <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Property(System.String)"/> instances for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ChildElementsCollectionChange">
            <summary>
            Invoked when this element's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ChildElements"/> collection is changed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ChildElements">
            <summary>
            Gets all <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances contained as direct child elements.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ParentElement">
            <summary>
            Gets the parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ContainingSection">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> that contains this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.AddCommands">
            <summary>
             Returns the sub-set of add <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> commands from <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Commands"/>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.CustomCommands">
            <summary>
             Returns the subset of custom <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> commands from <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Commands"/>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Commands">
            <summary>
             The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> command associated with this configuration element.
            </summary>
            <remarks>
             Default command are typically provided by the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ContainingSection"/>.  These may be overridden
             for each configuration element through the use of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute"/>
             </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.DeleteCommand">
            <summary>
             The delete <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/>.
            </summary>
             <remarks>
             This command is provided by the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ContainingSection"/> during construction, but
             may be overriden through the use of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute"/>.
             </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.IsElementPathReliableXPath">
            <summary>
            Gets a value indicating that this Element's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> is reliable 
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ElementReferencesChanged">
            <summary>
            Raised when elements visually related to this element change.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Deleted">
            <summary>
            Raised when this element is deleted.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.DescendentElementsChanged">
            <summary>
            Raised when <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.DescendentElements"/> change.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.#ctor(Microsoft.Practices.Unity.IUnityContainer,System.String,System.Configuration.ConfigurationSection)">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/>.
            </summary>
            <param name="builder">The factory to use when creating new elements within the section.</param>
            <param name="sectionName">The name of the section.</param>
            <param name="section">The underlying configuration section represented.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.#ctor(Microsoft.Practices.Unity.IUnityContainer,System.String,System.Configuration.ConfigurationSection,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/>.
            </summary>
            <param name="builder">The factory to use when creating new elements within the section.</param>
            <param name="sectionName">The name of the section.</param>
            <param name="section">The underlying configuration section represented.</param>
            <param name="metadataAttributes">Additional <see cref="T:System.Attribute"/> instances to apply to this section.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateBindable">
            <summary>
            Creates the element the view binds to.  By default it is the element itself.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.ExpandSection">
            <summary>
             Expands the section in the user-interface.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.Delete">
            <summary>
             Deletes this element.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.BeforeSave(System.Configuration.ConfigurationSection)">
            <summary>
             Invoked by <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.Save(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource)"/> before a section is saved.
            </summary>
            <param name="sectionToSave">The section to save.</param>
            <remarks>
             Provides an opportunity for the section to anything necessary before saving by <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.Save(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource)"/>.
             </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.Save(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource)">
            <summary>
             Invoked so the section will save itself to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource"/>.
            </summary>
            <param name="configurationSource">The configuration source to save to.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.GetAllProperties">
            <summary>
            Gets all the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Property(System.String)"/> instances that are part of this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
            <returns>
            Returns an un evaluated iterator class. <br/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.GetLocalPathPart">
            <summary>
            Gets a string that can be appended to the parent's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> to compose a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> used to uniquely identify this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>. <br/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.GetRelatedElements(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
             Determines all the elements visually related to the provided <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> within this section.
            </summary>
            <param name="element">The element to find related elements to.</param>
            <returns>The set of visually related elements.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.AddReferredToRelatedElements(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Collections.ObjectModel.Collection{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel})">
            <summary>
            Adds elements that an element visually refers to in within the section.
            </summary>
            <param name="element">The element to find related elements for.</param>
            <param name="relatedElements">The set of related elements.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.AddReferredFromRelatedElements(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Collections.ObjectModel.Collection{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel})">
            <summary>
            Adds elements that visually refer to an element within the section.
            </summary>
            <param name="element">The element to find related elements for.</param>
            <param name="relatedElements">The set of related elements.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.AddNonCollectionParentRelatedElement(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Collections.ObjectModel.Collection{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel})">
            <summary>
            Adds any elements related to the specified element that are not collection parents.
            </summary>
            <param name="element">The element to find related elements for.</param>
            <param name="relatedElements">The set of related elements.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.AddChildrenRelatedElements(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Collections.ObjectModel.Collection{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel})">
            <summary>
            Adds any related child elements to the specified element.
            </summary>
            <param name="element">The element to find related elements for.</param>
            <param name="relatedElements">The set of related elements.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.AddCollectionChildrenRelatedElement(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Collections.ObjectModel.Collection{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel})">
            <summary>
            Adds children of any child collections related this the specified element.
            </summary>
            <param name="element">The element to find related elements for.</param>
            <param name="relatedElements">The set of related elements.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.GetAllCommands">
            <summary>
            Creates or collections all the commands related to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateCollectionElementAddCommand(System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel)">
            <summary>
            Creates the collection element add command(s) for the given element type within the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/>.
            </summary>
            <param name="elementType">The <see cref="T:System.Configuration.ConfigurationElement"/> <see cref="T:System.Type"/> to create add commands for.</param>
            <param name="collection">The collection to which new elements of <paramref name="elementType"/> will be added.</param>
            <returns>The set of add commands.</returns>
            <exception>Errors in creating the underlying object may result in a <see cref="T:Microsoft.Practices.Unity.ResolutionFailedException"/></exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateDeleteCommand(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Collections.Generic.IEnumerable{System.Attribute},System.Type)">
            <summary>
             Creates the a delete <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> for an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <param name="elementViewModel">The element the delete command applies to.</param>
            <param name="attributes">Attributes that may override the type of delete command created.</param>
            <param name="defaultCommandModelType">The default delete command <see cref="T:System.Type"/>.</param>
            <returns>The delete command.</returns>
             <remarks>
             Seeks to find a replacement delete command by seeking a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute"/> in <paramref name="attributes"/> that replaces the default command.<br/>
             If a replacement cannot be found, then creates and returns the command using the <paramref name="defaultCommandModelType"/>.
             </remarks>
             <exception>Errors in creating the underlying object may result in a <see cref="T:Microsoft.Practices.Unity.ResolutionFailedException"/></exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateDeleteCommand(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
             Creates a delete command for the supplied <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <param name="elementViewModel">The element the delete command applies to.</param>
            <param name="attributes">Attributes that may override the type of delete command created.</param>
            <returns>A delete command for the element based on a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute"/> in <paramref name="attributes"/> or an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel"/>.</returns>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateDeleteCommand(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Collections.Generic.IEnumerable{System.Attribute},System.Type)"/>
            <exception>Errors in creating the underlying object may result in a <see cref="T:Microsoft.Practices.Unity.ResolutionFailedException"/></exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateElementCollectionAddCommands(System.Collections.Generic.IEnumerable{System.Attribute},Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel)">
            <summary>
             Creates the add command for an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/>.
            </summary>
            <param name="attributes">The attributes to consider when creating the command.</param>
            <param name="collection">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/> to create the add command for.</param>
            <returns>
             If there is a replacement add command in the <paramref name="attributes"/> set, a command of that type is returned.
            <br/>
             If the collection is a polymorphic collection or there are multiple add commands, then a command of type <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultElementCollectionAddCommand"/> will be returned.
             <br/>
             If the collection is not polymorphic, then the add command for the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.CollectionElementType"/> is returned
             since the collection only has one type that can be added for it and we don't want the user to navigate multiple menus unnecessarily.
            </returns>
             <exception>Errors in creating the underlying object may result in a <see cref="T:Microsoft.Practices.Unity.ResolutionFailedException"/></exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateCustomCommands(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Creates custom commands for an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <param name="target">The target <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> to build custom commands for.</param>
            <param name="attributes">The set of <see cref="T:System.Attribute"/> values to consider when creating the custom commands.</param>
            <returns>A set of custom commands.</returns>
            <remarks>
            Custom commands are determined by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute"/> with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandPlacement"/> of <see cref="F:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandPlacement.ContextCustom"/>.
            </remarks>
            <exception>Errors in creating the underlying object may result in a <see cref="T:Microsoft.Practices.Unity.ResolutionFailedException"/></exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateCommand``1(System.Collections.Generic.Dictionary{System.Type,System.Object})">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> applying override instances.
            </summary>
            <typeparam name="TCommandModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> to create.</typeparam>
            <param name="overrides">The dictionary of type and instances to apply as overrides during construction of the <typeparamref name="TCommandModel"/>.</param>
            <returns>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> created.</returns>
            <exception>Errors in creating the underlying object may result in a <see cref="T:Microsoft.Practices.Unity.ResolutionFailedException"/></exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateCommand``1(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
             Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> with the specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> as a constructor parameter.
            </summary>
            <param name="target">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> to provide as constructor context for the command.</param>
            <typeparam name="TCommandModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> type to create.</typeparam>
            <returns>The created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/></returns>
             <exception>Errors in creating the underlying object may result in a <see cref="T:Microsoft.Practices.Unity.ResolutionFailedException"/></exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateChild(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates a child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> based on a <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </summary>
            <param name="containingViewModel">The parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> for the new element.</param>
            <param name="declaringProperty">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> defining the child element.</param>
            <returns>
            The child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> based on the <paramref name="declaringProperty"/> descriptor,
            or a custom one based on the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ViewModelAttribute"/>.<br/>
            If the <paramref name="declaringProperty"/> is a collection, the return value will derive from <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/><br/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateCollectionElement(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel,System.Configuration.ConfigurationElement)">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel"/> based on a <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <param name="parent">The parent of the created element.</param>
            <param name="containedElement">The <see cref="T:System.Configuration.ConfigurationElement"/> for the contained element.</param>
            <returns>
            The created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel"/> or a derived custom view model specified by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ViewModelAttribute"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateElementCollection(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
            <summary>
             Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/> based on a <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </summary>
            <param name="parent">The parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> of the created element.</param>
            <param name="declaringProperty">The declaring property whose type should be a <see cref="T:System.Configuration.ConfigurationElementCollection"/> derived type.
            </param>
            <returns>
            The created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/> or a derived custom view model specified by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ViewModelAttribute"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateElement(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> based on a <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </summary>
            <param name="parent">The parent for the created element.</param>
            <param name="declaringProperty">The property descriptor for the element.</param>
            <returns>
            The created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> or a custom one specified by a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ViewModelAttribute"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateProperty(System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> from a <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </summary>
            <param name="component">The <see cref="T:System.Object"/> containing the property described by <paramref name="declaringProperty"/>.</param>
            <param name="declaringProperty">The descriptor for the property.</param>
            <returns>The created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> or a custom one as specified by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ViewModelAttribute"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateProperty``1(Microsoft.Practices.Unity.ResolverOverride[])">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <typeparam name="TPropertyViewModel">The type of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> to create.</typeparam>
            <param name="overrides">The overrides to apply during construction of the property.</param>
            <returns>A new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> or a custom one specified by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ViewModelAttribute"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateProperty(System.Type,Microsoft.Practices.Unity.ResolverOverride[])">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> of the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="propertyViewModelType">The <see cref="T:System.Type"/> of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>to create.</param>
            <param name="overrides">Overrides to apply during construction of the property.</param>
            <returns>A new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> or a custom one specified by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ViewModelAttribute"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateElementProperty(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty"/> based on a <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </summary>
            <param name="parent">The parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> for the property.</param>
            <param name="declaringProperty">The property descriptor.</param>
            <returns>
            Returns a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty"/> or a custom one specified by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ViewModelAttribute"/> is returned if the <paramref name="declaringProperty"/> provides a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ReferenceAttribute"/>.<br/>
            Returns a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty"/> or a custom one specified by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ViewModelAttribute"/> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateReferenceElementProperty(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty"/> from a <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </summary>
            <param name="parent">The parent element for the property.</param>
            <param name="declaringProperty">The property descriptor.</param>
            <returns>A new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty"/> or a custom one specified by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ViewModelAttribute"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateValidatorInstance(System.Type)">
            <summary>
            Creates a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator"/> based on a <see cref="T:System.Type"/>.
            </summary>
            <param name="validatorType">The type of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator"/> to create.</param>
            <returns>A new validator.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateSection(Microsoft.Practices.Unity.IUnityContainer,System.String,System.Configuration.ConfigurationSection)">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> for a <see cref="T:System.Configuration.ConfigurationSection"/>.
            </summary>
            <param name="container">The container to use in building the section and its children.</param>
            <param name="sectionName">The name of the section.</param>
            <param name="section">The <see cref="T:System.Configuration.ConfigurationSection"/> to create the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> for.</param>
            <returns>The created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.GetMetadataAttributesFromProperty(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Determines attributes for a <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </summary>
            <param name="property">The property descriptor to provide attributes for.</param>
            <returns>
            Provides a set of attributes based on a base set of attributes determined from <see cref="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)"/>
            with overriding attributes determined from <see cref="P:System.ComponentModel.MemberDescriptor.Attributes"/>.
            </returns>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.MetadataCollection"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateViewModelInstance``1(Microsoft.Practices.Unity.IUnityContainer,System.Collections.Generic.IEnumerable{System.Attribute},Microsoft.Practices.Unity.ResolverOverride[])">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance from a container.
            </summary>
            <typeparam name="T">The type of view model to create.</typeparam>
            <param name="builder">The container used to create the model.</param>
            <param name="metadataForCreation">The metadata attributes used to create the view model.</param>
            <param name="overrides">Any overrides to supply to <paramref name="builder"/> during the creation.</param>
            <returns>
            Returns a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> of type <typeparamref name="T"/> or
            if the <paramref name="metadataForCreation"/> provides a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ViewModelAttribute"/>, a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/>
            of type <see cref="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ViewModelAttribute.ModelType"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.IsExpanded">
            <summary>
             Gets or sets a value indicating if the section is expanded in the user-interface.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.SectionName">
            <summary>
             Gets the name of this section.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.ProtectionProviderProperty">
            <summary>
             Gets the protection provider property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.RequirePermissionProperty">
            <summary>
            Gets the require permission property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.IsElementPathReliableXPath">
            <summary>
            Gets a value indicating that this Element's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> is reliable 
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.PolicyInjection.PolicyDataViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel">
            <summary>
            Represents a <see cref="T:System.Configuration.ConfigurationElement"/> within a <see cref="T:System.Configuration.ConfigurationElementCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel,System.Configuration.ConfigurationElement)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel"/>.
            </summary>
            <param name="containingCollection">The collection containing this element.</param>
            <param name="thisElement">The <see cref="T:System.Configuration.ConfigurationElement"/> modeled by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel,System.Configuration.ConfigurationElement,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel"/>.
            </summary>
            <param name="containingCollection">The collection containing this element.</param>
            <param name="thisElement">The <see cref="T:System.Configuration.ConfigurationElement"/> modeled by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel"/>.</param>
            <param name="additionalAttributes">Additional <see cref="T:System.Attribute"/> items to apply when describing this <paramref name="thisElement"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel.GetAllCommands">
            <summary>
            Creates or collections all the commands related to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel.Delete">
            <summary>
             Deletes this element.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel.GetLocalPathPart">
            <summary>
            Gets a string that can be appended to the parent's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> to compose a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> used to uniquely identify this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>. <br/>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel.MoveUp">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> to move this element logically up in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel.MoveDown">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> to move this element logically down in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel.IsElementPathReliableXPath">
            <summary>
            Gets a value indicating that this Element's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> is reliable 
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.RangeBoundValidator">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.RedirectedSectionSourceProperty">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.RangeValidatorCultureProperty">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionEditorContainedElementReferenceProperty">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionEditorContainedElementReferenceProperty"/> represents
            a reference property contained within a collection editor.
            </summary>
            <remarks>
            Elements within a collection editor need to report their associated element differently.  
            This class handles reporting the appropriate <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ILogicalPropertyContainerElement"/>
            when contained within a collection editor.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionEditorContainedElementProperty"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionEditorContainedElementReferenceProperty.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates a new instnace of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionEditorContainedElementProperty"/>
            </summary>
            <param name="serviceProvider"></param>
            <param name="lookup">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup"/> service to use when locating elements.</param>
            <param name="parent">The parent element view model.</param>
            <param name="declaringProperty">The declaring property descriptor.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WeakEventHandlerManager">
            <summary>
            Handles management and dispatching of EventHandlers in a weak way.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WeakEventHandlerManager.CallWeakReferenceHandlers(System.Object,System.Collections.Generic.List{System.WeakReference})">
            <summary>
             Invokes the handlers 
            </summary>
            <param name="sender"></param>
            <param name="handlers"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WeakEventHandlerManager.AddWeakReferenceHandler(System.Collections.Generic.List{System.WeakReference}@,System.EventHandler,System.Int32)">
            <summary>
             Adds a handler to the supplied list in a weak way.
            </summary>
            <param name="handlers">Existing handler list.  It will be created if null.</param>
            <param name="handler">Handler to add.</param>
            <param name="defaultListSize">Default list size.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WeakEventHandlerManager.RemoveWeakReferenceHandler(System.Collections.Generic.List{System.WeakReference},System.EventHandler)">
            <summary>
             Removes an event handler from the reference list.
            </summary>
            <param name="handlers">Handler list to remove reference from.</param>
            <param name="handler">Handler to remove.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WeakEventHandlerManager.DispatcherProxy">
            <summary>
            Hides the dispatcher mis-match between Silverlight and .NET, largely so code reads a bit easier
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayout">
            <summary>
            Layout class used to display a vertical list of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>'s.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayout.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayout"/>.
            </summary>
            <param name="elements">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances that should be displayed in the list.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayout.Elements">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances that should be displayed in the list.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances that should be displayed in the list.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayoutWalker">
            <summary>
            Walks the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> bindables to disover and return layout items
            of type <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayout"/>, <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ListLayout"/>,
            and <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoColumnsLayout"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayoutWalker.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel)">
            <summary>
            Initializes a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayoutWalker"/>.
            </summary>
            <param name="root">Root <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/>'s bindable is expected to be one of <br/>
            <list>
            <item><see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayout"/></item>
            <item><see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ListLayout"/></item>
            <item><see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoColumnsLayout"/></item>
            </list>
            
            If it is not one of these classes <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayoutWalker"/> will
            return empty at all times.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayoutWalker.LayoutElements">
            <summary>
            Visits all layout elements under the root specified
            in <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayoutWalker"/> and returns
            them.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HeaderedListLayout">
            <summary>
            Layout class that can be used to visualize a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> (typically <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/>) as a list of elements with a textual header.
            </summary>
            <remarks>
            This list layout will show the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>'s name as the title,<br/>
            the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>'s ChildElements as the list's contents and allows to invoke the
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>'s Commands from a contextual menu.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoVerticalsLayout">
            <summary>
            Layout class used to display two <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instances vertically.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ThreeVerticalVisualsLayout"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ListLayout"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayout"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoVerticalsLayout.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoVerticalsLayout"/>.
            </summary>
            <param name="first">The first <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance.</param>
            <param name="second">The second <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoVerticalsLayout.First">
            <summary>
            Gets the first <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance.
            </summary>
            <value>
            The first <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoVerticalsLayout.Second">
            <summary>
            Gets the second <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance.
            </summary>
            <value>
            The second <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HeaderedListLayout.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HeaderedListLayout"/>.
            </summary>
            <param name="containingElement">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance that should be displayed as a headered list.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HeaderedListLayout.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HeaderedListLayout"/> with the specified contextual commands.
            </summary>
            <param name="containingElement">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance that should be displayed as a headered list.</param>
            <param name="commands">A specific list of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> that should be displayed for the add (+) button in the UI.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HeaderLayout">
            <summary>
            Layout class that can be used to visualize a textual header and contextual commnands.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HeaderLayout.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HeaderLayout"/>.
            </summary>
            <param name="title">The title that should be shown in the header.</param>
            <param name="commands">The commands that can be invoked from a contextual menu.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HeaderLayout.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HeaderLayout"/>.
            </summary>
            <param name="title">The title that should be shown in the header.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HeaderLayout.Title">
            <summary>
            Gets the title that should be shown in the header.
            </summary>
            <value>
            The title that should be shown in the header.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HeaderLayout.Commands">
            <summary>
            Gets the commands that should be shown in the contextual menu.
            </summary>
            <value>
            The commands that should be shown in the contextual menu.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalColumnBindingLayout">
            <summary>
            Layout class used to display an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance in a horizontally aligned grid column.
            </summary>
            <remarks>
            Most configuration section models show a top-level grid with column names.<br/>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances that should be shown as part of this top-level grid should be contained in this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalColumnBindingLayout"/> to 
            participate in resizing behavior.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoColumnsLayout">
            <summary>
            Layout class used to display two <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instances horizontally.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoColumnsLayout.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoColumnsLayout"/>.
            </summary>
            <param name="left">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance that should be shown on the left.</param>
            <param name="right">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance that should be shown on the right.</param>
            <param name="columnIndex">The 0-based column index that should be used to display and resize the <paramref name="left"/> element. </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoColumnsLayout.Left">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance that should be shown on the left.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance that should be shown on the left.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoColumnsLayout.Right">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance that should be shown on the right.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance that should be shown on the right.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoColumnsLayout.ColumnName">
            <summary>
            Gets the 0-based column index that should be used to display and resize the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoColumnsLayout.Left"/> element. 
            </summary>
            <value>
            The 0-based column index that should be used to display and resize the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoColumnsLayout.Left"/> element. 
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalColumnBindingLayout.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalColumnBindingLayout"/>.
            </summary>
            <param name="element">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> isntance that should be displayed.</param>
            <param name="columnIndex">The 0-based column index that should be used to display and resize the <paramref name="element"/>. </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout">
            <summary>
            Layout class that can be used to visualize any number of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances as a horizontal list with resize controls.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel[])">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout"/>.
            </summary>
            <param name="elements">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> elements that should be displayed horizontally.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IElementChangeScope,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel[])">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout"/>.
            </summary>
            <param name="changeScope">An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IElementChangeScope"/> instance that should be used to recalculate the visibility of resize controls with.</param>
            <param name="elements">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> elements that should be displayed horizontally.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout"/>.
            </summary>
            <param name="elements">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> elements that should be displayed horizontally.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.NestingDepth">
            <summary>
            When iterating over the horizontal list using <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.hasNext"/> and <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.Next"/>, returns an 0-based index of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.Current"/> element.
            </summary>
            <value>
            An 0-based index of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.Current"/> element.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.ColumnName">
            <summary>
            Gets the column name of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.Current"/> element.
            </summary>
            <value>
            The column name of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.Current"/> element.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.HasNext">
            <summary>
            Gets a boolean that indicates whether a next <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance is available.
            </summary>
            <value>
            <see langword="true"/> if a next <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance is available; Otherwise <see langword="false"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.Current">
            <summary>
            Gets the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance.
            </summary>
            <value>
            The current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.Next">
            <summary>
            Gets a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout"/> instance that can be used to access the next <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance.
            </summary>
            <value>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout"/> instance that can be used to access the next <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.OwnsResizing">
            <summary>
            Gets or sets a boolean that indicates whether this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout"/> should show resize controls.
            </summary>
            <value>
            <see langword="true"/> if resize controls should be shown; Otherwise <see langword="false"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.Contained">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance that is displayed below the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout"/>.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance that is displayed below the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.CanResize">
            <summary>
            Gets a boolean value indicating whether the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.Current"/> <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance can be resized.
            </summary>
            <value>
            <see langword="true"/> if the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.Current"/> <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance can be resized; Otherwise <see langword="false"/>.
            </value>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HorizontalListLayout.PropertyChanged">
            <summary>
            Occurs when a property value has changed.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ListLayout">
            <summary>
            Layout class used to display a vertical list of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/>'s.
            </summary>
            <remarks>
            For a vertical list of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances use <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayout"/>, 
            which will honor the collection change events for the displayed list.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementListLayout"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TwoVerticalsLayout"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ThreeVerticalVisualsLayout"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ListLayout.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ListLayout"/>.
            </summary>
            <param name="elements">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> elements that should be displayed in a vertical list.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ListLayout.Elements">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> elements that should be displayed in a vertical list.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> elements that should be displayed in a vertical list.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PopupEditorBindableProperty">
            <summary>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/> implementation that allows the user to interact with the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>'s value through a model popup editor.
            </summary>
            <remarks>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instances are shown in the designer as well in Visual Studio's property grid.<br/>
            Threrefore the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/> class derives from <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PopupEditorBindableProperty.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PopupEditorBindableProperty"/>.
            </summary>
            <param name="property">The underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instance.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PopupEditorBindableProperty.GetEditor(System.Type)">
            <summary>
            Gets an editor of the specified type.
            </summary>
            <returns>
            If <paramref name="editorBaseType"/> is <see cref="T:System.Drawing.Design.UITypeEditor"/> returns the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PopupEditorBindableProperty.PopupEditor"/>; Otherwise <see langword="null"/>.
            </returns>
            <param name="editorBaseType">The base type of editor, which is used to differentiate between multiple editors that a property supports. </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PopupEditorBindableProperty.PopupEditor">
            <summary>
            Gets the <see cref="T:System.Drawing.Design.UITypeEditor"/> implementation that can be used to edit the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>'s value.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Design.UITypeEditor"/> implementation that can be used to edit the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>'s value.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PopupEditorBindableProperty.LaunchEditor">
            <summary>
            Gets an <see cref="T:System.Windows.Input.ICommand"/> implementation that can be used to open the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>'s editor.
            </summary>
            <value>
            An <see cref="T:System.Windows.Input.ICommand"/> implementation that can be used to open the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>'s editor.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PopupEditorBindableProperty.TextReadOnly">
            <summary>
            Gets whether this property allows user input.
            </summary>
            <returns>
            false if this property allows user input; Otherwise true.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PopupEditorBindableProperty.IsReadOnly">
            <summary>
            Gets whether this property is read-only.
            </summary>
            <returns>
            true if the property is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty">
            <summary>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/> class that allow's the UI (User Interface) to interact with the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>'s <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SuggestedValues"/> collection.
            </summary>
            <remarks>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instances are shown in the designer as well in Visual Studio's property grid.<br/>
            Threrefore this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty"/> class derives from <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>
            <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SuggestedValues"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty"/>.
            </summary>
            <param name="property">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> that should be displayed through a UI (User Interface).</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources. </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty.Converter">
            <summary>
            Gets a <see cref="T:System.ComponentModel.TypeConverter"/> implementation that can be used to interact with the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
            <returns>
            An instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty.SuggestedValuesBindablePropertyConverter"/> that is used to display the Value for the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty.SuggestedValuesEditable">
            <summary>
            Gets whether values other than the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty.BindableSuggestedValues"/> are allowed.
            </summary>
            <value>
            <see langword="true"/> if values other than the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty.BindableSuggestedValues"/> are allowed.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty.BindableSuggestedValues">
            <summary>
            Gets a list of suggested values to be displayed through the UI (User Interface).
            </summary>
            <value>
            A list of suggested values to be displayed through the UI (User Interface).
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty.SuggestedValuesBindablePropertyConverter">
            <summary>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BindableProperty.BindablePropertyConverter"/> implementation that can be used to display and interpret a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> and its <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SuggestedValues"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty.SuggestedValuesBindablePropertyConverter.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty.SuggestedValuesBindablePropertyConverter"/>.
            </summary>
            <param name="property">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> this converter should be created for.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty.SuggestedValuesBindablePropertyConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <returns>
            The underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>'s <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SuggestedValues"/>.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SuggestedValuesBindableProperty.SuggestedValuesBindablePropertyConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <returns>
            <see langword="true"/> if the underlying <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> has suggested values; Otherwise <see langword="false"/>;
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.AddCacheManagerCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand">
            <summary>
            Adds a <see cref="T:System.Configuration.ConfigurationElement"/> type to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationElementType,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand"/>.
            </summary>
            <param name="configurationElementType">The configuration element type to add when executed.</param>
            <param name="collection">The collection to add the element to.</param>
            <param name="uiService">The user-interface service to use when displaying dialogs and windows to the user.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationElementType,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand"/>.
            </summary>
            <param name="commandAttribute">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute"/> providing context for this command.</param>
            <param name="configurationElementType">The configuration element type to add when executed.</param>
            <param name="collection">The collection to add the element to.</param>
            <param name="uiService">The user-interface service to use when displaying dialogs and windows to the user.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand.DefaultCollectionElementAddCommandInitialization(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel)">
            <summary>
             Additional initialization dependencies for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand"/>.
            </summary>
            <param name="applicationModel">The design-time application model.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand.InnerExecute(System.Object)">
            <summary>
            Adds a new child element to <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand.ElementCollectionModel"/>.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can be set to null.
            </param>
            <remarks>
            Adds a new element to the collection through <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.AddNewCollectionElement(System.Type)"/>
            and makes the new element the selected element.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand.InnerCanExecute(System.Object)">
            <summary>
            When implemented by a child, determines if the command can execute.
            </summary>
            <returns>
            Returns <see langword="true"/> if this command can be executed; otherwise, <see langword="false"/>.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand.ConfigurationElementType">
            <summary>
             Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand.ConfigurationElementType"/> being added to the collection.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand.ElementCollectionModel">
            <summary>
            Gets the collection where the new element will be added.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand.Title">
            <summary>
            Provides the title of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> command.  Typically this will appear as the title to a menu in the configuration tool.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand.AddedElementViewModel">
            <summary>
            The added element view model created during execution of the command.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand.HelpText">
            <summary>
             The command's related help text.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand.Placement">
            <summary>
             The logical placement of the command.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.AddInstrumentationBlockCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand">
            <summary>
            Command Model implementation that will add a new block to the designer.<br/>
            This Command Model can be added by annotating an assembly with an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.AddApplicationBlockCommandAttribute"/> attribute.<br/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.AddApplicationBlockCommandAttribute,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand"/> class.
            </summary>
            <param name="configurationModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> instance that represents the configuration source that is currently edited.</param>
            <param name="commandAttribute">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.AddApplicationBlockCommandAttribute"/> that specifes metadata for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand"/> to be initialized with.</param>
            <param name="uiService"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.AddApplicationBlockCommandInitialize(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel)">
            <summary>
             Initialization method for additional dependencies not specified by the constructor.
            </summary>
            <param name="applicationModel">The design-time application model.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.CreateConfigurationSection">
            <summary>
            When overridden in a derived class, returns the intial configuration schema that should be added to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.InnerCanExecute(System.Object)">
            <summary>
            Protected method for determinging if command can execute.
            </summary>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.InnerExecute(System.Object)">
            <summary>
            Creates and adds a new section to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <param name="parameter"></param>
            <remarks>
            After the section has been created <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.CreateConfigurationSection"/>, the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> 
            may be modified during the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.AfterSectionAdded"/> template method.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.AfterSectionAdded">
            <summary>
            Provides the opportunity to modify the section immediately after it's been added to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.SectionName">
            <summary>
            Gets the name of the section that should be added to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.AddedSection">
            <summary>
            The section added during <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.InnerExecute(System.Object)"/>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.AddCachingBlockCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.AddConfigurationSourcesBlockCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.AddDatabaseBlockCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand">
            <summary>
            Delete command for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationSourceElement"/> items that ensure
            the last element in the collection cannot be deleted.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand"/> class.
            </summary>
            <param name="commandAttribute">Attribute defining information about the command.</param>
            <param name="elementViewModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance this command applies to.</param>
            <param name="uiService">UI Service used to display messages and windows to the user.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.DefaultDeleteCommandModelInitialize(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel)">
            <summary>
            Initializes this command.  This is generally used by the dependency injection contianer.
            </summary>
            <param name="applicationModel"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.InnerCanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.InnerExecute(System.Object)">
            <summary>
            Executes the command to delete the element if <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.InnerCanExecute(System.Object)"/> is true.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.Title">
            <summary>
            Provides the title of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> command.  Typically this will appear as the title to a menu in the configuration tool.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.Placement">
            <summary>
             The logical placement of the command.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.KeyGesture">
            <summary>
            Defines the key gesture used for this command.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DefaultDeltaConfigurationStorageConverter">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            <br/>
            Default <see cref="T:System.ComponentModel.TypeConverter"/> implementation for storing values in a delta configuration file.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IEnvironmentalOverridesProperty"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.CategoryOverrides">
            <summary>
              Looks up a localized string similar to Overrides.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.DeltaDialogFilter">
            <summary>
              Looks up a localized string similar to Environment Delta Configuration Files (*.dconfig)|*.dconfig|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.ExportingEnvironemntConfigurationUsingNonSystemSource">
             <summary>
               Looks up a localized string similar to Exporting an Environment Configuration File can only be done if the Selected Source is set to a System Configuration Source.
            
            In order to export an Environment Configuration File for a configuration stored in a File Configuration Source, open the File Configuration Source directly and merge the Environment Delta to produce an Environment Configuration File.
            .
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.ExportMergedConfigurationTitle">
            <summary>
              Looks up a localized string similar to Export Merged Environment Configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.ExportMergedEnvironmentTitle">
            <summary>
              Looks up a localized string similar to Export Merged Environment Configuration File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.ExportMergedUnsavedMainConfigurationMessage">
            <summary>
              Looks up a localized string similar to The main configuration must be saved before you can save the merged environment configuration. Do you want to save the main configuration now?.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.OpenDeltaDialogTitle">
            <summary>
              Looks up a localized string similar to Open Environment Delta File (dconfig).
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.OpenDeltaNoMergeSectionFound">
            <summary>
              Looks up a localized string similar to The specified file does not contain a valid EnvironmentMergeSection..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.OverridesDeltaFileDisplayName">
            <summary>
              Looks up a localized string similar to Environment Delta File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.OverridesPropertyDontOverrideProperties">
            <summary>
              Looks up a localized string similar to Don&apos;t Override Properties.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.OverridesPropertyNameTemplate">
            <summary>
              Looks up a localized string similar to Overrides on {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.OverridesPropertyOverrideProperties">
            <summary>
              Looks up a localized string similar to Override Properties.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.SaveDeltaDialogTitle">
            <summary>
              Looks up a localized string similar to Save Environment Configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.SaveDeltaOverwriteExistingFile">
            <summary>
              Looks up a localized string similar to The file &apos;{0}&apos; already exists, if you continue you will overwrite this file..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.SaveDeltaUnsavedMainConfigurationMessage">
            <summary>
              Looks up a localized string similar to The main configuration must be saved before you can save the environment delta configuration. Do you want to save the main configuration now?.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.SaveEnvironmentDeltaCommandTitle">
            <summary>
              Looks up a localized string similar to Save Environment Delta File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.SaveOverwriteMergedFile">
            <summary>
              Looks up a localized string similar to The file &apos;{0}&apos; already exists, if you continue you will overwrite this file..
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.EnvironmentOverriddenElementPayload">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentOverriddenElementProperty">
            <summary>
            property that declares the thing that represents overrides for 1 element.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.EnvironmentOverriddenElementReference">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            <br/>
            Represents a reference to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> from within a Delta Configuration file,
            Which might or might not be established.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.EnvironmentOverriddenProperty">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentSourceViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IElementExtendedPropertyProvider">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IElementExtendedPropertyProvider"/> interface allows
            an implementer to provide additional properties to <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>s.
            </summary>
            <remarks>
            Extender providers must be added to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup"/> 
            through <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.AddElement(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)"/> or <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.AddCustomElement(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)"/> to begin
            extending <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> items.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IElementExtendedPropertyProvider.CanExtend(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Gets a value that indicates this extender provides <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>
            elements to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <param name="subject">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> to determine properties for.</param>
            <returns>
            Should return <see langword="true"/> if this extender provides properties for the <paramref name="subject"/>.
            Otherwise, returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IElementExtendedPropertyProvider.GetExtendedProperties(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Returns the set of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> elements to add to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <param name="subject">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> to provide properties for.</param>
            <returns>
            Returns the set of additional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> items to add to the <paramref name="subject"/>.
            </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1"/> provides custom value storage and is not
            built from a <see cref="T:System.ComponentModel.PropertyDescriptor"/> definition.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1"/> is used to provide additional properties for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> that
            are not backed by a property on a <see cref="T:System.Configuration.ConfigurationElement"/>.
            </remarks>
            <typeparam name="TProperty">The type for the underlying property value.</typeparam>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1.#ctor(System.IServiceProvider,System.String)">
            <summary>
            Initializes a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1"/>.
            </summary>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/> to use for this property.</param>
            <param name="propertyName">The name of this property.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1.#ctor(System.IServiceProvider,System.String,System.Attribute[])">
            <summary>
            Initializes a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1"/>.
            </summary>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/> to use for this property.</param>
            <param name="propertyName">The name of this property.</param>
            <param name="attributes">Additional <see cref="T:System.Attribute"/> values for this property.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1.#ctor(System.IServiceProvider,System.ComponentModel.TypeConverter,System.String)">
            <summary>
            Initializes a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1"/>.
            </summary>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/> to use for this property.</param>
            <param name="converter">The <see cref="T:System.ComponentModel.TypeConverter"/> to use when converting values for display to or from the user-interface.</param>
            <param name="propertyName">The name of this property.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1.#ctor(System.IServiceProvider,System.ComponentModel.TypeConverter,System.String,System.Attribute[])">
            <summary>
            Initializes a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1"/>.
            </summary>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/> to use for this property.</param>
            <param name="converter">The <see cref="T:System.ComponentModel.TypeConverter"/> to use when converting values for display to or from the user-interface.</param>
            <param name="propertyName">The name of this property.</param>
            <param name="attributes">Additional <see cref="T:System.Attribute"/> values for this property.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1.#ctor(System.IServiceProvider,System.Object,System.ComponentModel.PropertyDescriptor,System.ComponentModel.TypeConverter,System.String,System.Attribute[])">
            <summary>
            Initializes a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1"/>.
            </summary>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/> to use for this property.</param>
            <param name="propertyDescriptor">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> for this property.  This is usually <see langword="null"/> for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1"/>.</param>
            <param name="converter">The <see cref="T:System.ComponentModel.TypeConverter"/> to use when converting values for display to or from the user-interface.</param>
            <param name="propertyName">The name of this property.</param>
            <param name="attributes">Additional <see cref="T:System.Attribute"/> values for this property.</param>
            <param name="component">The underlying <see cref="T:System.Object"/> that provides the underlying .NET property.  This is usually <see langword="null"/> for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1.SetValue(System.Object)">
            <summary>
            Sets the underlying, stored value.
            </summary>
            <remarks>
            Once the value is stored, the property is <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Validate"/>.
            
            </remarks>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1.GetValue">
            <summary>
            Gets the underlying, stored value.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1.PropertyType">
            <summary>
            Gets the <see cref="T:System.Type"/> of the property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1.Converter">
            <summary>
            Converter that should be used to convert value to and from a string representation.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1.PropertyName">
            <summary>
            The name of the property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomProperty`1.TypedValue">
            <summary>
            Gets or sets the underlying, typed value.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.IEnvironmentalOverridesEditor">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.OverriddenProtectionProviderProperty">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ProtectionProviderProperty">
            <summary>
            Is a custom <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> that indicates if the section needs a protection provider and is, therefore, encrypted.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ProtectionProviderProperty.#ctor(System.IServiceProvider)">
            <summary>
             Instantiates a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ProtectionProviderProperty"/>.
            </summary>
            <param name="serviceProvider">The provider to use to locate services.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ProtectionProviderProperty.NeedsProtectionProvider">
            <summary>
             Gets a value indicating that the sectio needs a protection provider.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.AddExceptionHandlingBlockCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.AddExceptionPolicyCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.MaskedPasswordTextBox">
            <summary>
            This only provides masking of password but does <b>not</b> securely
            store it.  It is intended for use in preventing exposure of password
            information on the screen, but not internally.
            </summary>
            <summary>
            MaskedPasswordTextBox
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.MaskedPasswordTextBox.#ctor">
            <summary>
             Initializes a new instance of see <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.MaskedPasswordTextBox"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.MaskedPasswordTextBox.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.IValueChangeCoordinator)">
            <summary>
            Initializes a new instance of see <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.MaskedPasswordTextBox"/>
            with a value changed coordinator.
            </summary>
            <remarks>This is largely here to support testability</remarks>
            <param name="coordinator"></param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.MaskedPasswordTextBox.UnsecuredPasswordProperty">
            <summary>
             Represents the <b>unsecured</b> password.  This control is only intended
             to help mask password entry.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.MaskedPasswordTextBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.MaskedPasswordTextBox.UnsecuredPassword">
            <summary>
             The <b>unsecured</b> password value.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.IValueChangeCoordinator">
            <summary>
            Used to support testing of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.MaskedPasswordTextBox"/>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.IValueChangeCoordinator.Value">
            <summary>
            Gets or sets the coordinated value.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.AddLoggingBlockCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.AppSettingsViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ExceptionTypeAddCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand">
            <summary>
            Collects a type from the user and populates the newly created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> with type information.
            This will attempt to set the Name property and TypeName properties found in the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Properties"/> collection.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IAssemblyDiscoveryService,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.TypePickingCommandAttribute,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationElementType,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel)">
            <summary>
            Initializes a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand"/> for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NamedConfigurationElement"/> type and
            containing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/>.  If no property to set is explicitly defined, it will default to the
            TypeName property, following the pattern for setting <see cref="T:System.Type"/> information for many <see cref="T:System.Configuration.ConfigurationElement"/>s in Enterprise Library.
            </summary>
            <param name="commandAttribute">Attribute used to define data for the command.</param>
            <param name="configurationElementType">The configuration element type.  This is expected to be a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NamedConfigurationElement"/></param>
            <param name="elementCollectionModel">The containing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/></param>
            <param name="uiService">The UI service for displaying windows and messages to the user.</param>
            <param name="discoveryService">Service for discover assemblies</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand.InnerExecute(System.Object)">
            <summary>
            Adds a new child element to <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand.ElementCollectionModel"/>.
            </summary>
            <param name="parameter">Not used. </param>
            <remarks>
            Collects the type from the user with the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowser"/>.
            <br/>
            After collecting the type, inheritors of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand"/> have
            an opportunity to take action if the override <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand.AfterSelectType(System.Type)"/>.
            <br/>
            Then, a new element of the collected type is added through <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.AddNewCollectionElement(System.Type)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand.AfterSelectType(System.Type)">
            <summary>
            When overridden in a child class, provides the opportunity to determine
            if the element should be added to the collection.
            </summary>
            <param name="selectedType">The type selected by the user.</param>
            <returns>
            Should return <see langword="true"/> if an instance of <paramref name="selectedType"/> should be added to the collection.
            Otherwise, should return <see langword="false"/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand.SetProperties(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Type)">
            <summary>
            Sets properties on the newly minted <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <param name="createdElement">The element created.</param>
            <param name="selectedType">The element type created.</param>
            <remarks>
            By default, this sets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.NameProperty"/>'s value, if present.
            The command also updates the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Value"/> of the property specified by <see cref="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.TypePickingCommandAttribute.Property"/> to
            the assembly qualified name of the selected type.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand.GetSelectedType(System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.TypeSelectorIncludes,System.Type)">
            <summary>
            Retrieves and returns the selected type from the user.
            </summary>
            <param name="selectedType">The type to select in the type selection dialog.</param>
            <param name="baseType">The base type (class or interface) from which the constrained type should derive.</param>
            <param name="selectorIncludes">Indicates the types that can be browsed.</param>
            <param name="configurationType">The base type from which a type specified by the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationElementTypeAttribute"/>
            bound to the constrained type should derive, or <see langword="null"/> if no such constraint is necessary.
            </param>
            <returns>
            The selected <see cref="T:System.Type"/> or <see langword="null"/> if not type is selected.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand.CreatedElementType">
            <summary>
             Gets or sets the value of the element type to create during execute.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.Logging.EmailTraceListenerAuthenticationValidator">
            <summary>
             Validates the athentication and user-name, password combinations.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.Logging.EmailTraceListenerAuthenticationValidator.ValidateCore(System.Object,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult})">
            <summary>
            When implemented in a derived class, validates <paramref name="value"/> as part of the <paramref name="instance"/>.
            </summary>
            <param name="instance">The instance to validate.</param>
            <param name="value">Value to validate</param>
            <param name="results">The collection to wich any results that occur during the validation can be added.</param>		
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.Logging.EmailTraceListenerPasswordProperty">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.Logging.LogFormatterValidator">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.OpenEnvironmentConfigurationDeltaCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.Logging.SourceLevelsProperty">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ManageableConfigurationSourceViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.AuthorizationProviderDataViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.AuthorizationRuleDataViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.AuthorizationRuleProviderDataViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.CacheManagerSectionViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.CacheManagerBackingStoreProperty">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.SelectedSourceValidator">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionEditorContainedElementProperty">
            <summary>
            Represents a property contained within a collection editor and provides
            logic to return the appropriate logical contained element <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ILogicalPropertyContainerElement"/>.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionEditorContainedElementProperty.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates a new instnace of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionEditorContainedElementProperty"/>
            </summary>
            <param name="serviceProvider"></param>
            <param name="parent">The parent element view model.</param>
            <param name="declaringProperty">The declaring property descriptor.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.DefaultSectionDeleteCommandModel">
            <summary>
            Deletes a section after prompting the user to confirm deletion.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel">
            <summary>
            Default Delete Command implementation. <br/>
            Invokes the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Delete"/> method on execution.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel"/> class.
            </summary>
            <param name="elementViewModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance this command applies to.</param>
            <param name="uiService"><see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf"/> for invoking messages or other windows.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel.DefaultDeleteCommandModelInitialize(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel)">
            <summary>
            Initializes the command with expected items, items this depends on
            are usually provided by the dependency injection contianer.
            </summary>
            <param name="applicationModel"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel.InnerCanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel.InnerExecute(System.Object)">
            <summary>
            Deletes the element.
            </summary>
            <param name="parameter">Not used</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel.Title">
            <summary>
            Provides the title of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> command.  Typically this will appear as the title to a menu in the configuration tool.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel.Placement">
            <summary>
             The logical placement of the command.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel.KeyGesture">
            <summary>
            Defines the key gesture used for this command.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel.ApplicationModel">
            <summary>
            The application model injected.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.DefaultSectionDeleteCommandModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.DefaultSectionDeleteCommandModel"/>
            </summary>
            <param name="section">The section element to apply this command to.</param>
            <param name="uiService">The UI service used to display messages.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.DefaultSectionDeleteCommandModel.InnerExecute(System.Object)">
            <summary>
            Deletes the section after prompting the user for confirmation.
            </summary>
            <param name="parameter">Not used.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WizardCommand">
            <summary>
            Initiates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/>, usually from a user action.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WizardCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.WizardCommandAttribute,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel})">
            <summary>
            Initializes a new instance of the WizardCommand.
            </summary>
            <param name="attribute">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.WizardCommandAttribute"/> used to define this command.</param>
            <param name="uiService">The service to use when displaying dialogs.</param>
            <param name="resolver">The service to use to get instances of new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> based on <paramref name="attributedClassType"/></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WizardCommand.InnerCanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">Not used</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WizardCommand.InnerExecute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Not used.  May be null.</param>
            <remarks>
            Execution of wizard command creates a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WizardCommand"/> and attaches it
            to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WizardCommand.WizardType">
            <summary>
            The type of the Wizard.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ThreeVerticalVisualsLayout">
            <summary>
            Layout class used to display three <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instances vertically.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ThreeVerticalVisualsLayout.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ThreeVerticalVisualsLayout"/>.
            </summary>
            <param name="first">The first <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance.</param>
            <param name="second">The second <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance.</param>
            <param name="third">The third <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ViewModel"/> instance.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.RequirePermissionProperty">
            <summary>
            A custom property model that allows a <see cref="T:System.Configuration.ConfigurationSection"/>'s <see cref="P:System.Configuration.SectionInformation.RequirePermission"/> property to be modified.
            </summary>
            <remarks>
            <para>Becuase this value is not stored as part of the <see cref="T:System.Configuration.ConfigurationSection"/>, the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> is responsible for storing the value of this property when it saved the <see cref="T:System.Configuration.ConfigurationSection"/> instance.<br/></para>
            <para>This property can be overridden using a Configuration Environment and implements <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IEnvironmentalOverridesProperty"/>.<br/></para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.RequirePermissionProperty.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.RequirePermissionProperty"/>.
            </summary>
            <param name="serviceProvider">A <see cref="T:System.IServiceProvider"/> instance that is used to obtain service instances.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.RequirePermissionProperty.ContainingElementXPath">
            <summary>
            Gets the XPath to the XML element that declares the attribute for this configuration property.
            </summary>
            <value>
            The XPath to the XML element that declares the attribute for this configuration property.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.RequirePermissionProperty.SupportsOverride">
            <summary>
            Gets whether this property allows itself to be overwritten.<br/>
            </summary>
            <value>
            Always returns <see langword="true"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.RequirePermissionProperty.PropertyAttributeName">
            <summary>
            Gets the name of the attribute which is used to serialize this configuration property in XML.
            </summary>
            <value>
            Always returns 'requirePermission'.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.RequirePermissionProperty.ConfigurationSectionName">
            <summary>
            Gets the name of the configuration section that contains the property.
            </summary>
            <value>
            The name of the configuration section that contains the property.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.RequirePermissionProperty.ContainingSectionXPath">
            <summary>
            Gets the XPath to the XML element that declares the containing configuration section.
            </summary>
            <value>
            The XPath to the XML element that declares the containing configuration section.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.RequirePermissionProperty.DeltaConfigurationStorageConverter">
            <summary>
            Gets the <see cref="T:System.ComponentModel.TypeConverter"/> that converts the internal overridden value to a string that can be stored in the delta configuration file.<br/>
            </summary>
            <value>
            The <see cref="T:System.ComponentModel.TypeConverter"/> that converts the internal overridden value to a string that can be stored in the delta configuration file.<br/>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameParserHelper">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameParserHelper"/> attempts to parse a string version of a type name 
            to get the short name of the type.
            </summary>
            <remarks>
            This tries to avoid using <see cref="M:System.Type.GetType"/> for calculating this in case
            the type is not available at design-timel.<br/>
            If <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameParserHelper"/> cannot parse the type name, it will attempt to load
            the type using <see cref="M:System.Type.GetType"/>. </remarks>
            
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameParserHelper.ParseTypeName(System.String)">
            <summary>
             Parses the string version of the type name to get the short type name.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream">
            <summary>
            Class that tracks the current input state of the parser.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameInfo">
            <summary>
            Class containing information about a type name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameInfo.Name">
            <summary>
            The base name of the class
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameInfo.Namespace">
            <summary>
            Namespace if any
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameInfo.AssemblyName">
            <summary>
            Assembly name, if any
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult">
            <summary>
            Object containing the result of attempting to match a PEG rule.
            This object is the return type for all parsing methods.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult.Matched">
            <summary>
            Did the rule match?
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult.MatchedString">
            <summary>
            The characters that were matched (if any)
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult.ResultData">
            <summary>
            Any extra information provided by the parsing expression
            (only set if the parse matched). The nature
            of the data varies depending on the parsing expression.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult">
            <summary>
            Helper methods to make it easier to pull the data
            out of the result of a sequence expression.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
                            </param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
                            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. 
                            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.Contains(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.CopyTo(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.
                            </param><param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.
                            </param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.
                            </exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.
                            </exception><exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.
                                -or-
                            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
                                -or-
                                The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
                                -or-
                                Type <paramref name="T"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.
                            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.Remove(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
                            </param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
                            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.IndexOf(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.Insert(System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.
                            </param><param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.
                            </param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
                            </exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
                            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.
                            </param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
                            </exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
                            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.
                            </param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
                            </exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
                            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder">
            <summary>
            A simple implementing of the rules for a Parsing Expression Grammar
            parsing algorithm. This supplies basic methods to do the primitives
            of the PEG, and combinators to create larger rules.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.Any(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream)">
            <summary>
            The PEG "dot" operator that matches and consumes one character.
            </summary>
            <param name="input">Input to the parser.</param>
            <returns>The parse result.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.Match(System.Char)">
            <summary>
            Parse function generator that returns a method to match a single,
            specific character.
            </summary>
            <param name="charToMatch">Character to match.</param>
            <returns>The generated parsing function.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.Match(System.Func{System.Char,System.Boolean})">
            <summary>
            Parse function generator that checks if the current character matches
            the predicate supplied.
            </summary>
            <param name="predicate">Predicate used to determine if the character is in
            the given range.</param>
            <returns>The generated parsing function.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.ZeroOrMore(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult})">
            <summary>
            The "*" operator - match zero or more of the inner parse expressions.
            </summary>
            <param name="inner">Parse method to repeat matching.</param>
            <returns>The generated parsing function.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.Sequence(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult}[])">
            <summary>
            Parsing combinator that matches all of the given expressions in
            order, or matches none of them.
            </summary>
            <param name="expressions">Expressions that form the sequence to match.</param>
            <returns>The combined sequence.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.FirstOf(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult}[])">
            <summary>
            Parsing combinator that implements the PEG prioritized choice operator. Basically,
            try each of the expressions in order, and match if any of them match, stopping on the
            first match.
            </summary>
            <param name="expressions">Expressions that form the set of alternatives.</param>
            <returns>The combined parsing method.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.Not(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult})">
            <summary>
            Parsing combinator implementing the "not" predicate. This wraps
            the given <paramref name="expression"/> parsing method with a check
            to see if it matched. If it matched, then the Not fails, and vice
            versa. The result consumes no input.
            </summary>
            <param name="expression">The parse method to wrap.</param>
            <returns>The generated parsing function.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.EOF(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream)">
            <summary>
            Parsing expression that matches End of input.
            </summary>
            <param name="input">Parser input.</param>
            <returns>Parse result</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.WithAction(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult},System.Action{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult})">
            <summary>
            Combinator that executes an action if the given expression matched.
            </summary>
            <param name="expression">Parsing expression to match.</param>
            <param name="onMatched">Action to execute if <paramref name="expression"/>
            matched. Input is the matched text from <paramref name="expression"/>.</param>
            <returns>The result of <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.WithAction(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult},System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult})">
            <summary>
            Combinator that executes an action if the given expression matched.
            </summary>
            <param name="expression">parsing expression to match.</param>
            <param name="onMatched">Method to execute if a match happens. This method returns
            the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult"/> that will be returned from the combined expression.</param>
            <returns>The result of <paramref name="onMatched"/> if expression matched, else
            whatever <paramref name="expression"/> returned.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.Commands.HiddenCommand">
            <summary>
            A command that is not <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.Browsable"/> in the deisnger and can be used
            to replace a visible command.
            </summary>
            <remarks>
            This command can be used to hide an existing command by replacing it with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute"/>
            and setting the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute.Replace"/> value.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.Commands.HiddenCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.Commands.HiddenCommand"/>.
            </summary>
            <param name="attribute">The command attribute providing context for this command.</param>
            <param name="uiService">The user-interface service used to display messages and windows to the user.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationManageabilityProviderAttributeRetriever">
            <summary>
            This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            Encapsulates the logic to retrieve the attributes for registered manageability providers from assembly dll files.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderAttribute"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderAttribute"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationManageabilityProviderAttributeRetriever.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyLocator)">
            <summary>
            This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationManageabilityProviderAttributeRetriever"/> class that
            will retrieve attributes from the assemblies located in the running application's base directory.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationManageabilityProviderAttributeRetriever.LoadRegisteredManageabilityProviders(System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderAttribute},System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderAttribute})">
            <devdoc>
            Loads the assemblies specified by the assembly names and retrieves the manageability provider attributes from them.
            The attributes are stored for later use.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationManageabilityProviderAttributeRetriever.LoadAttributes``1(System.Reflection.Assembly,System.Collections.Generic.ICollection{``0})">
            <devdoc>
            Retrieves the attributes of type <typeparamref name="T"/> from the given assembly.
            </devdoc>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationManageabilityProviderAttributeRetriever.SectionManageabilityProviderAttributes">
            <summary>
            This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            Gets the retrieved <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderAttribute"/> instances.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationManageabilityProviderAttributeRetriever.ElementManageabilityProviderAttributes">
            <summary>
            This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            Gets the retrieved <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderAttribute"/> instances.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceSectionViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.HashAlgorithmProviderAddCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.CryptographySectionViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.CustomTraceListenerDataViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.DataSectionViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ExceptionHandlerDataViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ExceptionHandlingSectionViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ExceptionPolicyDataViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ExceptionTypeDataViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ExportAdmTemplateCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ExportAdmTemplateCommand.InnerExecute(System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.KeyedHashAlgorithmProviderAddCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.KeyedHashAlgorithmProviderDataViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.LoggingSectionViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.Logging.LogPriorityMinMaxValidator">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.OverriddenTraceListenerCollectionEditor">
            <summary>
            Interaction logic for OverriddenTraceListenerCollectionEditor.xaml
            </summary>
            <summary>
            OverriddenTraceListenerCollectionEditor
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.OverriddenTraceListenerCollectionEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.SaveEnvironmentConfigurationDeltaCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.SaveMergedEnvironmentConfigurationCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.SecuritySectionViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.SelectValidatedTypeReferenceMembersCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.SymmetricAlgorithmProviderAddCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.SymmetricAlgorithmProviderDataViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.SystemDiagnosticsTraceListenerDataViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.TraceListenerElementCollectionViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/> is a model for a <see cref="T:System.Configuration.ConfigurationElementCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/>
            </summary>
            <param name="parentElementModel">The parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.</param>
            <param name="declaringProperty">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> of the <see cref="T:System.Configuration.ConfigurationElement"/> property containing this collection.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.ElementCollectionViewModelServiceDependencies(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.DiscoverDerivedConfigurationTypesService)">
            <summary>
            Provides dependencies for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/> not provided via the constructor.
            </summary>
            <param name="configurationTypesService">The service for disovering derived configuration types.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.GetAllCommands">
            <summary>
            Creates or collections all the commands related to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.GetLocalPathPart">
            <summary>
            Gets a string that can be appended to the parent's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> to compose a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> used to uniquely identify this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>. <br/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.IsFirst(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel)">
            <summary>
            Determines if a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel"/> is the first element in the collection.
            </summary>
            <param name="element"></param>
            <returns>
            Returns <see langword="true"/> if the <paramref name="element"/> is the first element in the collection.
            Otherwise, returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.IsLast(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel)">
            <summary>
            Determines if a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel"/> is the last element in the collection.
            </summary>
            <param name="element"></param>
            <returns>
            Returns <see langword="true"/> if the <paramref name="element"/> is the last element in the collection.
            Otherwise, returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.GetAllChildElements">
            <summary>
            Gets all the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances that are directly contained in this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.AddNewCollectionElement(System.Type)">
            <summary>
            Adds a new item of type <paramref name="elementType"/> to the collection.
            </summary>
            <param name="elementType">The <see cref="T:System.Type"/> of element to add.  It should be of, or derive from, the type indicated in <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.CollectionElementType"/>.</param>
            <returns>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> for the added type.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.Delete(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel)">
            <summary>
            Deletes an element from the collection.
            </summary>
            <param name="element">The element to delete.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.FindUniqueNewName(System.String)">
            <summary>
            Calculates a unique name based on the items in the collection.
            </summary>
            <param name="baseName">The base name to use in calculating the inique name.</param>
            <returns>A name that no other element in the collection matches.</returns>
            <remarks>
            The unique name is calculated by appending increasing integers values greater than 1 until a unique name is discovered.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.Validate">
            <summary>
             Validates this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> and its <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Properties"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.MoveUp(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel)">
            <summary>
            Moves a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel"/> in this collection one position earlier in the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ChildElements"/> sequence.
            </summary>
            <param name="elementViewModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel"/> in this collection to move.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.MoveDown(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel)">
            <summary>
            Moves a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel"/> in this collection one position later in the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ChildElements"/> sequence.
            </summary>
            <param name="elementViewModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel"/> in this collection to move.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.CollectionElementType">
            <summary>
            The configuration element <see cref="T:System.Type"/>s contained by this collection.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.IsPolymorphicCollection">
            <summary>
            Gets or sets a value indicating if this collection contains polymorphic items.
            </summary>
            <value>
            Returns <see langword="true"/> if the collection maintains polymorphic items.
            Otherwise, returns <see langword="false"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.PolymorphicCollectionElementTypes">
            <summary>
            Returns the set of polymorphic collection element types this collection can hold.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel.IsElementPathReliableXPath">
            <summary>
            Gets a value indicating that this Element's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> is reliable 
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.TraceListenerReferenceViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.TraceListenerReferenceViewModel.NameProperty">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ValidatedMemberReferenceViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ValidatedTypeReferenceViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ValidationRulesetDataViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ValidationSectionViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ValidationTypeReferenceAddCommand">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ValidatorDataViewModel">
            <summary>
            This class supports block-specific configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddSatelliteProviderCommand">
            <summary>
            Command Model implementation that will add a provider to the designer and ensures that its block dependency is available.<br/>
            This Command Model can be used by annotating a providers configuration element with the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.AddSateliteProviderCommandAttribute"/> attribute.<br/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddSatelliteProviderCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.AddSateliteProviderCommandAttribute,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.MenuCommandService,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationElementType,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddSatelliteProviderCommand"/> class.
            </summary>
            <remarks>
            This class is intended to be initialized by the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateElementCollectionAddCommands(System.Collections.Generic.IEnumerable{System.Attribute},Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel)"/>.
            </remarks>
            <param name="commandAttribute">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.AddSateliteProviderCommandAttribute"/> that specifes metadata for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddSatelliteProviderCommand"/> to be initialized with.</param>
            <param name="collection"></param>
            <param name="commandService"></param>
            <param name="configurationElementType"></param>
            <param name="lookup"></param>
            <param name="uiService"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddSatelliteProviderCommand.InnerExecute(System.Object)">
            <summary>
            The method invoked during execution.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveDownCommand">
            <summary>
             The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveDownCommand"/> moves an element downward in its containing collection.
            </summary>
            <remarks>
             This command is offered by a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel"/> as a bindable command to invoke <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel.MoveDown"/></remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveDownCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveDownCommand"/>.
            </summary>
            <param name="collection">The collection containing the <paramref name="element"/> to move.</param>
            <param name="element">The element to move.</param>
            <param name="uiService">The user-interface service used to display messages and windows to the user.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveDownCommand.InnerExecute(System.Object)">
            <summary>
            Moves the element downard in the collection.
            </summary>
            <param name="parameter">Not used.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveDownCommand.InnerCanExecute(System.Object)">
            <summary>
            Determines if the command can execute.
            </summary>
            <returns>
            Returns <see langword="true"/> if the element is not the last one in the collection.  
            Otherwise, returns <see langword="false"/>.
            </returns>
            <param name="parameter">Not used</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveDownCommand.Title">
            <summary>
            Provides the title of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> command.  Typically this will appear as the title to a menu in the configuration tool.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveDownCommand.KeyGesture">
            <summary>
            Defines the key gesture used for this command (Ctrl-Down).
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultElementCollectionAddCommand">
             <summary>
             Default Command Model implementation for the add command on <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/> instances.
             </summary>
             <remarks>
             This is the default add command created for any <see cref="T:System.Configuration.ConfigurationElementCollection"/>.  
             <br/>
             For homogeneous collections where only one type can ever be added, this command when invoked via <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.InnerExecute(System.Object)"/>, 
             will add a new instance of that type to the collection.
             <br/>
             For <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.PolymorphicConfigurationElementCollection`1"/>, this command will contain a collection
             of the child <see cref="T:System.Configuration.ConfigurationElement"/> add commands, generally one for each type that can be added.
             <br/>
             To change the commands for a configuration element, <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute"/>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultElementCollectionAddCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
             Initializes an instance of DefaultElementCollectionAddCommand.  
             </summary>
            <param name="collection">The collection that will be affected by the add command.</param>
            <param name="uiService"><see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf"/> for displaying messages.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultElementCollectionAddCommand.InnerCanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultElementCollectionAddCommand.Title">
            <summary>
            Provides the title of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> command.  Typically this will appear as the title to a menu in the configuration tool.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultElementCollectionAddCommand.ChildCommands">
            <summary>
             Child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> commands to this command.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultElementCollectionAddCommand.Placement">
            <summary>
             The logical placement of the command.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveUpCommand">
            <summary>
             The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveUpCommand"/> moves an element upward in its containing collection.
            </summary>
            <remarks>
             This command is offered by a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel"/> as a bindable command to invoke <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel.MoveDown"/></remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveUpCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CollectionElementViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveUpCommand"/>.
            </summary>
            <param name="collection">The collection containing the <paramref name="element"/> to move.</param>
            <param name="element">The element to move.</param>
            <param name="uiService">The user-interface service used to display messages and windows to the user.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveUpCommand.InnerExecute(System.Object)">
            <summary>
            Moves the element upwards in the collection.
            </summary>
            <param name="parameter">
            Not used
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveUpCommand.InnerCanExecute(System.Object)">
            <summary>
            Determines if the element can be moved up.
            </summary>
            <returns>
            Returns <see langword="true"/> if this element is not the first one in the collection.
            Otherwise, returns <see langword="false"/>.
            </returns>
            <param name="parameter">Not used</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveUpCommand.Title">
            <summary>
            Provides the title of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> command.  Typically this will appear as the title to a menu in the configuration tool.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.MoveUpCommand.KeyGesture">
            <summary>
            Defines the key gesture used for this command (Ctrl-Up).
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationProperty">
            <summary>
            A property model that allows a <see cref="T:System.Configuration.ConfigurationElement"/>'s to be set directly (bypassing the CLR property).
            </summary>
            <remarks>
            This property model can be used to expose a <see cref="T:System.Configuration.ConfigurationElement"/>'s property as a settable property, even though the CLR property only implements a get-acessor.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationProperty.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
             <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationProperty"/>
             </summary>
            <param name="serviceProvider">Service provider used to locate services for the configuration system.</param>
            <param name="parent">The parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> owning the property.</param>
            <param name="declaringProperty">The description of the property.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationProperty.GetValue">
            <summary>
            Gets the underlying, stored value directly from the <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <returns>
            The underlying, stored value directly from the <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationProperty.SetValue(System.Object)">
            <summary>
            Sets the underlying, stored value directly to the <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <remarks>
            Once the value is stored, the property is <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Validate"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> represents a single <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> that is
            presented in the design-time.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSourceDependency,Microsoft.Practices.Unity.IUnityContainer,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.SaveOperation)">
            <summary>
            Initializes a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <param name="lookup">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup"/> service used for locating elements.</param>
            <param name="viewModelDependency">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSourceDependency"/> for notifying others of changes in this configuration source.</param>
            <param name="builder">The container for building new objects.</param>
            <param name="uiService">The user-interface service for presenting dialogs and windows to the user.</param>
            <param name="saveOperation">Save operation integration with a host environment.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel.Load(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource)">
            <summary>
            Loads a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource"/>.
            </summary>
            <param name="configSource">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource"/> to load this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> from.</param>
            <returns>
            Returns <see langword="true"/> if the load was successful.
            Returns <see langword="false"/>, if any exceptions occurredduring the load.
            </returns>
            <remarks>
            Any exceptions that occur during the load are logged to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter"/> and also
            displayed to the user via the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel.Save(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource)">
            <summary>
            Saves the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource"/>.
            </summary>
            <param name="configurationSource">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource"/> to save to.</param>
            <returns>Returns <see langword="true"/> if the save was successful.
            Returns <see langword="false"/> if errors occurredduring the save.
            </returns>
            <remarks>
            Errors that occur during save will be displayed logged using <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter"/> and displayed 
            to the user through the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf"/> service.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel.New">
            <summary>
            Clears the existing configuration source and readies it to begin a new configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel.HasSection(System.String)">
            <summary>
            Determines if this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> has a section by a given name.
            </summary>
            <param name="sectionName">The section name to seek.</param>
            <returns>
            Returns <see langword="true"/> if a section with a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.SectionName"/> matching <paramref name="sectionName"/> exists.
            Otherwise, returns <see langword="false"/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel.AddSection(System.String,System.Configuration.ConfigurationSection)">
            <summary>
            Adds a <see cref="T:System.Configuration.ConfigurationSection"/> to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <param name="sectionName">The section name to use when adding.</param>
            <param name="section">The <see cref="T:System.Configuration.ConfigurationSection"/> to add.</param>
            <returns>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> for the added section.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel.RemoveSection(System.String)">
            <summary>
            Removes a section with the given name.
            </summary>
            <param name="sectionName">The name of the section to remove.</param>
            <remarks>
            If the section does not exist, then it does nothing.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel.IsValidForSave">
            <summary>
            Returns a value indicating the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> is valid for saving.
            </summary>
            <returns>
            Returns <see langword="true"/> when the sections and elements have no validation results that are <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult.IsError"/>.
            Otherwise, returns <see langword="false"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel.Sections">
            <summary>
            Gets the collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> elements contained by this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomAttributesPropertyExtender">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomAttributesPropertyExtender"/> provides extended properties for configuration elements with attributes
            provided through the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ICustomProviderData"/> interface.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomAttributesPropertyExtender.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomAttributesPropertyExtender"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomAttributesPropertyExtender.CanExtend(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Gets a value that indicates this extender provides <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>
            elements to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <param name="subject">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> to determine properties for.</param>
            <returns>
            Should return <see langword="true"/> if this extender provides properties for the <paramref name="subject"/>.
            Otherwise, returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomAttributesPropertyExtender.GetExtendedProperties(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Returns the set of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> elements to add to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <param name="subject">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> to provide properties for.</param>
            <returns>
            Returns the set of additional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> items to add to the <paramref name="subject"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomAttributesPropertyExtender.ConfigurationType">
            <summary>
            Gets the type of the configuration element this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> was created for. <br/>
            </summary>
            <remarks>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>'s ConfigurationType is often used to identify or attach behavior to <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CustomAttributesPropertyExtender.Path">
            <summary>
            Gets a string that can be used to uniquely identify this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>. <br/>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference"/> represents a reference to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.<br/>
            The referred element will resolve once it becomes available in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup"/>. <br/>
            Once the referred element is resolved, a <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.ElementFound"/> event is triggered. <br/>
            An instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference"/> provides basic facilities to keep track of changes to the referred element.<br/>
            </summary>
            <remarks>
            Instances of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference"/> can be created by calling the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.CreateReference(System.String)"/> or <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.CreateReference(System.String,System.Type,System.String)"/> method.<br/>
            </remarks>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.CreateReference(System.String)"/>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.CreateReference(System.String,System.Type,System.String)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference"/>.
            </summary>
            <param name="element">The elment to monitor.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.OnElementFound(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.ElementFound"/> event.
            </summary>
            <param name="element">The discovered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.OnElementDeleted">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.ElementDeleted"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.Dispose(System.Boolean)">
            <summary>
            Indicates the object is being disposed.
            </summary>
            <param name="disposing">Indicates <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.Dispose(System.Boolean)"/> was invoked through an explicit call to <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.Dispose"/> instead of a finalizer call.</param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.Element">
            <summary>
            Gets the referred <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
            <value>
            If the referred <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance is available, returns the referred element.<br/>
            Otherwise returns <see langword="null"/>.
            </value>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.ElementFound">
            <summary>
            Occurs when the referenced element was resolved. <br/>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.ElementDeleted">
            <summary>
            Occurs when the referenced element is deleted. <br/>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.NameChanged">
            <summary>
            Occurs when the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Name"/> of the referenced element changed. <br/>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.PathChanged">
            <summary>
            Occurs when the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> of the referenced element changed. <br/>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PropertyValueChangedEventHandler`1">
            <summary>
            Defines a property changed delegate over a specific type.
            </summary>
            <typeparam name="T">The property type for the property changed handler.</typeparam>
            <param name="sender">The invoker of the property changed value.</param>
            <param name="e">The property value changed event arguments.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PropertyValueChangedEventArgs`1">
            <summary>
            The event arguments for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PropertyValueChangedEventHandler`1"/>.
            </summary>
            <typeparam name="T">The type for the property value.</typeparam>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PropertyValueChangedEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PropertyValueChangedEventArgs`1"/>.
            </summary>
            <param name="value">The propety value.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.PropertyValueChangedEventArgs`1.Value">
            <summary>
            Gets the value of the property changed.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HierarchicalLayout">
            <summary>
            Layout class that can be used to visualize an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> and its children in a hierarchical layout.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HierarchicalLayout.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel},System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.HierarchicalLayout"/>.
            </summary>
            <param name="current">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance that should be displayed on the left side.</param>
            <param name="children">The set of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances that should be displayed as <paramref name="current"/>'s children.</param>
            <param name="columnIndex">The 0-based column index that should be used to display and resize the <paramref name="current"/> element. </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext">
            <summary>
            An initialization context used for those elements and properties during explicit initialization calls <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext)"/>
            and <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext)"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext.#ctor">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext"/>
             that was not loaded from source.
             <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext.WasLoadedFromSource"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource)">
            <summary>
             Initializes a enw instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext"/>
             with the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource"/> source specified.
            </summary>
            <param name="loadSource"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext.WasLoadedFromSource">
            <summary>
             Indicates if the initialize context was loaded from a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource"/>
             or not.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext.LoadSource">
            <summary>
             Retrieves the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.MetadataCollection">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.MetadataCollection"/> manages a base set of attributes and their overridden values.
            </summary>
            <remarks>
            This is used to manage <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> and <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> <see cref="T:System.Attribute"/> values with overridden values 
            provided during the construction of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> and <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.MetadataCollection.#ctor(System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.MetadataCollection"/>.
            </summary>
            <param name="attributes">The original, non-overridden, attribute set.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.MetadataCollection.Override(System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Applies a set of overridden <see cref="T:System.Attribute"/> values to the base set of attributes.
            </summary>
            <param name="attributes">The set of <see cref="T:System.Attribute"/>s to apply.</param>
            <remarks>
            The provided attributes are compared, by their type, to the internal set of attributes. And are updated:<br/>
            <list>
            <item>
            If there is no attribute of a particular type in the internal set, that attribute is added to the set.
            </item>
            <item>
            If there is an attribute of a particular type in the internal set already and the attribute does not allow
            multiple instances, then the internal attribute is replaced.
            </item>
            <item>
            If there is an attribute of a particular type in the internal set already and the attribute does allow
            multiple instances, then the attribute is added to the internal set of attributes.
            </item>
            </list>
            <br/>
            If multiple attributes of the same type are provided in <paramref name="attributes"/> and the attribute
            is does not allow multiple, only the first attribute will be used in replacing the existing attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.MetadataCollection.CombineAttributes(System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Creates a new set of <see cref="T:System.Attribute"/> instances using <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.MetadataCollection"/> to
            combine a base set and <see cref="T:System.Attribute"/> instances and an override set of <see cref="T:System.Attribute"/> instances.
            </summary>
            <param name="baseSource">The base set of attributes that may be overridden.</param>
            <param name="overriddenSource">The overrideent set of attributes.</param>
            <returns>The resultant set of <see cref="T:System.Attribute"/> instances with overridden values applied.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.MetadataCollection.Attributes">
            <summary>
             Gets the set of attributes.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ToggleExpandedCommand">
            <summary>
            A <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ToggleExpandedCommand.sectionViewModel"/> command to toggle the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.IsExpanded"/> state.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ToggleExpandedCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/>.
            </summary>
            <param name="sectionViewModel">The section view model to act upon.</param>
            <param name="uiService">The user-interface service.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ToggleExpandedCommand.InnerExecute(System.Object)">
            <summary>
            Toggles the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.IsExpanded"/> value.
            </summary>
            <param name="parameter">Not used.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ToggleExpandedCommand.InnerCanExecute(System.Object)">
            <summary>
            Protected method for determinging if command can execute.
            </summary>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ToggleExpandedCommand.Title">
            <summary>
            Provides the title of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> command.  Typically this will appear as the title to a menu in the configuration tool.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ToggleExpandedCommand.KeyGesture">
            <summary>
            Defines the key gesture used for this command.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AnnotationService">
            <summary>
            Service class that allows metadata to be added to classes by means of a body class.
            </summary>
            <remarks>
            In order to get an instance of this class, declare it as a constructor argument on the consuming component or use the <see cref="T:Microsoft.Practices.Unity.IUnityContainer"/> to obtain an instance from code.
            </remarks>
            <remarks>
            A body-class (or substitute type) is a class that declares property with matching names and allows custom attributes to be added without modifying the real configuration class.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AnnotationService.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyLocator)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AnnotationService"/>.
            </summary>
            <param name="assemblyLocator">An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyLocator"/> used to discover bodyclasses with an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.RegisterAsMetadataTypeAttribute"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AnnotationService.DiscoverSubstituteTypesFromAssemblies">
            <summary>
            Discovers body classes decorated with the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.RegisterAsMetadataTypeAttribute"/> attribute and registers them with.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AnnotationService.RegisterSubstituteTypeForMetadata(System.Type,System.Type)">
            <summary>
            Registers a body-class for a target <paramref name="type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> that should be annotated by body-class <paramref name="metadataType"/>.</param>
            <param name="metadataType">The body-class that declares custom attributes for <paramref name="type"/>. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AnnotationService.GetTypeDescriptor(System.Type,System.Object)">
            <summary>
            Gets a custom type descriptor for the given type and object.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.ICustomTypeDescriptor"/> that can provide metadata for the type.
            </returns>
            <param name="objectType">The type of object for which to retrieve the type descriptor.</param><param name="instance">An instance of the type. Can be null if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AnnotationService.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AnnotationService"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AnnotationService.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AnnotationService"/>.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyAttributeSectionLocator">
            <summary>
            This class supports the configuration design-time and is not
            intended to be used directly from your code.
            </summary>
            <remarks>
            Use the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSectionLocator"/> to obtain a list of configuration section names available in the configuration designer.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSectionLocator"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSectionLocator">
            <summary>
            Service class used to get the names of configuration sections available in the designer.
            </summary>
            <remarks>
            In order to get an instance of this class, declare it as a constructor argument on the consuming component or use the <see cref="T:Microsoft.Practices.Unity.IUnityContainer"/> to obtain an instance from code.
            </remarks>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.HandlesSectionAttribute"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSectionLocator.ConfigurationSectionNames">
            <summary>
            Gets the list of known section names.
            </summary>
            <remarks>
             If the configuration file contains a section with a known section name, the configuration designer will attempt to open it.
            </remarks>
            <value>
            The list of known section names.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSectionLocator.ClearableConfigurationSectionNames">
            <summary>
            Gets the list of section names that are written to by the configuration designer when saving and therefore should be removed from the target configuration file, prior to saving.
            </summary>
            <value>
            The list of section names that are written to by the configuration designer when saving and therefore should be removed from the target configuration file, prior to saving.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyAttributeSectionLocator.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyLocator)">
            <summary>
            This constructor supports the configuration design-time and is not
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyAttributeSectionLocator.ConfigurationSectionNames">
            <summary>
            This property supports the configuration design-time and is not
            intended to be used directly from your code.
            </summary>
            <remarks>
            Use the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSectionLocator"/> class instead.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyAttributeSectionLocator.ClearableConfigurationSectionNames">
            <summary>
            This property supports the configuration design-time and is not
            intended to be used directly from your code.
            </summary>
            <remarks>
            Use the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSectionLocator"/> class instead.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyLocator">
            <summary>
            Service class used to get the assemblies that are used as part of the configuration designtime.
            </summary>
            <remarks>
            In order to get an instance of this class, declare it as a constructor argument on the consuming component or use the <see cref="T:Microsoft.Practices.Unity.IUnityContainer"/> to obtain an instance from code.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyLocator.#ctor">
            <summary>
            This constructor supports the configuration design-time and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyLocator.#ctor(System.String)">
            <summary>
            This constructor supports the configuration design-time and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyLocator.Assemblies">
            <summary>
            Gets the list of assemblies that are used as part of the configuration designtime.
            </summary>
            <value>
            The list of assemblies that are used as part of the configuration designtime.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.BinPathProbingAssemblyLocator">
            <summary>
            This class supports the configuration design-time and is not
            intended to be used directly from your code.
            </summary>
            <remarks>
            Use the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyLocator"/> to obtain a list of assemblies that are used by the designer.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyLocator"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.BinPathProbingAssemblyLocator.#ctor">
            <summary>
            This constructor supports the configuration design-time and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.MenuCommandService">
            <summary>
            Service class used to get top-level menu <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> instances.
            </summary>
            <remarks>
            In order to get an instance of this class, declare it as a constructor argument on the consuming component or use the <see cref="T:Microsoft.Practices.Unity.IUnityContainer"/> to obtain an instance from code.
            </remarks>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.HandlesSectionAttribute"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.MenuCommandService.#ctor(Microsoft.Practices.Unity.IUnityContainer,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyLocator,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSourceDependency)">
            <summary>
            This constructor supports the configuration design-time and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.MenuCommandService.GetCommands(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandPlacement)">
            <summary>
            Returns a list of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> instances that belong to the specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandPlacement"/>.
            </summary>
            <param name="placement">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandPlacement"/> for which commands should be returned.</param>
            <returns>
            A list of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> instances that belong to the specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandPlacement"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.MenuCommandService.ExecuteAddBlockForSection(System.String)">
            <summary>
            Adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> instance to the designer for the specified section name.
            </summary>
            <param name="sectionName">The configuration section name that should be added to the designer.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSourceDependency">
            <summary>
            Service class used to receive an event if the designers content is cleared, e.g. if the user opens a new configuration file.
            </summary>
            <remarks>
            In order to get an instance of this class, declare it as a constructor argument on the consuming component or use the <see cref="T:Microsoft.Practices.Unity.IUnityContainer"/> to obtain an instance from code.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSourceDependency.OnCleared">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSourceDependency.Cleared"/> event.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSourceDependency.Cleared">
            <summary>
            Occurs when the designers content is cleared, e.g. if the user opens a new configuration file.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.DiscoverDerivedConfigurationTypesService">
            <summary>
            Service class used to find configuration classes that are used to configure Enterprise Library providers.
            </summary>
            <remarks>
            In order to get an instance of this class, declare it as a constructor argument on the consuming component or use the <see cref="T:Microsoft.Practices.Unity.IUnityContainer"/> to obtain an instance from code.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.DiscoverDerivedConfigurationTypesService.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyLocator)">
            <summary>
            This constructor supports the configuration design-time and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.DiscoverDerivedConfigurationTypesService.FindAvailableConfigurationElementTypes(System.Type)">
            <summary>
            Finds all the configuration classes that are used to configure a specific Enterprise Library provider base-type, such as <see cref="T:Microsoft.Practices.EnterpriseLibrary.Validation.Validator"/>.
            </summary>
            <param name="baseType">The Enterprise Library provider base-type, such as <see cref="T:Microsoft.Practices.EnterpriseLibrary.Validation.Validator"/>.</param>
            <returns>A list of <see cref="T:System.Configuration.ConfigurationElement"/> types that can be used to configure providers derived of <paramref name="baseType"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup">
            <summary>
            Service class used to access <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances loaded in the designer.
            </summary>
            <remarks>
            In order to get an instance of this class, declare it as a constructor argument on the consuming component or use the <see cref="T:Microsoft.Practices.Unity.IUnityContainer"/> to obtain an instance from code.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ConfigurationSourceDependency)">
            <summary>
            This constructor supports the configuration design-time and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.FindInstancesOfConfigurationType(System.Type,System.Type)">
            <summary>
            Returns all <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances that where created for configuration elements of type <paramref name="configurationType"/>, contained inside a configuration element of type <paramref name="scope"/>.
            </summary>
            <param name="scope">The configuration type that contains the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> returned.</param>
            <param name="configurationType">The configuration type of which <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances should be returned.</param>
            <returns>
            All <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances that where created for configuration elements of type <paramref name="configurationType"/>, contained inside a configuration element of type <paramref name="scope"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.FindInstancesOfConfigurationType(System.Type)">
            <summary>
            Returns all <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances that where created for configuration elements of type <paramref name="configurationType"/>.
            </summary>
            <param name="configurationType">The configuration type of which <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances should be returned.</param>
            <returns>
            All <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances that where created for configuration elements of type <paramref name="configurationType"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.AddCustomElement(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Adds a custom element to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup"/>.
            </summary>
            <remarks>
            Custom elements are elements that are created by user code.
            </remarks>
            <param name="element">
            The element that should be added to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup"/>.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.AddSection(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel)">
            <summary>
            Adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> instance to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup"/>.
            </summary>
            <param name="sectionModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> that should be added.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.RemoveSection(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel)">
            <summary>
            Removes a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> instance from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup"/>.
            </summary>
            <param name="sectionViewModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> that should be removed.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.GetElementById(System.Guid)">
            <summary>
            Returns the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> that matched a given <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ElementId"/>.
            </summary>
            <param name="elementId">The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ElementId"/> for which an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> should be returned.</param>
            <returns>
            If an element with <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ElementId"/> is found, returns the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>; Otherwise <see langword="null"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.FindExtendedPropertyProviders">
            <summary>
            Returns an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IElementChangeScope"/> that can be used to monitor <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IElementExtendedPropertyProvider"/> instances.
            </summary>
            <returns>
            An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IElementChangeScope"/> that can be used to monitor <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IElementExtendedPropertyProvider"/> instances.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.CreateReference(System.String,System.Type,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference"/> that can be used to monitor changes and events to an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
            <param name="ancestorPath">
            The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> used to narrow the scope for this reference. <br/>
            The reference will only apply to elements that are contained inside this path.</param>
            <param name="elementType">
            The configuration type for which a reference should be created.
            </param>
            <param name="elementName">
            The name of the element for which this element should be created.
            </param>
            <returns>
            an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference"/> that can be used to monitor changes and events to an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.CreateReference(System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference"/> that can be used to monitor changes and events to an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance with the specified <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/>.
            </summary>
            <param name="elementPath">The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> for which the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference"/> should be created.</param>
            <returns>
            An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference"/> that can be used to monitor changes and events to an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance with the specified <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.CreateChangeScope(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Boolean})">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IElementChangeScope"/> which can be used to monitor <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances that match <paramref name="predicate"/>.
            </summary>
            <param name="predicate">A predicate that returns <see langword="true"/> for all elements that should be included in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IElementChangeScope"/>.</param>
            <returns>
            An instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IElementChangeScope"/> which can be used to monitor <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances that match <paramref name="predicate"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.CollectionChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> that contains additional information about the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.CollectionChanged"/> event.</param>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.CollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.SelectedElementChangedEventHandlerEventArgs">
            <summary>
            Provides data for the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel.SelectedElementChanged"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.SelectedElementChangedEventHandlerEventArgs.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.SelectedElementChangedEventHandlerEventArgs"/> class.
            </summary>
            <param name="selectedElement">The newly selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.SelectedElementChangedEventHandlerEventArgs.SelectedElement">
            <summary>
            Gets the newly selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
            <value>
            The newly selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameProperty">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameProperty"/> represents a property to display <see cref="T:System.Type"/> information within the configuration design-time.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameProperty.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameProperty"/>.
            </summary>
            <param name="serviceProvider">The service provider to use in locating services.</param>
            <param name="parent">The parent element.</param>
            <param name="declaringProperty">The declaring <see cref="T:System.ComponentModel.PropertyDescriptor"/> for this property.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameProperty.Converter">
            <summary>
            Converter that should be used to convert value to and from a string representation.
            </summary>
            <value>
            Returns a converter that will convert a <see cref="T:System.Type"/> to its short type name for display purposes.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ValidationModel">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ValidationModel"/> tracks all <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/> instances
            by elements in <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup"/>.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ValidationModel"/> monitors changes in <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup"/> and as new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> are
            added begins montoring their <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ValidationResults"/> and their properties' validation results.
            <br/>
            As results are added or removed for each element, this model keeps this list up-to-date for display in the design-time user interface.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ValidationModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup)">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ValidationModel"/>.
            </summary>
            <param name="lookup">The element loookup service to use for monitoring the addition and removal of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> items.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ValidationModel.Navigate(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult)">
            <summary>
            Orientates the designer to the configuration element associated with the given <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/>.
            </summary>
            <param name="validationResult">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult"/> that should be navigated to.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ValidationModel.NavigateCommand">
            <summary>
            Provides an <see cref="T:System.Windows.Input.ICommand"/> implementation that allows to execute the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ValidationModel.Navigate(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationResult)"/> method from within XAML.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ValidationModel.ValidationResults">
            <summary>
             Gets the set of validation results collected from all elements.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationBuilder">
            <summary>
            Provides a general builder pattern and utility method for locating various elements
            in a <see cref="N:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel"/> hierarchy.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationBuilder.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationBuilder"/>.
            </summary>
            <param name="sourceModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> the builder works on.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationBuilder.Build">
            <summary>
            Implemented in derived classes to add the configuration pieces into the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationBuilder.GetSectionOfType``1">
            <summary>
            Retrieves a section of the specified type from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>
            </summary>
            <typeparam name="T">The type of <see cref="T:System.Configuration.ConfigurationElement"/> the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> represents.</typeparam>
            <returns>The first <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> with a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ConfigurationType"/> matching <typeparamref name="T"/>
            or <see langword="null"/></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationBuilder.GetCollectionOfType``1(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Retrieves the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/> that manages
            the configuration elements of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ConfigurationType"/> that the collection maintains.</typeparam>
            <param name="root">The root <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> to search under.</param>
            <returns>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/> that manages the type</returns>        
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep"/> defines a step in a configuration wizard and
            provides facilities for managing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty"/> collections.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep"/> represents a step in the wizard
            with a number of properties that participate in the step.
            
            This class helps re-use the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> infrastructure in 
            configuration tool from within a wizard, by allowing the wizard to
            take advantage of services like validation and element references.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep">
            <summary>
            A single step in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> sequence.
            </summary>
            <remarks>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep"/> is reponsible prior to execution
            for the steps validity via the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.IsValid"/> property.
            If validity changes, the step should raise the 
            <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> event as 
            this is monitored by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> to determine
            overall wizard validation.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/> is a single step in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> sequence.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep.Execute">
            <summary>
            Invoked when the wizard should apply its changes.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep.IsValid">
            <summary>
            Returns <see langword="true"/> if the step is valid.
            Otherwise, returns <see langword="false"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep.Title">
            <summary>
            Gets the title of the wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep.Instruction">
            <summary>
            Gets the instructions for this wizard step.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.Execute">
            <summary>
            Invoked when the wizard should apply its changes.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.OnPropertyChanged(System.String)">
            <summary>
            Invokes the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.PropertyChanged"/> event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.IsValid">
            <summary>
            Returns true if the step is valid, false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.Title">
            <summary>
            Gets the title of the wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.Instruction">
            <summary>
            Gets step instructions to display to the user.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator},Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup)">
            <summary>
            Creates a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep"/>.
            </summary>
            <param name="serviceProvider"></param>
            <param name="validatorFactory">A factory for creating <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator"/> instances.</param>
            <param name="elementLookup">A service for locating elements within the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep.StepPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Invoked when any of the properties managed by this step change.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep.AddReflectedProperty(System.Object,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty"/> based on a data structure.
            </summary>
            <param name="wizardData">The attributed structure to use for storing wizard data.  See <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty"/>.</param>
            <param name="propertyName">The name of the property that must be on <paramref name="wizardData"/></param>
            <returns>An initialized wizard property based on <paramref name="wizardData"/>.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep.IsValid">
            <summary>
            Returns true if all properties are valid.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep.PropertyList">
            <summary>
            The set of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty"/> properties this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep"/> manages.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep.Properties">
            <summary>
            The properties managed by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep"/> as <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> enumerable.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep.WizardStepPropertyCollection">
            <summary>
            The collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty"/> elements.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep.WizardStepPropertyCollection.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep)">
            <summary>
            Creates a new instance of this step.
            </summary>
            <param name="parentStep"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep.WizardStepPropertyCollection.InsertItem(System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.
                            </param><param name="item">The object to insert. The value can be null for reference types.
                            </param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than zero.
                                -or-
                            <paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.
                            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep.WizardStepPropertyCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.
                            </param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than zero.
                                -or-
                            <paramref name="index"/> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.
                            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep.WizardStepPropertyCollection.ClearItems">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep.WizardStepPropertyCollection.Item(System.String)">
            <summary>
            Retrieves the wizard property based on <paramref name="propertyName"/>
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the <paramref name="propertyName"/> does not exist.</exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty"/> provides a custom property for use in displaying as part of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep"/>.
            </summary>
            <remarks>
            WizardProperties allow a wizard step to attribute a class and provide infrastructure for
            validation and element references, similar to that used by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> elements.
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.ConfigurationWizardStep"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep"/>
            </remarks>
            <example>
               
            <![CDATA[
            class PickExceptionTypeData
            {
               [EditorAttribute(typeof(TypeSelectionEditor), typeof(UITypeEditor))]
               [BaseType(typeof(Exception), TypeSelectorIncludes.AbstractTypes | TypeSelectorIncludes.BaseType)]
               [Validation(typeof(RequiredFieldValidator))]
               [ResourceDisplayName(ResourceName = "PickExceptionTypeStepExceptionTypeDisplayName", ResourceType = typeof(Resources))]
               [EditorWithReadOnlyText(true)]
               public string ExceptionType { get; set; }
               
               [Validation(typeof(RequiredFieldValidator))]
               [Reference(typeof(ExceptionHandlingSettings), typeof(ExceptionPolicyData))]
               [ResourceDisplayName(ResourceName = "PickExceptionTypeStepPolicyDisplayName", ResourceType = typeof(Resources))]
               public string Policy { get; set; }
               
               public string DatabaseName { get; set; }
               
               public string LogCategory { get; set; }
            }
            
            var structure = new PickExceptionTypeData();
            var policyProperty = new WizardProperty(serviceProvider,
                                                structure,
                                                TypeDescriptor.GetProperties(wizardData)[Policy],
                                                validatorFactory,
                                                elementLookup);
            
            
            ]]></example>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty.#ctor(System.IServiceProvider,System.Object,System.ComponentModel.PropertyDescriptor,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator},Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup,System.Attribute[])">
            <summary>
            Creates a new instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty"/>.
            </summary>
            <param name="serviceProvider"></param>
            <param name="component">The <see cref="T:System.Object"/> storing the value for this property as described by <paramref name="declaringProperty"/>.</param>
            <param name="declaringProperty">The property definition for this property.</param>
            <param name="validatorResolver">A factory for creating <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator"/> instances.</param>
            <param name="elementLookup">A locator to locate <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> items in the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationViewModel"/>.</param>
            <param name="additionalAttributes">Additional <see cref="T:System.Attribute"/> items for this element.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty.GetValidators">
            <summary>
            Gets the set of validators for this property.
            </summary>
            <remarks>
            Validators may be added by deriving from this and returning additional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator"/> objects.  
            Or, they can be added by providing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.Validation.ValidationAttribute"/> attributes to the 
            underlying <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Component"/> or during the construction of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.<br/>
            Validators specified by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.Validation.ValidationAttribute"/> are created by the containing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/>.
            </remarks>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing default property validators, obtained from <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.GetDefaultPropertyValidators"/>
            and additional validators provided through <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.Validation.ValidationAttribute"/>.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty.HasSuggestedValues">
            <summary>
            Returns a value indicating that this property has suggested values.
            </summary>
            <value>Returns <see langword="true"/> if there are suggested values for this property. 
            Otherwise, returns <see langword="false"/>.
            </value>
            <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SuggestedValues"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty.SuggestedValues">
            <summary>
            Get a list of suggested values.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty.SuggestedElement">
            <summary>
             Gets the suggested element based on the selected item from <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty.SuggestedValues"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.AssociatedWizardProperty">
            <summary>
            Represents a property associated with another <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty"/>.  
            This property associates itself with another property and marks itself as ReadOnly 
            if the associated property value is not from that properties suggested value list.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.AssociatedWizardProperty.#ctor(System.IServiceProvider,System.Object,System.ComponentModel.PropertyDescriptor,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator},Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.WizardProperty,System.Attribute[])">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.AssociatedWizardProperty"/>.
            </summary>
            <param name="serviceProvider"></param>
            <param name="component"></param>
            <param name="declaringProperty"></param>
            <param name="validatorResolver"></param>
            <param name="elementLookup"></param>
            <param name="associatedProperty"></param>
            <param name="additionalAttributes"></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabase">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabase"/> wizard collections and updates 
            the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>
            to log exceptions to a database.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabaseCommand"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> is the base class for a multi-step wizard.
            </summary>
            <remarks>
            The WizardModel is used in conjunction with <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/> items
            to gather data from the user and apply the changes.
            
            Inheritors of WizardModel can add <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/> (or an
            instance the convenience class <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep"/>) using the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.AddStep(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep)"/>
            method.  The wizard will start with the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.CurrentStep"/> oriented to
            the first <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/>.
            
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView"/> provides a view over <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> and
            takes advantage of siting each step in a section of the view as well as 
            connecting to the various commands offered by the wizard (<see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.NextCommand"/>, 
            <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.PreviousCommand"/>, <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.FinishCommand"/>).
            </remarks>
            <example>
            
            public class MyWizard : WizardModel
            {
              public MyWizard(IUIServiceWpf uiService) : base(uiService)
              {
                 AddStep(new FirstStep());
                 AddStep(new SecondStep());
              }
            
              public override Title { get { return "My Wizard"; } }
            }
            </example>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/>.
            </summary>
            <param name="uiService">The UI service used to display any dialogs the wizard may need.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.GetWizardTitle">
            <summary>
            Retrieves the wizard title.
            </summary>
            <returns>The title for the wizard dispalyed by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView"/>.</returns>
            <remarks>
            This is invoked by <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.Title"/>.</remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.AddStep(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep)">
            <summary>
            Adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/> to the steps maintained by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/>.
            </summary>
            <param name="step">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/> to add.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.Next">
            <summary>
            Moves to the next wizard step if the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.CurrentStep"/> <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.IsValid"/> is true.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.IsValid">
            <summary>
            Determines if the wizard is valid.
            </summary>
            <returns>True if valid, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.Execute">
            <summary>
            Executes each <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/> in the wizard.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.NextCanExecute">
            <summary>
            Determines if the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.NextCommand"/> can be executed.
            </summary>
            <returns>Returns <see langword="true"/> if it can be excuted, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.PreviousCanExecute">
            <summary>
            Evaluates if the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.PreviousCommand"/> can execute.
            </summary>
            <returns>Returns <see langword="true"/> if the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.CurrentStep"/> is not <see langword="null"/>
            and there is a previous step.  Otherwise, returns <see langword="false"/></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.Previous">
            <summary>
            Moves to the previous <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/>
            </summary>
            <remarks>
            Will only change <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.CurrentStep"/> if there is a previous step to move to, otherwise the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.CurrentStep"/> is not changed.</remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.FinishCanExecute">
            <summary>
            Evaluates if the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.FinishCommand"/> can be executed.
            </summary>
            <returns>Returns <see langword="true"/> if it can execute.  Otherwise, returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.Finish">
            <summary>
            Completes the wizard by executing each individual step.
            </summary>
            <remarks>
            Errors raised by a step will be presented in a dialog if
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf"/> was provided during construction.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.PropertyChanged"/> event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.Title">
            <summary>
            Gets a title for the wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.CurrentStep">
            <summary>
            The current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/> of the wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.Steps">
            <summary>
            The wizard steps.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.NextCommand">
            <summary>
            The <see cref="T:System.Windows.Input.ICommand"/> for executing the next command.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.PreviousCommand">
            <summary>
            The <see cref="T:System.Windows.Input.ICommand"/> for moving to the previous <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.FinishCommand">
            <summary>
            The <see cref="T:System.Windows.Input.ICommand"/> to finish the wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.OnCloseAction">
            <summary>
            The action invoked by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> to close the wizard.
            </summary>
            <remarks>
            This may be used by views hosting the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> to detect
            when the view should close.
            </remarks>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.PropertyChanged">
            <summary>
            Invoked when a property value changes.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabase.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep[])">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabaseCommand"/>
            </summary>
            <remarks>
            Resources needed by this wizard are added to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Hosting.GlobalResources"/> extended dictionary.</remarks>
            <param name="uiService">The user-interface service to use.</param>
            <param name="wizardSteps">The steps for this wizard that are added to <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabase.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.SelectDatabaseStep)">
            <summary>
            Initializes a new instances of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabase"/>.
            </summary>
            <param name="uiService">The user-interface service to use.</param>
            <param name="exceptionStep">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep"/> step.</param>
            <param name="databaseStep">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.SelectDatabaseStep"/> step.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabase.GetWizardTitle">
            <summary>
            Gets the wizard title.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabase.Execute">
            <summary>
            Executes each <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/> in the wizard to log exceptions to a database based
            on the values collected from the user.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabaseCommand">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabaseCommand"/> initiates a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabase"/> wizard.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabaseCommand"/> verifies that the pre-requisites 
            are satisfied before allowing it to be enabled from the menu
            <br/>
            The pre-requisite are:
            <list>
            <item>Able to get the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommonDesignTime.SectionType.LoggingSettings"/> as a type.</item>
            <item>Able to get the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommonDesignTime.SectionType.ExceptionHandlingSettings"/> as a type.</item>
            <item>Able to get the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommonDesignTime.SectionType.DatabaseSettings"/> as a type.</item>
            </list></remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabaseCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.WizardCommandAttribute,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Configuration.Design.HostAdapterV5.IUIServiceWpf,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel})">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabaseCommand"/>.
            </summary>
            <param name="attribute">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute"/> used to define this command.</param>
            <param name="uiService">The user-interface service for displaying messages or dialogs.</param>
            <param name="resolver">The resolver to use to create <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> instances.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabaseCommand.InnerCanExecute(System.Object)">
            <summary>
            Determines if the command should be available by evaluating if it can retrieve
            the pre-requisite types.
            </summary>
            <param name="parameter">This is not used.</param>
            <returns><see langowrd="true"/> if the command can execute.<br/>
            Otherwise, returns <see langword="false"/></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep"/> wizard step collects data for and configures the exception policy as part of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabase"/> wizard.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator},Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep"/>.
            </summary>
            <param name="serviceProvider"></param>
            <param name="sourceModel"></param>
            <param name="validatorFactory"></param>
            <param name="elementLookup"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep.Execute">
            <summary>
            Invoked when the wizard should apply its changes.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep.IsValid">
            <summary>
            Returns true if all properties are valid.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep.Title">
            <summary>
            Gets the title of the wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep.Instruction">
            <summary>
            Gets step instructions to display to the user.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep.ExceptionType">
            <summary>
            Gets the exception type <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> to be configured as part of this step.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep.Policy">
            <summary>
            Gets the policy <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> to be configured as part of this step.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep.ReferencedDatabaseName">
            <summary>
            Gets or sets the database reference to log exceptions to.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.SelectDatabaseStep">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.SelectDatabaseStep"/> collections information for and configures the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> for 
            a selected database.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.SelectDatabaseStep.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator},Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup)">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.SelectDatabaseStep"/>.
            </summary>
            <param name="serviceProvider">The service provider to use for service location.</param>
            <param name="sourceModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> to update on <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.Execute"/></param>
            <param name="validatorFactory">The factory creating new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator"/> instances.</param>
            <param name="elementLookup">The service for locating registered elements.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.SelectDatabaseStep.Execute">
            <summary>
            Invoked when the wizard should apply its changes.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.SelectDatabaseStep.Title">
            <summary>
            Gets the title of the wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.SelectDatabaseStep.Instruction">
            <summary>
            Gets step instructions to display to the user.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.SelectDatabaseStep.ConnectionString">
            <summary>
            Gets the database connection string <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.SelectDatabaseStep.Name">
            <summary>
            Gets the database name <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.SelectDatabaseStep.DatabaseProvider">
            <summary>
            Gets the database provider <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.PickExceptionTypeStepExceptionTypeDisplayName">
            <summary>
              Looks up a localized string similar to Exception Type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.PickExceptionTypeStepPolicyDisplayName">
            <summary>
              Looks up a localized string similar to Policy.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.SelectDatabaseStepConnectionNameDisplayName">
            <summary>
              Looks up a localized string similar to Connection Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.SelectDatabaseStepConnectionProviderNameDisplayName">
            <summary>
              Looks up a localized string similar to Provider Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.SelectDatabaseStepConnectionStringDisplayName">
            <summary>
              Looks up a localized string similar to Connection String.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.WizardErrorDuringExecutionTitle">
            <summary>
              Looks up a localized string similar to An Error Occurred In The Wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.WizardLogExceptionsToDatabaseTitle">
            <summary>
              Looks up a localized string similar to Log Exception To Database.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.WizardPickExceptionTypeInstructions">
            <summary>
              Looks up a localized string similar to Select an exception type.  Then, select enter or select an exception handling policy for the selected type..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.WizardPickExceptionTypeStepTitle">
            <summary>
              Looks up a localized string similar to Pick exception type..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.WizardRetrievingTitleError">
            <summary>
              Looks up a localized string similar to An error occurred retrieving the wizard&apos;s Title..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.WizardSelectDatabaseStepInstructions">
            <summary>
              Looks up a localized string similar to Enter new database connection information or select an existing database connection, if one is available..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.WizardSelectDatabaseStepTitle">
            <summary>
              Looks up a localized string similar to Select a database..
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView">
            <summary>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView"/> provides the layout and user-interface for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/>.
            </summary>
            <summary>
            WizardView
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView.#ctor">
            <summary>
            Intantiates a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView.SetWizard(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel)">
            <summary>
            Sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> for this view instance.
            </summary>
            <param name="wizard">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> to display in <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView"/>.</param>
            <remarks>
            Setting the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> sets the model as <see cref="P:System.Windows.FrameworkElement.DataContext"/> for this view and
            adds an action to the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.OnCloseAction"/></remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
