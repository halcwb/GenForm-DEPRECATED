#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3607
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Informedica.GenForm.Database.ORM.LINQtoSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Formularium2010")]
	public partial class AdministrationDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertApotheek(Apotheek instance);
    partial void UpdateApotheek(Apotheek instance);
    partial void DeleteApotheek(Apotheek instance);
    partial void InsertApotheker(Apotheker instance);
    partial void UpdateApotheker(Apotheker instance);
    partial void DeleteApotheker(Apotheker instance);
    partial void InsertGebruiker(Gebruiker instance);
    partial void UpdateGebruiker(Gebruiker instance);
    partial void DeleteGebruiker(Gebruiker instance);
    partial void InsertRol(Rol instance);
    partial void UpdateRol(Rol instance);
    partial void DeleteRol(Rol instance);
    partial void InsertGebruikerRol(GebruikerRol instance);
    partial void UpdateGebruikerRol(GebruikerRol instance);
    partial void DeleteGebruikerRol(GebruikerRol instance);
    #endregion
		
		public AdministrationDataContext() : 
				base(global::Informedica.GenForm.Database.ORM.Properties.Settings.Default.Formularium2010ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AdministrationDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdministrationDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdministrationDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdministrationDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Apotheek> Apotheeks
		{
			get
			{
				return this.GetTable<Apotheek>();
			}
		}
		
		public System.Data.Linq.Table<Apotheker> Apothekers
		{
			get
			{
				return this.GetTable<Apotheker>();
			}
		}
		
		public System.Data.Linq.Table<Gebruiker> Gebruikers
		{
			get
			{
				return this.GetTable<Gebruiker>();
			}
		}
		
		public System.Data.Linq.Table<Rol> Rols
		{
			get
			{
				return this.GetTable<Rol>();
			}
		}
		
		public System.Data.Linq.Table<GebruikerRol> GebruikerRols
		{
			get
			{
				return this.GetTable<GebruikerRol>();
			}
		}
		
		[Function(Name="dbo.CSLA_Apotheek_Delete")]
		public int CSLA_Apotheek_Delete([Parameter(DbType="Int")] System.Nullable<int> p_apotheekId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_apotheekId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Rol_Update")]
		public int CSLA_Rol_Update([Parameter(DbType="Timestamp")] ref System.Data.Linq.Binary p_versieTimeStamp, [Parameter(DbType="Int")] System.Nullable<int> p_rolId, [Parameter(DbType="NChar(30)")] string p_naam, [Parameter(DbType="NVarChar(MAX)")] string p_omschrijving)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_versieTimeStamp, p_rolId, p_naam, p_omschrijving);
			p_versieTimeStamp = ((System.Data.Linq.Binary)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Apotheek_Insert")]
		public int CSLA_Apotheek_Insert([Parameter(DbType="Timestamp")] ref System.Data.Linq.Binary p_versieTimeStamp, [Parameter(DbType="NVarChar(125)")] string p_naam, [Parameter(DbType="Int")] ref System.Nullable<int> p_apotheekId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_versieTimeStamp, p_naam, p_apotheekId);
			p_versieTimeStamp = ((System.Data.Linq.Binary)(result.GetParameterValue(0)));
			p_apotheekId = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Apotheek_Select")]
		public ISingleResult<CSLA_Apotheek_SelectResult> CSLA_Apotheek_Select([Parameter(DbType="Int")] System.Nullable<int> p_apotheekId, [Parameter(DbType="NVarChar(125)")] string p_naam)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_apotheekId, p_naam);
			return ((ISingleResult<CSLA_Apotheek_SelectResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Apotheek_Update")]
		public int CSLA_Apotheek_Update([Parameter(DbType="Timestamp")] ref System.Data.Linq.Binary p_versieTimeStamp, [Parameter(DbType="Int")] System.Nullable<int> p_apotheekId, [Parameter(DbType="NVarChar(125)")] string p_naam)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_versieTimeStamp, p_apotheekId, p_naam);
			p_versieTimeStamp = ((System.Data.Linq.Binary)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Apotheker_Delete")]
		public int CSLA_Apotheker_Delete([Parameter(DbType="Int")] System.Nullable<int> p_apothekerId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_apothekerId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Apotheker_Insert")]
		public int CSLA_Apotheker_Insert([Parameter(DbType="Int")] System.Nullable<int> p_gebruikerId, [Parameter(DbType="Int")] System.Nullable<int> p_apotheekId, [Parameter(DbType="Int")] ref System.Nullable<int> p_apothekerId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_gebruikerId, p_apotheekId, p_apothekerId);
			p_apothekerId = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Apotheker_Select")]
		public ISingleResult<CSLA_Apotheker_SelectResult> CSLA_Apotheker_Select([Parameter(DbType="Int")] System.Nullable<int> p_apothekerId, [Parameter(DbType="Int")] System.Nullable<int> p_gebruikerId, [Parameter(DbType="Int")] System.Nullable<int> p_apotheekId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_apothekerId, p_gebruikerId, p_apotheekId);
			return ((ISingleResult<CSLA_Apotheker_SelectResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Apotheker_Update")]
		public int CSLA_Apotheker_Update([Parameter(DbType="Int")] System.Nullable<int> p_apothekerId, [Parameter(DbType="Int")] System.Nullable<int> p_gebruikerId, [Parameter(DbType="Int")] System.Nullable<int> p_apotheekId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_apothekerId, p_gebruikerId, p_apotheekId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Gebruiker_Delete")]
		public int CSLA_Gebruiker_Delete([Parameter(DbType="Int")] System.Nullable<int> p_gebruikerId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_gebruikerId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Gebruiker_Insert")]
		public int CSLA_Gebruiker_Insert([Parameter(DbType="Timestamp")] ref System.Data.Linq.Binary p_versieTimeStamp, [Parameter(DbType="NChar(30)")] string p_gebruikerNaam, [Parameter(DbType="NChar(10)")] string p_paswoord, [Parameter(DbType="NChar(20)")] string p_email, [Parameter(DbType="NVarChar(125)")] string p_voorNaam, [Parameter(DbType="NChar(125)")] string p_achterNaam, [Parameter(DbType="NChar(20)")] string p_sein, [Parameter(DbType="Int")] ref System.Nullable<int> p_gebruikerId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_versieTimeStamp, p_gebruikerNaam, p_paswoord, p_email, p_voorNaam, p_achterNaam, p_sein, p_gebruikerId);
			p_versieTimeStamp = ((System.Data.Linq.Binary)(result.GetParameterValue(0)));
			p_gebruikerId = ((System.Nullable<int>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Gebruiker_Select")]
		public ISingleResult<CSLA_Gebruiker_SelectResult> CSLA_Gebruiker_Select([Parameter(DbType="Int")] System.Nullable<int> p_gebruikerId, [Parameter(DbType="NChar(30)")] string p_gebruikerNaam, [Parameter(DbType="NChar(10)")] string p_paswoord, [Parameter(DbType="NChar(20)")] string p_email, [Parameter(DbType="NVarChar(125)")] string p_voorNaam, [Parameter(DbType="Bit")] System.Nullable<bool> p_voorNaamHasValue, [Parameter(DbType="NChar(125)")] string p_achterNaam, [Parameter(DbType="Bit")] System.Nullable<bool> p_achterNaamHasValue, [Parameter(DbType="NChar(20)")] string p_sein, [Parameter(DbType="Bit")] System.Nullable<bool> p_seinHasValue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_gebruikerId, p_gebruikerNaam, p_paswoord, p_email, p_voorNaam, p_voorNaamHasValue, p_achterNaam, p_achterNaamHasValue, p_sein, p_seinHasValue);
			return ((ISingleResult<CSLA_Gebruiker_SelectResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Gebruiker_Update")]
		public int CSLA_Gebruiker_Update([Parameter(DbType="Timestamp")] ref System.Data.Linq.Binary p_versieTimeStamp, [Parameter(DbType="Int")] System.Nullable<int> p_gebruikerId, [Parameter(DbType="NChar(30)")] string p_gebruikerNaam, [Parameter(DbType="NChar(10)")] string p_paswoord, [Parameter(DbType="NChar(20)")] string p_email, [Parameter(DbType="NVarChar(125)")] string p_voorNaam, [Parameter(DbType="NChar(125)")] string p_achterNaam, [Parameter(DbType="NChar(20)")] string p_sein)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_versieTimeStamp, p_gebruikerId, p_gebruikerNaam, p_paswoord, p_email, p_voorNaam, p_achterNaam, p_sein);
			p_versieTimeStamp = ((System.Data.Linq.Binary)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_GebruikerRol_Delete")]
		public int CSLA_GebruikerRol_Delete([Parameter(DbType="Int")] System.Nullable<int> p_gebruikerRolId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_gebruikerRolId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_GebruikerRol_Insert")]
		public int CSLA_GebruikerRol_Insert([Parameter(DbType="Int")] System.Nullable<int> p_gebruikerId, [Parameter(DbType="Int")] System.Nullable<int> p_rolId, [Parameter(DbType="Int")] ref System.Nullable<int> p_gebruikerRolId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_gebruikerId, p_rolId, p_gebruikerRolId);
			p_gebruikerRolId = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_GebruikerRol_Select")]
		public ISingleResult<CSLA_GebruikerRol_SelectResult> CSLA_GebruikerRol_Select([Parameter(DbType="Int")] System.Nullable<int> p_gebruikerRolId, [Parameter(DbType="Int")] System.Nullable<int> p_gebruikerId, [Parameter(DbType="Int")] System.Nullable<int> p_rolId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_gebruikerRolId, p_gebruikerId, p_rolId);
			return ((ISingleResult<CSLA_GebruikerRol_SelectResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_GebruikerRol_Update")]
		public int CSLA_GebruikerRol_Update([Parameter(DbType="Int")] System.Nullable<int> p_gebruikerRolId, [Parameter(DbType="Int")] System.Nullable<int> p_gebruikerId, [Parameter(DbType="Int")] System.Nullable<int> p_rolId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_gebruikerRolId, p_gebruikerId, p_rolId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Rol_Delete")]
		public int CSLA_Rol_Delete([Parameter(DbType="Int")] System.Nullable<int> p_rolId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_rolId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Rol_Insert")]
		public int CSLA_Rol_Insert([Parameter(DbType="Timestamp")] ref System.Data.Linq.Binary p_versieTimeStamp, [Parameter(DbType="NChar(30)")] string p_naam, [Parameter(DbType="NVarChar(MAX)")] string p_omschrijving, [Parameter(DbType="Int")] ref System.Nullable<int> p_rolId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_versieTimeStamp, p_naam, p_omschrijving, p_rolId);
			p_versieTimeStamp = ((System.Data.Linq.Binary)(result.GetParameterValue(0)));
			p_rolId = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_Rol_Select")]
		public ISingleResult<CSLA_Rol_SelectResult> CSLA_Rol_Select([Parameter(DbType="Int")] System.Nullable<int> p_rolId, [Parameter(DbType="NChar(30)")] string p_naam, [Parameter(DbType="NVarChar(MAX)")] string p_omschrijving, [Parameter(DbType="Bit")] System.Nullable<bool> p_omschrijvingHasValue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_rolId, p_naam, p_omschrijving, p_omschrijvingHasValue);
			return ((ISingleResult<CSLA_Rol_SelectResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_DeleteGebruikerRolsByAndgebruikerId")]
		public int CSLA_DeleteGebruikerRolsByAndgebruikerId([Parameter(DbType="Int")] System.Nullable<int> gebruikerId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gebruikerId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CSLA_DeleteGebruikerRolsByAndrolId")]
		public int CSLA_DeleteGebruikerRolsByAndrolId([Parameter(DbType="Int")] System.Nullable<int> rolId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rolId);
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.Apotheek")]
	public partial class Apotheek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _apotheekId;
		
		private string _naam;
		
		private System.Data.Linq.Binary _versieTimeStamp;
		
		private EntitySet<Apotheker> _Apothekers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnapotheekIdChanging(int value);
    partial void OnapotheekIdChanged();
    partial void OnnaamChanging(string value);
    partial void OnnaamChanged();
    partial void OnversieTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnversieTimeStampChanged();
    #endregion
		
		public Apotheek()
		{
			this._Apothekers = new EntitySet<Apotheker>(new Action<Apotheker>(this.attach_Apothekers), new Action<Apotheker>(this.detach_Apothekers));
			OnCreated();
		}
		
		[Column(Storage="_apotheekId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int apotheekId
		{
			get
			{
				return this._apotheekId;
			}
			set
			{
				if ((this._apotheekId != value))
				{
					this.OnapotheekIdChanging(value);
					this.SendPropertyChanging();
					this._apotheekId = value;
					this.SendPropertyChanged("apotheekId");
					this.OnapotheekIdChanged();
				}
			}
		}
		
		[Column(Storage="_naam", DbType="NVarChar(125) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string naam
		{
			get
			{
				return this._naam;
			}
			set
			{
				if ((this._naam != value))
				{
					this.OnnaamChanging(value);
					this.SendPropertyChanging();
					this._naam = value;
					this.SendPropertyChanged("naam");
					this.OnnaamChanged();
				}
			}
		}
		
		[Column(Storage="_versieTimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary versieTimeStamp
		{
			get
			{
				return this._versieTimeStamp;
			}
			set
			{
				if ((this._versieTimeStamp != value))
				{
					this.OnversieTimeStampChanging(value);
					this.SendPropertyChanging();
					this._versieTimeStamp = value;
					this.SendPropertyChanged("versieTimeStamp");
					this.OnversieTimeStampChanged();
				}
			}
		}
		
		[Association(Name="Apotheek_Apotheker", Storage="_Apothekers", ThisKey="apotheekId", OtherKey="apotheekId")]
		public EntitySet<Apotheker> Apothekers
		{
			get
			{
				return this._Apothekers;
			}
			set
			{
				this._Apothekers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Apothekers(Apotheker entity)
		{
			this.SendPropertyChanging();
			entity.Apotheek = this;
		}
		
		private void detach_Apothekers(Apotheker entity)
		{
			this.SendPropertyChanging();
			entity.Apotheek = null;
		}
	}
	
	[Table(Name="dbo.Apotheker")]
	public partial class Apotheker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _apothekerId;
		
		private int _gebruikerId;
		
		private int _apotheekId;
		
		private EntityRef<Apotheek> _Apotheek;
		
		private EntityRef<Gebruiker> _Gebruiker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnapothekerIdChanging(int value);
    partial void OnapothekerIdChanged();
    partial void OngebruikerIdChanging(int value);
    partial void OngebruikerIdChanged();
    partial void OnapotheekIdChanging(int value);
    partial void OnapotheekIdChanged();
    #endregion
		
		public Apotheker()
		{
			this._Apotheek = default(EntityRef<Apotheek>);
			this._Gebruiker = default(EntityRef<Gebruiker>);
			OnCreated();
		}
		
		[Column(Storage="_apothekerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int apothekerId
		{
			get
			{
				return this._apothekerId;
			}
			set
			{
				if ((this._apothekerId != value))
				{
					this.OnapothekerIdChanging(value);
					this.SendPropertyChanging();
					this._apothekerId = value;
					this.SendPropertyChanged("apothekerId");
					this.OnapothekerIdChanged();
				}
			}
		}
		
		[Column(Storage="_gebruikerId", DbType="Int NOT NULL")]
		public int gebruikerId
		{
			get
			{
				return this._gebruikerId;
			}
			set
			{
				if ((this._gebruikerId != value))
				{
					if (this._Gebruiker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngebruikerIdChanging(value);
					this.SendPropertyChanging();
					this._gebruikerId = value;
					this.SendPropertyChanged("gebruikerId");
					this.OngebruikerIdChanged();
				}
			}
		}
		
		[Column(Storage="_apotheekId", DbType="Int NOT NULL")]
		public int apotheekId
		{
			get
			{
				return this._apotheekId;
			}
			set
			{
				if ((this._apotheekId != value))
				{
					if (this._Apotheek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnapotheekIdChanging(value);
					this.SendPropertyChanging();
					this._apotheekId = value;
					this.SendPropertyChanged("apotheekId");
					this.OnapotheekIdChanged();
				}
			}
		}
		
		[Association(Name="Apotheek_Apotheker", Storage="_Apotheek", ThisKey="apotheekId", OtherKey="apotheekId", IsForeignKey=true)]
		public Apotheek Apotheek
		{
			get
			{
				return this._Apotheek.Entity;
			}
			set
			{
				Apotheek previousValue = this._Apotheek.Entity;
				if (((previousValue != value) 
							|| (this._Apotheek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Apotheek.Entity = null;
						previousValue.Apothekers.Remove(this);
					}
					this._Apotheek.Entity = value;
					if ((value != null))
					{
						value.Apothekers.Add(this);
						this._apotheekId = value.apotheekId;
					}
					else
					{
						this._apotheekId = default(int);
					}
					this.SendPropertyChanged("Apotheek");
				}
			}
		}
		
		[Association(Name="Gebruiker_Apotheker", Storage="_Gebruiker", ThisKey="gebruikerId", OtherKey="gebruikerId", IsForeignKey=true)]
		public Gebruiker Gebruiker
		{
			get
			{
				return this._Gebruiker.Entity;
			}
			set
			{
				Gebruiker previousValue = this._Gebruiker.Entity;
				if (((previousValue != value) 
							|| (this._Gebruiker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gebruiker.Entity = null;
						previousValue.Apothekers.Remove(this);
					}
					this._Gebruiker.Entity = value;
					if ((value != null))
					{
						value.Apothekers.Add(this);
						this._gebruikerId = value.gebruikerId;
					}
					else
					{
						this._gebruikerId = default(int);
					}
					this.SendPropertyChanged("Gebruiker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Gebruiker")]
	public partial class Gebruiker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _gebruikerId;
		
		private string _gebruikerNaam;
		
		private string _paswoord;
		
		private string _email;
		
		private System.Data.Linq.Binary _versieTimeStamp;
		
		private string _voorNaam;
		
		private string _achterNaam;
		
		private string _sein;
		
		private EntitySet<Apotheker> _Apothekers;
		
		private EntitySet<GebruikerRol> _GebruikerRols;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngebruikerIdChanging(int value);
    partial void OngebruikerIdChanged();
    partial void OngebruikerNaamChanging(string value);
    partial void OngebruikerNaamChanged();
    partial void OnpaswoordChanging(string value);
    partial void OnpaswoordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnversieTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnversieTimeStampChanged();
    partial void OnvoorNaamChanging(string value);
    partial void OnvoorNaamChanged();
    partial void OnachterNaamChanging(string value);
    partial void OnachterNaamChanged();
    partial void OnseinChanging(string value);
    partial void OnseinChanged();
    #endregion
		
		public Gebruiker()
		{
			this._Apothekers = new EntitySet<Apotheker>(new Action<Apotheker>(this.attach_Apothekers), new Action<Apotheker>(this.detach_Apothekers));
			this._GebruikerRols = new EntitySet<GebruikerRol>(new Action<GebruikerRol>(this.attach_GebruikerRols), new Action<GebruikerRol>(this.detach_GebruikerRols));
			OnCreated();
		}
		
		[Column(Storage="_gebruikerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int gebruikerId
		{
			get
			{
				return this._gebruikerId;
			}
			set
			{
				if ((this._gebruikerId != value))
				{
					this.OngebruikerIdChanging(value);
					this.SendPropertyChanging();
					this._gebruikerId = value;
					this.SendPropertyChanged("gebruikerId");
					this.OngebruikerIdChanged();
				}
			}
		}
		
		[Column(Storage="_gebruikerNaam", DbType="NChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string gebruikerNaam
		{
			get
			{
				return this._gebruikerNaam;
			}
			set
			{
				if ((this._gebruikerNaam != value))
				{
					this.OngebruikerNaamChanging(value);
					this.SendPropertyChanging();
					this._gebruikerNaam = value;
					this.SendPropertyChanged("gebruikerNaam");
					this.OngebruikerNaamChanged();
				}
			}
		}
		
		[Column(Storage="_paswoord", DbType="NChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string paswoord
		{
			get
			{
				return this._paswoord;
			}
			set
			{
				if ((this._paswoord != value))
				{
					this.OnpaswoordChanging(value);
					this.SendPropertyChanging();
					this._paswoord = value;
					this.SendPropertyChanged("paswoord");
					this.OnpaswoordChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="NChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[Column(Storage="_versieTimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary versieTimeStamp
		{
			get
			{
				return this._versieTimeStamp;
			}
			set
			{
				if ((this._versieTimeStamp != value))
				{
					this.OnversieTimeStampChanging(value);
					this.SendPropertyChanging();
					this._versieTimeStamp = value;
					this.SendPropertyChanged("versieTimeStamp");
					this.OnversieTimeStampChanged();
				}
			}
		}
		
		[Column(Storage="_voorNaam", DbType="NVarChar(125)", UpdateCheck=UpdateCheck.Never)]
		public string voorNaam
		{
			get
			{
				return this._voorNaam;
			}
			set
			{
				if ((this._voorNaam != value))
				{
					this.OnvoorNaamChanging(value);
					this.SendPropertyChanging();
					this._voorNaam = value;
					this.SendPropertyChanged("voorNaam");
					this.OnvoorNaamChanged();
				}
			}
		}
		
		[Column(Storage="_achterNaam", DbType="NChar(125)", UpdateCheck=UpdateCheck.Never)]
		public string achterNaam
		{
			get
			{
				return this._achterNaam;
			}
			set
			{
				if ((this._achterNaam != value))
				{
					this.OnachterNaamChanging(value);
					this.SendPropertyChanging();
					this._achterNaam = value;
					this.SendPropertyChanged("achterNaam");
					this.OnachterNaamChanged();
				}
			}
		}
		
		[Column(Storage="_sein", DbType="NChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string sein
		{
			get
			{
				return this._sein;
			}
			set
			{
				if ((this._sein != value))
				{
					this.OnseinChanging(value);
					this.SendPropertyChanging();
					this._sein = value;
					this.SendPropertyChanged("sein");
					this.OnseinChanged();
				}
			}
		}
		
		[Association(Name="Gebruiker_Apotheker", Storage="_Apothekers", ThisKey="gebruikerId", OtherKey="gebruikerId")]
		public EntitySet<Apotheker> Apothekers
		{
			get
			{
				return this._Apothekers;
			}
			set
			{
				this._Apothekers.Assign(value);
			}
		}
		
		[Association(Name="Gebruiker_GebruikerRol", Storage="_GebruikerRols", ThisKey="gebruikerId", OtherKey="gebruikerId")]
		public EntitySet<GebruikerRol> GebruikerRols
		{
			get
			{
				return this._GebruikerRols;
			}
			set
			{
				this._GebruikerRols.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Apothekers(Apotheker entity)
		{
			this.SendPropertyChanging();
			entity.Gebruiker = this;
		}
		
		private void detach_Apothekers(Apotheker entity)
		{
			this.SendPropertyChanging();
			entity.Gebruiker = null;
		}
		
		private void attach_GebruikerRols(GebruikerRol entity)
		{
			this.SendPropertyChanging();
			entity.Gebruiker = this;
		}
		
		private void detach_GebruikerRols(GebruikerRol entity)
		{
			this.SendPropertyChanging();
			entity.Gebruiker = null;
		}
	}
	
	[Table(Name="dbo.Rol")]
	public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _rolId;
		
		private string _naam;
		
		private System.Data.Linq.Binary _versieTimeStamp;
		
		private string _omschrijving;
		
		private EntitySet<GebruikerRol> _GebruikerRols;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrolIdChanging(int value);
    partial void OnrolIdChanged();
    partial void OnnaamChanging(string value);
    partial void OnnaamChanged();
    partial void OnversieTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnversieTimeStampChanged();
    partial void OnomschrijvingChanging(string value);
    partial void OnomschrijvingChanged();
    #endregion
		
		public Rol()
		{
			this._GebruikerRols = new EntitySet<GebruikerRol>(new Action<GebruikerRol>(this.attach_GebruikerRols), new Action<GebruikerRol>(this.detach_GebruikerRols));
			OnCreated();
		}
		
		[Column(Storage="_rolId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int rolId
		{
			get
			{
				return this._rolId;
			}
			set
			{
				if ((this._rolId != value))
				{
					this.OnrolIdChanging(value);
					this.SendPropertyChanging();
					this._rolId = value;
					this.SendPropertyChanged("rolId");
					this.OnrolIdChanged();
				}
			}
		}
		
		[Column(Storage="_naam", DbType="NChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string naam
		{
			get
			{
				return this._naam;
			}
			set
			{
				if ((this._naam != value))
				{
					this.OnnaamChanging(value);
					this.SendPropertyChanging();
					this._naam = value;
					this.SendPropertyChanged("naam");
					this.OnnaamChanged();
				}
			}
		}
		
		[Column(Storage="_versieTimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary versieTimeStamp
		{
			get
			{
				return this._versieTimeStamp;
			}
			set
			{
				if ((this._versieTimeStamp != value))
				{
					this.OnversieTimeStampChanging(value);
					this.SendPropertyChanging();
					this._versieTimeStamp = value;
					this.SendPropertyChanged("versieTimeStamp");
					this.OnversieTimeStampChanged();
				}
			}
		}
		
		[Column(Storage="_omschrijving", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string omschrijving
		{
			get
			{
				return this._omschrijving;
			}
			set
			{
				if ((this._omschrijving != value))
				{
					this.OnomschrijvingChanging(value);
					this.SendPropertyChanging();
					this._omschrijving = value;
					this.SendPropertyChanged("omschrijving");
					this.OnomschrijvingChanged();
				}
			}
		}
		
		[Association(Name="Rol_GebruikerRol", Storage="_GebruikerRols", ThisKey="rolId", OtherKey="rolId")]
		public EntitySet<GebruikerRol> GebruikerRols
		{
			get
			{
				return this._GebruikerRols;
			}
			set
			{
				this._GebruikerRols.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GebruikerRols(GebruikerRol entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_GebruikerRols(GebruikerRol entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
	}
	
	[Table(Name="dbo.GebruikerRol")]
	public partial class GebruikerRol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _gebruikerRolId;
		
		private int _gebruikerId;
		
		private int _rolId;
		
		private EntityRef<Gebruiker> _Gebruiker;
		
		private EntityRef<Rol> _Rol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngebruikerRolIdChanging(int value);
    partial void OngebruikerRolIdChanged();
    partial void OngebruikerIdChanging(int value);
    partial void OngebruikerIdChanged();
    partial void OnrolIdChanging(int value);
    partial void OnrolIdChanged();
    #endregion
		
		public GebruikerRol()
		{
			this._Gebruiker = default(EntityRef<Gebruiker>);
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[Column(Storage="_gebruikerRolId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int gebruikerRolId
		{
			get
			{
				return this._gebruikerRolId;
			}
			set
			{
				if ((this._gebruikerRolId != value))
				{
					this.OngebruikerRolIdChanging(value);
					this.SendPropertyChanging();
					this._gebruikerRolId = value;
					this.SendPropertyChanged("gebruikerRolId");
					this.OngebruikerRolIdChanged();
				}
			}
		}
		
		[Column(Storage="_gebruikerId", DbType="Int NOT NULL")]
		public int gebruikerId
		{
			get
			{
				return this._gebruikerId;
			}
			set
			{
				if ((this._gebruikerId != value))
				{
					if (this._Gebruiker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngebruikerIdChanging(value);
					this.SendPropertyChanging();
					this._gebruikerId = value;
					this.SendPropertyChanged("gebruikerId");
					this.OngebruikerIdChanged();
				}
			}
		}
		
		[Column(Storage="_rolId", DbType="Int NOT NULL")]
		public int rolId
		{
			get
			{
				return this._rolId;
			}
			set
			{
				if ((this._rolId != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrolIdChanging(value);
					this.SendPropertyChanging();
					this._rolId = value;
					this.SendPropertyChanged("rolId");
					this.OnrolIdChanged();
				}
			}
		}
		
		[Association(Name="Gebruiker_GebruikerRol", Storage="_Gebruiker", ThisKey="gebruikerId", OtherKey="gebruikerId", IsForeignKey=true)]
		public Gebruiker Gebruiker
		{
			get
			{
				return this._Gebruiker.Entity;
			}
			set
			{
				Gebruiker previousValue = this._Gebruiker.Entity;
				if (((previousValue != value) 
							|| (this._Gebruiker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gebruiker.Entity = null;
						previousValue.GebruikerRols.Remove(this);
					}
					this._Gebruiker.Entity = value;
					if ((value != null))
					{
						value.GebruikerRols.Add(this);
						this._gebruikerId = value.gebruikerId;
					}
					else
					{
						this._gebruikerId = default(int);
					}
					this.SendPropertyChanged("Gebruiker");
				}
			}
		}
		
		[Association(Name="Rol_GebruikerRol", Storage="_Rol", ThisKey="rolId", OtherKey="rolId", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.GebruikerRols.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.GebruikerRols.Add(this);
						this._rolId = value.rolId;
					}
					else
					{
						this._rolId = default(int);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class CSLA_Apotheek_SelectResult
	{
		
		private int _apotheekId;
		
		private string _naam;
		
		private System.Data.Linq.Binary _versieTimeStamp;
		
		public CSLA_Apotheek_SelectResult()
		{
		}
		
		[Column(Storage="_apotheekId", DbType="Int NOT NULL")]
		public int apotheekId
		{
			get
			{
				return this._apotheekId;
			}
			set
			{
				if ((this._apotheekId != value))
				{
					this._apotheekId = value;
				}
			}
		}
		
		[Column(Storage="_naam", DbType="NVarChar(125) NOT NULL", CanBeNull=false)]
		public string naam
		{
			get
			{
				return this._naam;
			}
			set
			{
				if ((this._naam != value))
				{
					this._naam = value;
				}
			}
		}
		
		[Column(Storage="_versieTimeStamp", DbType="rowversion NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary versieTimeStamp
		{
			get
			{
				return this._versieTimeStamp;
			}
			set
			{
				if ((this._versieTimeStamp != value))
				{
					this._versieTimeStamp = value;
				}
			}
		}
	}
	
	public partial class CSLA_Apotheker_SelectResult
	{
		
		private int _apothekerId;
		
		private int _gebruikerId;
		
		private int _apotheekId;
		
		public CSLA_Apotheker_SelectResult()
		{
		}
		
		[Column(Storage="_apothekerId", DbType="Int NOT NULL")]
		public int apothekerId
		{
			get
			{
				return this._apothekerId;
			}
			set
			{
				if ((this._apothekerId != value))
				{
					this._apothekerId = value;
				}
			}
		}
		
		[Column(Storage="_gebruikerId", DbType="Int NOT NULL")]
		public int gebruikerId
		{
			get
			{
				return this._gebruikerId;
			}
			set
			{
				if ((this._gebruikerId != value))
				{
					this._gebruikerId = value;
				}
			}
		}
		
		[Column(Storage="_apotheekId", DbType="Int NOT NULL")]
		public int apotheekId
		{
			get
			{
				return this._apotheekId;
			}
			set
			{
				if ((this._apotheekId != value))
				{
					this._apotheekId = value;
				}
			}
		}
	}
	
	public partial class CSLA_Gebruiker_SelectResult
	{
		
		private int _gebruikerId;
		
		private string _gebruikerNaam;
		
		private string _paswoord;
		
		private string _email;
		
		private System.Data.Linq.Binary _versieTimeStamp;
		
		private string _voorNaam;
		
		private string _achterNaam;
		
		private string _sein;
		
		public CSLA_Gebruiker_SelectResult()
		{
		}
		
		[Column(Storage="_gebruikerId", DbType="Int NOT NULL")]
		public int gebruikerId
		{
			get
			{
				return this._gebruikerId;
			}
			set
			{
				if ((this._gebruikerId != value))
				{
					this._gebruikerId = value;
				}
			}
		}
		
		[Column(Storage="_gebruikerNaam", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string gebruikerNaam
		{
			get
			{
				return this._gebruikerNaam;
			}
			set
			{
				if ((this._gebruikerNaam != value))
				{
					this._gebruikerNaam = value;
				}
			}
		}
		
		[Column(Storage="_paswoord", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string paswoord
		{
			get
			{
				return this._paswoord;
			}
			set
			{
				if ((this._paswoord != value))
				{
					this._paswoord = value;
				}
			}
		}
		
		[Column(Storage="_email", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[Column(Storage="_versieTimeStamp", DbType="rowversion NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary versieTimeStamp
		{
			get
			{
				return this._versieTimeStamp;
			}
			set
			{
				if ((this._versieTimeStamp != value))
				{
					this._versieTimeStamp = value;
				}
			}
		}
		
		[Column(Storage="_voorNaam", DbType="NVarChar(125)")]
		public string voorNaam
		{
			get
			{
				return this._voorNaam;
			}
			set
			{
				if ((this._voorNaam != value))
				{
					this._voorNaam = value;
				}
			}
		}
		
		[Column(Storage="_achterNaam", DbType="NChar(125)")]
		public string achterNaam
		{
			get
			{
				return this._achterNaam;
			}
			set
			{
				if ((this._achterNaam != value))
				{
					this._achterNaam = value;
				}
			}
		}
		
		[Column(Storage="_sein", DbType="NChar(20)")]
		public string sein
		{
			get
			{
				return this._sein;
			}
			set
			{
				if ((this._sein != value))
				{
					this._sein = value;
				}
			}
		}
	}
	
	public partial class CSLA_GebruikerRol_SelectResult
	{
		
		private int _gebruikerRolId;
		
		private int _gebruikerId;
		
		private int _rolId;
		
		public CSLA_GebruikerRol_SelectResult()
		{
		}
		
		[Column(Storage="_gebruikerRolId", DbType="Int NOT NULL")]
		public int gebruikerRolId
		{
			get
			{
				return this._gebruikerRolId;
			}
			set
			{
				if ((this._gebruikerRolId != value))
				{
					this._gebruikerRolId = value;
				}
			}
		}
		
		[Column(Storage="_gebruikerId", DbType="Int NOT NULL")]
		public int gebruikerId
		{
			get
			{
				return this._gebruikerId;
			}
			set
			{
				if ((this._gebruikerId != value))
				{
					this._gebruikerId = value;
				}
			}
		}
		
		[Column(Storage="_rolId", DbType="Int NOT NULL")]
		public int rolId
		{
			get
			{
				return this._rolId;
			}
			set
			{
				if ((this._rolId != value))
				{
					this._rolId = value;
				}
			}
		}
	}
	
	public partial class CSLA_Rol_SelectResult
	{
		
		private int _rolId;
		
		private string _naam;
		
		private System.Data.Linq.Binary _versieTimeStamp;
		
		private string _omschrijving;
		
		public CSLA_Rol_SelectResult()
		{
		}
		
		[Column(Storage="_rolId", DbType="Int NOT NULL")]
		public int rolId
		{
			get
			{
				return this._rolId;
			}
			set
			{
				if ((this._rolId != value))
				{
					this._rolId = value;
				}
			}
		}
		
		[Column(Storage="_naam", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string naam
		{
			get
			{
				return this._naam;
			}
			set
			{
				if ((this._naam != value))
				{
					this._naam = value;
				}
			}
		}
		
		[Column(Storage="_versieTimeStamp", DbType="rowversion NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary versieTimeStamp
		{
			get
			{
				return this._versieTimeStamp;
			}
			set
			{
				if ((this._versieTimeStamp != value))
				{
					this._versieTimeStamp = value;
				}
			}
		}
		
		[Column(Storage="_omschrijving", DbType="NVarChar(MAX)")]
		public string omschrijving
		{
			get
			{
				return this._omschrijving;
			}
			set
			{
				if ((this._omschrijving != value))
				{
					this._omschrijving = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
