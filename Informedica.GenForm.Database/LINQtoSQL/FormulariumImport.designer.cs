#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Informedica.GenForm.Database.LINQtoSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FormulariumArthur")]
	public partial class FormulariumImportDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDoseringsadvies(Doseringsadvies instance);
    partial void UpdateDoseringsadvies(Doseringsadvies instance);
    partial void DeleteDoseringsadvies(Doseringsadvies instance);
    partial void InsertPreparaatDoseringsadvies(PreparaatDoseringsadvies instance);
    partial void UpdatePreparaatDoseringsadvies(PreparaatDoseringsadvies instance);
    partial void DeletePreparaatDoseringsadvies(PreparaatDoseringsadvies instance);
    partial void InsertPreparaatStof(PreparaatStof instance);
    partial void UpdatePreparaatStof(PreparaatStof instance);
    partial void DeletePreparaatStof(PreparaatStof instance);
    partial void InsertPreparaatToepassingsgroep(PreparaatToepassingsgroep instance);
    partial void UpdatePreparaatToepassingsgroep(PreparaatToepassingsgroep instance);
    partial void DeletePreparaatToepassingsgroep(PreparaatToepassingsgroep instance);
    partial void InsertPreparaatToediening(PreparaatToediening instance);
    partial void UpdatePreparaatToediening(PreparaatToediening instance);
    partial void DeletePreparaatToediening(PreparaatToediening instance);
    partial void InsertPreparaat(Preparaat instance);
    partial void UpdatePreparaat(Preparaat instance);
    partial void DeletePreparaat(Preparaat instance);
    partial void InsertDoseringsadviesToedieningswijze(DoseringsadviesToedieningswijze instance);
    partial void UpdateDoseringsadviesToedieningswijze(DoseringsadviesToedieningswijze instance);
    partial void DeleteDoseringsadviesToedieningswijze(DoseringsadviesToedieningswijze instance);
    partial void InsertDoseringsadviesToepassingsgroep(DoseringsadviesToepassingsgroep instance);
    partial void UpdateDoseringsadviesToepassingsgroep(DoseringsadviesToepassingsgroep instance);
    partial void DeleteDoseringsadviesToepassingsgroep(DoseringsadviesToepassingsgroep instance);
    #endregion
		
		public FormulariumImportDataContext() : 
				base(global::Informedica.GenForm.Database.Properties.Settings.Default.FormulariumArthurConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FormulariumImportDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FormulariumImportDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FormulariumImportDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FormulariumImportDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Doseringsadvies> Doseringsadvies
		{
			get
			{
				return this.GetTable<Doseringsadvies>();
			}
		}
		
		public System.Data.Linq.Table<PreparaatDoseringsadvies> PreparaatDoseringsadvies
		{
			get
			{
				return this.GetTable<PreparaatDoseringsadvies>();
			}
		}
		
		public System.Data.Linq.Table<PreparaatStof> PreparaatStof
		{
			get
			{
				return this.GetTable<PreparaatStof>();
			}
		}
		
		public System.Data.Linq.Table<PreparaatToepassingsgroep> PreparaatToepassingsgroep
		{
			get
			{
				return this.GetTable<PreparaatToepassingsgroep>();
			}
		}
		
		public System.Data.Linq.Table<PreparaatToediening> PreparaatToediening
		{
			get
			{
				return this.GetTable<PreparaatToediening>();
			}
		}
		
		public System.Data.Linq.Table<Preparaat> Preparaat
		{
			get
			{
				return this.GetTable<Preparaat>();
			}
		}
		
		public System.Data.Linq.Table<DoseringsadviesToedieningswijze> DoseringsadviesToedieningswijze
		{
			get
			{
				return this.GetTable<DoseringsadviesToedieningswijze>();
			}
		}
		
		public System.Data.Linq.Table<DoseringsadviesToepassingsgroep> DoseringsadviesToepassingsgroep
		{
			get
			{
				return this.GetTable<DoseringsadviesToepassingsgroep>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doseringsadvies")]
	public partial class Doseringsadvies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _doseringsadviesId;
		
		private string _adviestekst;
		
		private EntitySet<PreparaatDoseringsadvies> _PreparaatDoseringsadvies;
		
		private EntitySet<DoseringsadviesToedieningswijze> _DoseringsadviesToedieningswijze;
		
		private EntitySet<DoseringsadviesToepassingsgroep> _DoseringsadviesToepassingsgroep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndoseringsadviesIdChanging(int value);
    partial void OndoseringsadviesIdChanged();
    partial void OnadviestekstChanging(string value);
    partial void OnadviestekstChanged();
    #endregion
		
		public Doseringsadvies()
		{
			this._PreparaatDoseringsadvies = new EntitySet<PreparaatDoseringsadvies>(new Action<PreparaatDoseringsadvies>(this.attach_PreparaatDoseringsadvies), new Action<PreparaatDoseringsadvies>(this.detach_PreparaatDoseringsadvies));
			this._DoseringsadviesToedieningswijze = new EntitySet<DoseringsadviesToedieningswijze>(new Action<DoseringsadviesToedieningswijze>(this.attach_DoseringsadviesToedieningswijze), new Action<DoseringsadviesToedieningswijze>(this.detach_DoseringsadviesToedieningswijze));
			this._DoseringsadviesToepassingsgroep = new EntitySet<DoseringsadviesToepassingsgroep>(new Action<DoseringsadviesToepassingsgroep>(this.attach_DoseringsadviesToepassingsgroep), new Action<DoseringsadviesToepassingsgroep>(this.detach_DoseringsadviesToepassingsgroep));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doseringsadviesId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int doseringsadviesId
		{
			get
			{
				return this._doseringsadviesId;
			}
			set
			{
				if ((this._doseringsadviesId != value))
				{
					this.OndoseringsadviesIdChanging(value);
					this.SendPropertyChanging();
					this._doseringsadviesId = value;
					this.SendPropertyChanged("doseringsadviesId");
					this.OndoseringsadviesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adviestekst", DbType="NVarChar(MAX)")]
		public string adviestekst
		{
			get
			{
				return this._adviestekst;
			}
			set
			{
				if ((this._adviestekst != value))
				{
					this.OnadviestekstChanging(value);
					this.SendPropertyChanging();
					this._adviestekst = value;
					this.SendPropertyChanged("adviestekst");
					this.OnadviestekstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doseringsadvies_PreparaatDoseringsadvies", Storage="_PreparaatDoseringsadvies", ThisKey="doseringsadviesId", OtherKey="doseringsadviesId")]
		public EntitySet<PreparaatDoseringsadvies> PreparaatDoseringsadvies
		{
			get
			{
				return this._PreparaatDoseringsadvies;
			}
			set
			{
				this._PreparaatDoseringsadvies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doseringsadvies_DoseringsadviesToedieningswijze", Storage="_DoseringsadviesToedieningswijze", ThisKey="doseringsadviesId", OtherKey="doseringsadviesId")]
		public EntitySet<DoseringsadviesToedieningswijze> DoseringsadviesToedieningswijze
		{
			get
			{
				return this._DoseringsadviesToedieningswijze;
			}
			set
			{
				this._DoseringsadviesToedieningswijze.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doseringsadvies_DoseringsadviesToepassingsgroep", Storage="_DoseringsadviesToepassingsgroep", ThisKey="doseringsadviesId", OtherKey="doseringsadviesId")]
		public EntitySet<DoseringsadviesToepassingsgroep> DoseringsadviesToepassingsgroep
		{
			get
			{
				return this._DoseringsadviesToepassingsgroep;
			}
			set
			{
				this._DoseringsadviesToepassingsgroep.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PreparaatDoseringsadvies(PreparaatDoseringsadvies entity)
		{
			this.SendPropertyChanging();
			entity.Doseringsadvies = this;
		}
		
		private void detach_PreparaatDoseringsadvies(PreparaatDoseringsadvies entity)
		{
			this.SendPropertyChanging();
			entity.Doseringsadvies = null;
		}
		
		private void attach_DoseringsadviesToedieningswijze(DoseringsadviesToedieningswijze entity)
		{
			this.SendPropertyChanging();
			entity.Doseringsadvies = this;
		}
		
		private void detach_DoseringsadviesToedieningswijze(DoseringsadviesToedieningswijze entity)
		{
			this.SendPropertyChanging();
			entity.Doseringsadvies = null;
		}
		
		private void attach_DoseringsadviesToepassingsgroep(DoseringsadviesToepassingsgroep entity)
		{
			this.SendPropertyChanging();
			entity.Doseringsadvies = this;
		}
		
		private void detach_DoseringsadviesToepassingsgroep(DoseringsadviesToepassingsgroep entity)
		{
			this.SendPropertyChanging();
			entity.Doseringsadvies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreparaatDoseringsadvies")]
	public partial class PreparaatDoseringsadvies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _preparaatName;
		
		private int _doseringsadviesId;
		
		private System.Guid _preparaatName_ID;
		
		private EntityRef<Doseringsadvies> _Doseringsadvies;
		
		private EntityRef<Preparaat> _Preparaat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpreparaatNameChanging(string value);
    partial void OnpreparaatNameChanged();
    partial void OndoseringsadviesIdChanging(int value);
    partial void OndoseringsadviesIdChanged();
    partial void OnpreparaatName_IDChanging(System.Guid value);
    partial void OnpreparaatName_IDChanged();
    #endregion
		
		public PreparaatDoseringsadvies()
		{
			this._Doseringsadvies = default(EntityRef<Doseringsadvies>);
			this._Preparaat = default(EntityRef<Preparaat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preparaatName", DbType="NVarChar(MAX)")]
		public string preparaatName
		{
			get
			{
				return this._preparaatName;
			}
			set
			{
				if ((this._preparaatName != value))
				{
					this.OnpreparaatNameChanging(value);
					this.SendPropertyChanging();
					this._preparaatName = value;
					this.SendPropertyChanged("preparaatName");
					this.OnpreparaatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doseringsadviesId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int doseringsadviesId
		{
			get
			{
				return this._doseringsadviesId;
			}
			set
			{
				if ((this._doseringsadviesId != value))
				{
					if (this._Doseringsadvies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndoseringsadviesIdChanging(value);
					this.SendPropertyChanging();
					this._doseringsadviesId = value;
					this.SendPropertyChanged("doseringsadviesId");
					this.OndoseringsadviesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preparaatName_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid preparaatName_ID
		{
			get
			{
				return this._preparaatName_ID;
			}
			set
			{
				if ((this._preparaatName_ID != value))
				{
					if (this._Preparaat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpreparaatName_IDChanging(value);
					this.SendPropertyChanging();
					this._preparaatName_ID = value;
					this.SendPropertyChanged("preparaatName_ID");
					this.OnpreparaatName_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doseringsadvies_PreparaatDoseringsadvies", Storage="_Doseringsadvies", ThisKey="doseringsadviesId", OtherKey="doseringsadviesId", IsForeignKey=true)]
		public Doseringsadvies Doseringsadvies
		{
			get
			{
				return this._Doseringsadvies.Entity;
			}
			set
			{
				Doseringsadvies previousValue = this._Doseringsadvies.Entity;
				if (((previousValue != value) 
							|| (this._Doseringsadvies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Doseringsadvies.Entity = null;
						previousValue.PreparaatDoseringsadvies.Remove(this);
					}
					this._Doseringsadvies.Entity = value;
					if ((value != null))
					{
						value.PreparaatDoseringsadvies.Add(this);
						this._doseringsadviesId = value.doseringsadviesId;
					}
					else
					{
						this._doseringsadviesId = default(int);
					}
					this.SendPropertyChanged("Doseringsadvies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preparaat_PreparaatDoseringsadvies", Storage="_Preparaat", ThisKey="preparaatName_ID", OtherKey="preparaatName_ID", IsForeignKey=true)]
		public Preparaat Preparaat
		{
			get
			{
				return this._Preparaat.Entity;
			}
			set
			{
				Preparaat previousValue = this._Preparaat.Entity;
				if (((previousValue != value) 
							|| (this._Preparaat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Preparaat.Entity = null;
						previousValue.PreparaatDoseringsadvies.Remove(this);
					}
					this._Preparaat.Entity = value;
					if ((value != null))
					{
						value.PreparaatDoseringsadvies.Add(this);
						this._preparaatName_ID = value.preparaatName_ID;
					}
					else
					{
						this._preparaatName_ID = default(System.Guid);
					}
					this.SendPropertyChanged("Preparaat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreparaatStof")]
	public partial class PreparaatStof : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _preparaatName;
		
		private string _stofName;
		
		private System.Guid _preparaatName_ID;
		
		private System.Guid _stofName_ID;
		
		private EntityRef<Preparaat> _Preparaat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpreparaatNameChanging(string value);
    partial void OnpreparaatNameChanged();
    partial void OnstofNameChanging(string value);
    partial void OnstofNameChanged();
    partial void OnpreparaatName_IDChanging(System.Guid value);
    partial void OnpreparaatName_IDChanged();
    partial void OnstofName_IDChanging(System.Guid value);
    partial void OnstofName_IDChanged();
    #endregion
		
		public PreparaatStof()
		{
			this._Preparaat = default(EntityRef<Preparaat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preparaatName", DbType="NVarChar(MAX)")]
		public string preparaatName
		{
			get
			{
				return this._preparaatName;
			}
			set
			{
				if ((this._preparaatName != value))
				{
					this.OnpreparaatNameChanging(value);
					this.SendPropertyChanging();
					this._preparaatName = value;
					this.SendPropertyChanged("preparaatName");
					this.OnpreparaatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stofName", DbType="NVarChar(MAX)")]
		public string stofName
		{
			get
			{
				return this._stofName;
			}
			set
			{
				if ((this._stofName != value))
				{
					this.OnstofNameChanging(value);
					this.SendPropertyChanging();
					this._stofName = value;
					this.SendPropertyChanged("stofName");
					this.OnstofNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preparaatName_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid preparaatName_ID
		{
			get
			{
				return this._preparaatName_ID;
			}
			set
			{
				if ((this._preparaatName_ID != value))
				{
					if (this._Preparaat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpreparaatName_IDChanging(value);
					this.SendPropertyChanging();
					this._preparaatName_ID = value;
					this.SendPropertyChanged("preparaatName_ID");
					this.OnpreparaatName_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stofName_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid stofName_ID
		{
			get
			{
				return this._stofName_ID;
			}
			set
			{
				if ((this._stofName_ID != value))
				{
					this.OnstofName_IDChanging(value);
					this.SendPropertyChanging();
					this._stofName_ID = value;
					this.SendPropertyChanged("stofName_ID");
					this.OnstofName_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preparaat_PreparaatStof", Storage="_Preparaat", ThisKey="preparaatName_ID", OtherKey="preparaatName_ID", IsForeignKey=true)]
		public Preparaat Preparaat
		{
			get
			{
				return this._Preparaat.Entity;
			}
			set
			{
				Preparaat previousValue = this._Preparaat.Entity;
				if (((previousValue != value) 
							|| (this._Preparaat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Preparaat.Entity = null;
						previousValue.PreparaatStof.Remove(this);
					}
					this._Preparaat.Entity = value;
					if ((value != null))
					{
						value.PreparaatStof.Add(this);
						this._preparaatName_ID = value.preparaatName_ID;
					}
					else
					{
						this._preparaatName_ID = default(System.Guid);
					}
					this.SendPropertyChanged("Preparaat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreparaatToepassingsgroep")]
	public partial class PreparaatToepassingsgroep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _preparaatName;
		
		private string _toepassingsgroepName;
		
		private System.Guid _preparaatName_ID;
		
		private System.Guid _toepassingsgroepName_ID;
		
		private EntityRef<Preparaat> _Preparaat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpreparaatNameChanging(string value);
    partial void OnpreparaatNameChanged();
    partial void OntoepassingsgroepNameChanging(string value);
    partial void OntoepassingsgroepNameChanged();
    partial void OnpreparaatName_IDChanging(System.Guid value);
    partial void OnpreparaatName_IDChanged();
    partial void OntoepassingsgroepName_IDChanging(System.Guid value);
    partial void OntoepassingsgroepName_IDChanged();
    #endregion
		
		public PreparaatToepassingsgroep()
		{
			this._Preparaat = default(EntityRef<Preparaat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preparaatName", DbType="NVarChar(MAX)")]
		public string preparaatName
		{
			get
			{
				return this._preparaatName;
			}
			set
			{
				if ((this._preparaatName != value))
				{
					this.OnpreparaatNameChanging(value);
					this.SendPropertyChanging();
					this._preparaatName = value;
					this.SendPropertyChanged("preparaatName");
					this.OnpreparaatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toepassingsgroepName", DbType="NVarChar(MAX)")]
		public string toepassingsgroepName
		{
			get
			{
				return this._toepassingsgroepName;
			}
			set
			{
				if ((this._toepassingsgroepName != value))
				{
					this.OntoepassingsgroepNameChanging(value);
					this.SendPropertyChanging();
					this._toepassingsgroepName = value;
					this.SendPropertyChanged("toepassingsgroepName");
					this.OntoepassingsgroepNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preparaatName_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid preparaatName_ID
		{
			get
			{
				return this._preparaatName_ID;
			}
			set
			{
				if ((this._preparaatName_ID != value))
				{
					if (this._Preparaat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpreparaatName_IDChanging(value);
					this.SendPropertyChanging();
					this._preparaatName_ID = value;
					this.SendPropertyChanged("preparaatName_ID");
					this.OnpreparaatName_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toepassingsgroepName_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid toepassingsgroepName_ID
		{
			get
			{
				return this._toepassingsgroepName_ID;
			}
			set
			{
				if ((this._toepassingsgroepName_ID != value))
				{
					this.OntoepassingsgroepName_IDChanging(value);
					this.SendPropertyChanging();
					this._toepassingsgroepName_ID = value;
					this.SendPropertyChanged("toepassingsgroepName_ID");
					this.OntoepassingsgroepName_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preparaat_PreparaatToepassingsgroep", Storage="_Preparaat", ThisKey="preparaatName_ID", OtherKey="preparaatName_ID", IsForeignKey=true)]
		public Preparaat Preparaat
		{
			get
			{
				return this._Preparaat.Entity;
			}
			set
			{
				Preparaat previousValue = this._Preparaat.Entity;
				if (((previousValue != value) 
							|| (this._Preparaat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Preparaat.Entity = null;
						previousValue.PreparaatToepassingsgroep.Remove(this);
					}
					this._Preparaat.Entity = value;
					if ((value != null))
					{
						value.PreparaatToepassingsgroep.Add(this);
						this._preparaatName_ID = value.preparaatName_ID;
					}
					else
					{
						this._preparaatName_ID = default(System.Guid);
					}
					this.SendPropertyChanged("Preparaat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreparaatToediening")]
	public partial class PreparaatToediening : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _toedieningswijze;
		
		private string _preparaatName;
		
		private System.Guid _preparaatName_ID;
		
		private System.Guid _toedieningswijze_ID;
		
		private EntityRef<Preparaat> _Preparaat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntoedieningswijzeChanging(string value);
    partial void OntoedieningswijzeChanged();
    partial void OnpreparaatNameChanging(string value);
    partial void OnpreparaatNameChanged();
    partial void OnpreparaatName_IDChanging(System.Guid value);
    partial void OnpreparaatName_IDChanged();
    partial void Ontoedieningswijze_IDChanging(System.Guid value);
    partial void Ontoedieningswijze_IDChanged();
    #endregion
		
		public PreparaatToediening()
		{
			this._Preparaat = default(EntityRef<Preparaat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toedieningswijze", DbType="NVarChar(MAX)")]
		public string toedieningswijze
		{
			get
			{
				return this._toedieningswijze;
			}
			set
			{
				if ((this._toedieningswijze != value))
				{
					this.OntoedieningswijzeChanging(value);
					this.SendPropertyChanging();
					this._toedieningswijze = value;
					this.SendPropertyChanged("toedieningswijze");
					this.OntoedieningswijzeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preparaatName", DbType="NVarChar(MAX)")]
		public string preparaatName
		{
			get
			{
				return this._preparaatName;
			}
			set
			{
				if ((this._preparaatName != value))
				{
					this.OnpreparaatNameChanging(value);
					this.SendPropertyChanging();
					this._preparaatName = value;
					this.SendPropertyChanged("preparaatName");
					this.OnpreparaatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preparaatName_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid preparaatName_ID
		{
			get
			{
				return this._preparaatName_ID;
			}
			set
			{
				if ((this._preparaatName_ID != value))
				{
					if (this._Preparaat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpreparaatName_IDChanging(value);
					this.SendPropertyChanging();
					this._preparaatName_ID = value;
					this.SendPropertyChanged("preparaatName_ID");
					this.OnpreparaatName_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toedieningswijze_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid toedieningswijze_ID
		{
			get
			{
				return this._toedieningswijze_ID;
			}
			set
			{
				if ((this._toedieningswijze_ID != value))
				{
					this.Ontoedieningswijze_IDChanging(value);
					this.SendPropertyChanging();
					this._toedieningswijze_ID = value;
					this.SendPropertyChanged("toedieningswijze_ID");
					this.Ontoedieningswijze_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preparaat_PreparaatToediening", Storage="_Preparaat", ThisKey="preparaatName_ID", OtherKey="preparaatName_ID", IsForeignKey=true)]
		public Preparaat Preparaat
		{
			get
			{
				return this._Preparaat.Entity;
			}
			set
			{
				Preparaat previousValue = this._Preparaat.Entity;
				if (((previousValue != value) 
							|| (this._Preparaat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Preparaat.Entity = null;
						previousValue.PreparaatToediening.Remove(this);
					}
					this._Preparaat.Entity = value;
					if ((value != null))
					{
						value.PreparaatToediening.Add(this);
						this._preparaatName_ID = value.preparaatName_ID;
					}
					else
					{
						this._preparaatName_ID = default(System.Guid);
					}
					this.SendPropertyChanged("Preparaat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Preparaat")]
	public partial class Preparaat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _preparaatName;
		
		private System.Nullable<decimal> _prijs;
		
		private string _aflevervorm;
		
		private string _merk;
		
		private string _toedieningsvorm;
		
		private string _gebruiksnaam;
		
		private System.Guid _preparaatName_ID;
		
		private EntitySet<PreparaatDoseringsadvies> _PreparaatDoseringsadvies;
		
		private EntitySet<PreparaatStof> _PreparaatStof;
		
		private EntitySet<PreparaatToepassingsgroep> _PreparaatToepassingsgroep;
		
		private EntitySet<PreparaatToediening> _PreparaatToediening;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpreparaatNameChanging(string value);
    partial void OnpreparaatNameChanged();
    partial void OnprijsChanging(System.Nullable<decimal> value);
    partial void OnprijsChanged();
    partial void OnaflevervormChanging(string value);
    partial void OnaflevervormChanged();
    partial void OnmerkChanging(string value);
    partial void OnmerkChanged();
    partial void OntoedieningsvormChanging(string value);
    partial void OntoedieningsvormChanged();
    partial void OngebruiksnaamChanging(string value);
    partial void OngebruiksnaamChanged();
    partial void OnpreparaatName_IDChanging(System.Guid value);
    partial void OnpreparaatName_IDChanged();
    #endregion
		
		public Preparaat()
		{
			this._PreparaatDoseringsadvies = new EntitySet<PreparaatDoseringsadvies>(new Action<PreparaatDoseringsadvies>(this.attach_PreparaatDoseringsadvies), new Action<PreparaatDoseringsadvies>(this.detach_PreparaatDoseringsadvies));
			this._PreparaatStof = new EntitySet<PreparaatStof>(new Action<PreparaatStof>(this.attach_PreparaatStof), new Action<PreparaatStof>(this.detach_PreparaatStof));
			this._PreparaatToepassingsgroep = new EntitySet<PreparaatToepassingsgroep>(new Action<PreparaatToepassingsgroep>(this.attach_PreparaatToepassingsgroep), new Action<PreparaatToepassingsgroep>(this.detach_PreparaatToepassingsgroep));
			this._PreparaatToediening = new EntitySet<PreparaatToediening>(new Action<PreparaatToediening>(this.attach_PreparaatToediening), new Action<PreparaatToediening>(this.detach_PreparaatToediening));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preparaatName", DbType="NVarChar(MAX)")]
		public string preparaatName
		{
			get
			{
				return this._preparaatName;
			}
			set
			{
				if ((this._preparaatName != value))
				{
					this.OnpreparaatNameChanging(value);
					this.SendPropertyChanging();
					this._preparaatName = value;
					this.SendPropertyChanged("preparaatName");
					this.OnpreparaatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prijs", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> prijs
		{
			get
			{
				return this._prijs;
			}
			set
			{
				if ((this._prijs != value))
				{
					this.OnprijsChanging(value);
					this.SendPropertyChanging();
					this._prijs = value;
					this.SendPropertyChanged("prijs");
					this.OnprijsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aflevervorm", DbType="NVarChar(MAX)")]
		public string aflevervorm
		{
			get
			{
				return this._aflevervorm;
			}
			set
			{
				if ((this._aflevervorm != value))
				{
					this.OnaflevervormChanging(value);
					this.SendPropertyChanging();
					this._aflevervorm = value;
					this.SendPropertyChanged("aflevervorm");
					this.OnaflevervormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_merk", DbType="NVarChar(MAX)")]
		public string merk
		{
			get
			{
				return this._merk;
			}
			set
			{
				if ((this._merk != value))
				{
					this.OnmerkChanging(value);
					this.SendPropertyChanging();
					this._merk = value;
					this.SendPropertyChanged("merk");
					this.OnmerkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toedieningsvorm", DbType="NVarChar(MAX)")]
		public string toedieningsvorm
		{
			get
			{
				return this._toedieningsvorm;
			}
			set
			{
				if ((this._toedieningsvorm != value))
				{
					this.OntoedieningsvormChanging(value);
					this.SendPropertyChanging();
					this._toedieningsvorm = value;
					this.SendPropertyChanged("toedieningsvorm");
					this.OntoedieningsvormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gebruiksnaam", DbType="NVarChar(MAX)")]
		public string gebruiksnaam
		{
			get
			{
				return this._gebruiksnaam;
			}
			set
			{
				if ((this._gebruiksnaam != value))
				{
					this.OngebruiksnaamChanging(value);
					this.SendPropertyChanging();
					this._gebruiksnaam = value;
					this.SendPropertyChanged("gebruiksnaam");
					this.OngebruiksnaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preparaatName_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid preparaatName_ID
		{
			get
			{
				return this._preparaatName_ID;
			}
			set
			{
				if ((this._preparaatName_ID != value))
				{
					this.OnpreparaatName_IDChanging(value);
					this.SendPropertyChanging();
					this._preparaatName_ID = value;
					this.SendPropertyChanged("preparaatName_ID");
					this.OnpreparaatName_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preparaat_PreparaatDoseringsadvies", Storage="_PreparaatDoseringsadvies", ThisKey="preparaatName_ID", OtherKey="preparaatName_ID")]
		public EntitySet<PreparaatDoseringsadvies> PreparaatDoseringsadvies
		{
			get
			{
				return this._PreparaatDoseringsadvies;
			}
			set
			{
				this._PreparaatDoseringsadvies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preparaat_PreparaatStof", Storage="_PreparaatStof", ThisKey="preparaatName_ID", OtherKey="preparaatName_ID")]
		public EntitySet<PreparaatStof> PreparaatStof
		{
			get
			{
				return this._PreparaatStof;
			}
			set
			{
				this._PreparaatStof.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preparaat_PreparaatToepassingsgroep", Storage="_PreparaatToepassingsgroep", ThisKey="preparaatName_ID", OtherKey="preparaatName_ID")]
		public EntitySet<PreparaatToepassingsgroep> PreparaatToepassingsgroep
		{
			get
			{
				return this._PreparaatToepassingsgroep;
			}
			set
			{
				this._PreparaatToepassingsgroep.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preparaat_PreparaatToediening", Storage="_PreparaatToediening", ThisKey="preparaatName_ID", OtherKey="preparaatName_ID")]
		public EntitySet<PreparaatToediening> PreparaatToediening
		{
			get
			{
				return this._PreparaatToediening;
			}
			set
			{
				this._PreparaatToediening.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PreparaatDoseringsadvies(PreparaatDoseringsadvies entity)
		{
			this.SendPropertyChanging();
			entity.Preparaat = this;
		}
		
		private void detach_PreparaatDoseringsadvies(PreparaatDoseringsadvies entity)
		{
			this.SendPropertyChanging();
			entity.Preparaat = null;
		}
		
		private void attach_PreparaatStof(PreparaatStof entity)
		{
			this.SendPropertyChanging();
			entity.Preparaat = this;
		}
		
		private void detach_PreparaatStof(PreparaatStof entity)
		{
			this.SendPropertyChanging();
			entity.Preparaat = null;
		}
		
		private void attach_PreparaatToepassingsgroep(PreparaatToepassingsgroep entity)
		{
			this.SendPropertyChanging();
			entity.Preparaat = this;
		}
		
		private void detach_PreparaatToepassingsgroep(PreparaatToepassingsgroep entity)
		{
			this.SendPropertyChanging();
			entity.Preparaat = null;
		}
		
		private void attach_PreparaatToediening(PreparaatToediening entity)
		{
			this.SendPropertyChanging();
			entity.Preparaat = this;
		}
		
		private void detach_PreparaatToediening(PreparaatToediening entity)
		{
			this.SendPropertyChanging();
			entity.Preparaat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoseringsadviesToedieningswijze")]
	public partial class DoseringsadviesToedieningswijze : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _toedieningswijze;
		
		private int _doseringsadviesId;
		
		private System.Guid _toedieningswijze_ID;
		
		private EntityRef<Doseringsadvies> _Doseringsadvies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntoedieningswijzeChanging(string value);
    partial void OntoedieningswijzeChanged();
    partial void OndoseringsadviesIdChanging(int value);
    partial void OndoseringsadviesIdChanged();
    partial void Ontoedieningswijze_IDChanging(System.Guid value);
    partial void Ontoedieningswijze_IDChanged();
    #endregion
		
		public DoseringsadviesToedieningswijze()
		{
			this._Doseringsadvies = default(EntityRef<Doseringsadvies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toedieningswijze", DbType="NVarChar(MAX)")]
		public string toedieningswijze
		{
			get
			{
				return this._toedieningswijze;
			}
			set
			{
				if ((this._toedieningswijze != value))
				{
					this.OntoedieningswijzeChanging(value);
					this.SendPropertyChanging();
					this._toedieningswijze = value;
					this.SendPropertyChanged("toedieningswijze");
					this.OntoedieningswijzeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doseringsadviesId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int doseringsadviesId
		{
			get
			{
				return this._doseringsadviesId;
			}
			set
			{
				if ((this._doseringsadviesId != value))
				{
					if (this._Doseringsadvies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndoseringsadviesIdChanging(value);
					this.SendPropertyChanging();
					this._doseringsadviesId = value;
					this.SendPropertyChanged("doseringsadviesId");
					this.OndoseringsadviesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toedieningswijze_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid toedieningswijze_ID
		{
			get
			{
				return this._toedieningswijze_ID;
			}
			set
			{
				if ((this._toedieningswijze_ID != value))
				{
					this.Ontoedieningswijze_IDChanging(value);
					this.SendPropertyChanging();
					this._toedieningswijze_ID = value;
					this.SendPropertyChanged("toedieningswijze_ID");
					this.Ontoedieningswijze_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doseringsadvies_DoseringsadviesToedieningswijze", Storage="_Doseringsadvies", ThisKey="doseringsadviesId", OtherKey="doseringsadviesId", IsForeignKey=true)]
		public Doseringsadvies Doseringsadvies
		{
			get
			{
				return this._Doseringsadvies.Entity;
			}
			set
			{
				Doseringsadvies previousValue = this._Doseringsadvies.Entity;
				if (((previousValue != value) 
							|| (this._Doseringsadvies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Doseringsadvies.Entity = null;
						previousValue.DoseringsadviesToedieningswijze.Remove(this);
					}
					this._Doseringsadvies.Entity = value;
					if ((value != null))
					{
						value.DoseringsadviesToedieningswijze.Add(this);
						this._doseringsadviesId = value.doseringsadviesId;
					}
					else
					{
						this._doseringsadviesId = default(int);
					}
					this.SendPropertyChanged("Doseringsadvies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoseringsadviesToepassingsgroep")]
	public partial class DoseringsadviesToepassingsgroep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _doseringsadviesId;
		
		private string _toepassingsgroepName;
		
		private System.Guid _toepassingsgroepName_ID;
		
		private EntityRef<Doseringsadvies> _Doseringsadvies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndoseringsadviesIdChanging(int value);
    partial void OndoseringsadviesIdChanged();
    partial void OntoepassingsgroepNameChanging(string value);
    partial void OntoepassingsgroepNameChanged();
    partial void OntoepassingsgroepName_IDChanging(System.Guid value);
    partial void OntoepassingsgroepName_IDChanged();
    #endregion
		
		public DoseringsadviesToepassingsgroep()
		{
			this._Doseringsadvies = default(EntityRef<Doseringsadvies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doseringsadviesId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int doseringsadviesId
		{
			get
			{
				return this._doseringsadviesId;
			}
			set
			{
				if ((this._doseringsadviesId != value))
				{
					if (this._Doseringsadvies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndoseringsadviesIdChanging(value);
					this.SendPropertyChanging();
					this._doseringsadviesId = value;
					this.SendPropertyChanged("doseringsadviesId");
					this.OndoseringsadviesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toepassingsgroepName", DbType="NVarChar(MAX)")]
		public string toepassingsgroepName
		{
			get
			{
				return this._toepassingsgroepName;
			}
			set
			{
				if ((this._toepassingsgroepName != value))
				{
					this.OntoepassingsgroepNameChanging(value);
					this.SendPropertyChanging();
					this._toepassingsgroepName = value;
					this.SendPropertyChanged("toepassingsgroepName");
					this.OntoepassingsgroepNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toepassingsgroepName_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid toepassingsgroepName_ID
		{
			get
			{
				return this._toepassingsgroepName_ID;
			}
			set
			{
				if ((this._toepassingsgroepName_ID != value))
				{
					this.OntoepassingsgroepName_IDChanging(value);
					this.SendPropertyChanging();
					this._toepassingsgroepName_ID = value;
					this.SendPropertyChanged("toepassingsgroepName_ID");
					this.OntoepassingsgroepName_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doseringsadvies_DoseringsadviesToepassingsgroep", Storage="_Doseringsadvies", ThisKey="doseringsadviesId", OtherKey="doseringsadviesId", IsForeignKey=true)]
		public Doseringsadvies Doseringsadvies
		{
			get
			{
				return this._Doseringsadvies.Entity;
			}
			set
			{
				Doseringsadvies previousValue = this._Doseringsadvies.Entity;
				if (((previousValue != value) 
							|| (this._Doseringsadvies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Doseringsadvies.Entity = null;
						previousValue.DoseringsadviesToepassingsgroep.Remove(this);
					}
					this._Doseringsadvies.Entity = value;
					if ((value != null))
					{
						value.DoseringsadviesToepassingsgroep.Add(this);
						this._doseringsadviesId = value.doseringsadviesId;
					}
					else
					{
						this._doseringsadviesId = default(int);
					}
					this.SendPropertyChanged("Doseringsadvies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
